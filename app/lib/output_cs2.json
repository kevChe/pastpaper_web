[{"Paper_No":"0478_m19_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA pizza ordering service allows customers to design their own pizza. There are three sizes: small, \nmedium and large. A pizza can have a thick or thin base. All pizzas come with tomato and cheese \ntoppings as standard and there are six additional types of topping available:\n\u2022 \nPepperoni\n\u2022 \nChicken\n\u2022 \nExtra cheese\n\u2022 \nMushrooms\n\u2022 \nSpinach\n\u2022 \nOlives\nPizzas always come with tomato and cheese toppings as standard, and can have up to three \nadditional toppings. Customers need to be able to design their own pizza and then confirm or \nchange it. Records are kept showing the number of pizzas sold for each base and size. The number \nof sales for each additional topping is also recorded.\nWrite and test a program or programs for the pizza ordering service. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTASK 1 \u2013 Design your pizza.\nThe customer is given choices of size, base and additional toppings (number and type) as stated \nabove. Only valid choices can be accepted. The customer is asked to confirm their order or alter \ntheir choices or not proceed. If the customer confirms their order they are given a unique order \nnumber.\nTASK 2 \u2013 Record the choices.\nExtend TASK 1 to record totals for the choices made for ordered pizzas only and calculate the total \nnumber of pizzas ordered.\nTASK 3 \u2013 Find the most and least popular additional pizza toppings.\nUsing your results from TASK 2, display the most popular and least popular additional toppings as a \npercentage of the total number of additional toppings ordered.\n1 \n All variables, constants and other identifiers should have meaningful names.\nState one constant and one variable that you could have used for Task 1. Give the value that \nwould be assigned to the constant. Give the data type for the variable. Explain what each one \ncould be used for.\nConstant name  \nValue  \nUse  \nVariable name  \nData type  \nUse  \n","Marks":"[6]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"Section A \n1(a) \nMany correct answers, they must be meaningful. The names are examples only. \nConstant name \nMax_Extra_Top \nValue  ","key":0.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":1,"Question":"(b) \n Explain how you would need to change your program for Task 1 if there were three bases to \nchoose from (thick, thin and extra crispy).\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"Use  \nStoring the number of extra toppings a pizza can have \nVariable name \nNextOrderNo \nData type \ninteger \nUse  \nstoring the next order number available ","key":1.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":1,"Question":"(c) \n (i) Write an algorithm for choosing the additional toppings in Task 1, using either \npseudocode, programming statements or a flowchart. Your algorithm must only include \nthis part of Task 1.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"1(b) \nAny two from \nStore an extra type of base  \nDisplay another option \nChange the if statement\/validation check to include the third option\/\/extra crispy ","key":2.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":1,"Question":"(ii) \n Explain how your algorithm in part (c)(i) only allowed valid choices for the additional \npizza toppings.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"1(c)(i) \nAny five from: \nEnter Number of toppings \nCheck number of toppings chosen \nDisplay toppings available \nProvide method of selection \nOnly accept correct selections \nError message if topping not found \nFinish selection \nThere are many possible correct answers, this is an example only. \nSample answer \nPRINT \"Pepperoni \n1\" \nPRINT \"Chicken \n2\" \nPRINT \"Extra cheese  3\" \nPRINT \"Mushrooms \n4\" \nPRINT \"Spinach \n5\" \nPRINT \"Olives \n6\" \nREPEAT \n  PRINT \"How many extra toppings do you want\" \n  INPUT NoTopping \nUNTIL NoTopping >= 0 and NoTopping <=3 \nWHILE NoTopping >0 DO \n  PRINT \"Enter Topping \",  NoTopping \n  INPUT ToppingType \n  CASE OF ToppingType  \n1: Pepperoni \u2190 Pepperoni + 1 \n2: Chicken \u2190 Chicken + 1 \n3: ExtraCheese \u2190 ExtraCheese + 1 \n4: Mushrooms \u2190 Mushrooms + 1 \n5: Spinach \u2190 Spinach + 1 \n6: Olives \u2190 Olives + 1 \n  OTHERWISE: PRINT \"Error\" \n  ENDCASE ","key":3.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":1,"Question":"(d) \n  Explain how your program completed Task 3. Any programming statements used in your \nanswer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"1(c)(i) \n  IF ToppingType >=1 AND ToppingType <=6  \n THEN \n PizzaTop[NoTopping] \u2190 ToppingType \n NoTopping \u2190 NoTopping - 1 \n  ENDIF \nENDWHILE \n1(c)(ii) \nAnswers must relate to the algorithm provided for (c)(i) \nAny three from: \nDisplay the valid toppings e.g. choose from a menu \nCheck input for each topping is valid \n\u00ab method e.g. using a CASE statement \/ range check \nProvide a suitable error message for invalid toppings \nProvide a method to re-input a topping e.g. use of REPEAT\u00abUNTIL ","key":4.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":2,"Question":"(a) \nSection B\n2 \n An algorithm has been written in pseudocode to input 50 numbers and total only the positive \nnumbers.\n  Count \u2190 1\n  Total \u2190 Count\n  REPEAT \n    INPUT Number\n    IF Number <> 0 \n    THEN \n      Total \u2190 Total + Count\n    ENDIF\n    Count \u2190 Count + 1\n  UNTIL Count < 50\n  PRINT Total\nFind the four errors in the pseudocode and suggest a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"1(d) \nExplanation \nAny four from: \nHow the total of each additional pizza toppings was checked \nHow the largest value was selected \nHow the smallest value was selected \nHow the topping descriptions were recorded for largest\/smallest \nMethod used to calculate percentages \u00ab \n\u00ab calculation relates to the total number of additional toppings ordered \nDisplay results including suitable messages ","key":5.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":2,"Question":"(b) \n Show how you would change the corrected algorithm to only total numbers greater than 0 \nand less than 20.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"Section B \n2(a) \nTotal \u2190 Count should be  Total \u2190 0 \nNumber <> 0 should be Number > 0  \nTotal \u2190 Total + Count should be Total \u2190 Total + Number \nUNTIL Count < 50 should be  \nUNTIL Count > 50, UNTIL Count >= 51, UNTIL Count = 51 \n1 mark for each error identified + suggested correction ","key":6.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":3,"Question":"\nQuestion 3 starts on page 10.\n3 \nThis flowchart inputs the type of passenger for a survey: S for Senior, A for Adult, C for Child. All \nother values are ignored, apart from Z which ends the process. \nSTART\nEND\nSenior   0\nAdult   0\nChild   0\nSenior   Senior + 1\nINPUT Type\nOUTPUT \"Seniors \", Senior\nOUTPUT \"Adults \", Adult\nOUTPUT \"Children \", Child\nIs Type =\n\"S\" ?\nNo\nYes\nAdult   Adult + 1\nIs Type =\n\"A\" ?\nNo\nYes\nChild   Child + 1\nIs Type =\n\"C\" ?\nNo\nNo\nYes\nIs Type =\n\"Z\" ?\nYes\nComplete the trace table for the passenger input data: \nS, S, S, A, C, C, C, A, A, A, A, W, S, S, D, C, Z, D, S\nSenior\nAdult\nChild\nType\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"2(b) \nThe test should be IF Number > 0 AND Number <20 \nOne mark for both ends of the range and one mark for the AND. ","key":7.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":4,"Question":"\n4 \nFor each of the four groups of statements in the table, place a tick in the correct column to show \nwhether it is an example of Selection or Repetition.\nStatements\nSelection\nRepetition\nFOR X \u2190 1 TO 10\n  SUM \u2190 SUM + 1\nNEXT X\nWHILE X > 10 DO\n  SUM \u2190 SUM + 1\n  X \u2190 X - 1\nENDWHILE\nIF X > 10\nTHEN \n  SUM \u2190 SUM + 1\n  X \u2190 X - 1\nENDIF\nREPEAT\n  SUM \u2190 SUM + 1\n  X \u2190 X - 1\nUNTIL X > 10\n","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"3 \nSenior \nAdult \nChild \nType \nOUTPUT \n0 \n0 \n0 \nS ","key":8.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":5,"Question":"(a) \n5 \nA programmer restricts input values to less than 90 and greater than 60.\n State whether this is called validation or verification.\nName the check that needs to be used.\n","Marks":"[2]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"S ","key":9.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":5,"Question":"(b) \n State three different types of test data the programmer would need to use. Give an example \nof each type and the reason that the programmer chose that test data.\nType 1  \nExample  \nReason  \nType 2  \nExample  \nReason  \nType 3  \nExample  \nReason  \n","Marks":"[9]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"S ","key":10.0},{"Paper_No":"0478_m19_qp_22.pdf","Question_No":6,"Question":"\n6 \nA database table, BIKETYRES, is used to keep a record of tyres for sale in a cycle shop.\nTyres are categorised by width and diameter in millimetres, whether they have an inner tube and \nthe type of terrain for which they are designed.\nTyre Code\nWidth\nDiameter\nTube\nTerrain\nStock Level\nSLTT\n23\n700\nYES\nAsphalt\n18\nMLNT\n24\n700\nNO\nAsphalt\n23\nLLNT\n28\n700\nNO\nAsphalt\n19\nSLTM\n23\n700\nYES\nMixed\n22\nMLTM\n24\n700\nYES\nMixed\n14\nLLTM\n28\n700\nYES\nMixed\n12\nSLTH\n23\n700\nYES\nHard\n10\nMLTH\n24\n700\nYES\nHard\n5\nLLNH\n28\n700\nNO\nHard\n7\nSLNM\n23\n700\nNO\nMixed\n12\nMLNM\n24\n700\nNO\nMixed\n22\nLLNM\n28\n700\nNO\nMixed\n18\nSSNT\n23\n650\nNO\nAsphalt\n10\nMSNT\n24\n650\nNO\nAsphalt\n8\nSSTM\n23\n650\nYES\nMixed\n5\nMSNM\n24\n650\nNO\nMixed\n4\nThe query-by-example grid below displays the tyre code and the stock level of all 28 mm width \ntyres suitable for mixed terrain.\nField: Tyre Code\nStock Level\nWidth\nTerrain\nTable: BIKETYRES\nBIKETYRES\nBIKETYRES\nBIKETYRES\nSort:\nShow:\n3\n3\nCriteria:\n= 28\n= 'Mixed'\nor:\nAlter the query to show the tyre code and stock level in ascending order of stock level for all \n24 mm asphalt terrain tyres. Write the new query in the following query-by-example grid.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"A ","key":11.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":1,"Question":"(s) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA car buying service helps customers calculate the price of buying a new car from Snazzy Autos. \nThere are three models of car available: hatchback, saloon and estate. A car can be bought with \noptional extras.\nModel\nPrice\nOptional extra\nPrice\nHatchback\nRs 5.35 lakh\nSet of luxury seats\nRs 45000\nSaloon\nRs 4.95 lakh\nSatellite navigation\nRs 5500\nEstate\nRs 6.25 lakh\nParking sensors\nRs 10000\nBluetooth connectivity\nRs 350\nSound system\nRs 1000\nSnazzy Autos customers buying a new car can trade in an old car. Offers from Rs 10000 to \nRs 1.00 lakh can be made for an old car. If an old car is not traded in, then a discount of 5% is taken \noff the price of the new car and any optional extras. In addition, repeat customers are offered a \ndiscount of 10% off any optional extras and 10% off the price of the new car before trade-in. \nCustomers can either pay for the new car in full or make monthly payments over several years. \nWrite and test a program or programs for the car buying service. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Calculate the price\nCustomers choose the model of car and select any optional extras required. Only valid choices can \nbe accepted for the model and the extras. The customer is asked if they are an existing customer and \nif they have an old car to trade in. If the customer trades in an old car the amount offered by Snazzy \nAutos is entered. The price of the new car including model and extras is displayed. Any discount or \ntrade-in amounts are displayed and the total price to pay is calculated and displayed. \nTask 2 \u2013 Calculate the payment\nExtend Task 1 to display these payment methods:\n\u2022 \nfull amount paid now customer receives cashback of 1% on the total price\n\u2022 \nequal monthly payments are made over four years with no extra charge\n\u2022 \nthe total price is increased by 5%; equal monthly payments are made over seven years. \nFor each payment method display: the total amount to pay, the amount of each payment, the number \nof payments and cashback where appropriate.\nTask 3 \u2013 New full amount payment offer\nExtend Task 2 to offer customers who decide to pay the full amount now either the 1% cashback or \nthe chosen optional extras free. Customers are shown the offer that is the best value first and the \nother as an alternative. Details of each offer must be displayed in full.\n1  \nAll variables, constants and other identifiers must have meaningful names.\n(a) State the name of one constant that you could have used for Task 1. Give the value that \nwould be assigned to the constant. State the use of this constant.\nConstant name  \nValue  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"C ","key":12.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":1,"Question":"(b) \n State the name of the variable that you used to store the amount offered for the trade-in of \nan old car in Task 1. Give the most appropriate data type for this variable. Explain how your \nprogram ensured that any data entered for the trade-in offer was valid.\nVariable name  \nData type  \nValidation  \n","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"C ","key":13.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":1,"Question":"(c) \n Snazzy Autos has decided to add another model to the cars available in Task 1. The new \nmodel is a convertible, price Rs 6.75 lakh. Explain the changes required to your program for \nTask 1. \n  ","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"C ","key":14.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":1,"Question":"(d) \n Write an algorithm for Task 2, using either pseudocode, programming statements or a \nflowchart. Assume that Task 1 has been completed.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"A ","key":15.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":1,"Question":"(e) \n Explain how your program completed Task 3. Assume that Task 2 has been completed.  \nAny programming statements used in your answer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"A ","key":16.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":2,"Question":"(a) \nSection B starts on page 8.\nSection B\n2 \n An algorithm has been written in pseudocode to input 50 numbers. Positive numbers are \nstored in the array PosNum[ ]. Negative numbers are stored in the array NegNum[ ].  \nZeros are not included in the positive and negative counts.\nCount \u2190 0\nPosCount \u2190 Count\nNegCount \u2190 Count\nREPEAT \n    INPUT Number\n    IF Number > 0 \n      THEN \n        PosCount \u2190 PosCount + 1\n        PosNum[PosCount] \u2190 Number\n      ELSE\n        NegCount \u2190 NegCount + 1\n        NegNum[NegCount] \u2190 Number\n    ENDIF\n    Count \u2190 Count + 1\nUNTIL Count >= 50\nOUTPUT \"There are \", PosCount,\" positive numbers\"\nOUTPUT \"There are \", NegCount,\" negative numbers\"\nDescribe the error in the pseudocode and write the correction for this error.\nError  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"A ","key":17.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":2,"Question":"(b) \n The algorithm needs to be changed so there is no limit to how many numbers can be input. \nWhen the number 9999 is input, the algorithm stops more numbers being input and outputs \nthe results. The number 9999 is not to be stored nor counted as a positive number. \nExplain how you would change the algorithm.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"A ","key":18.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":3,"Question":"(a) \n3 \nThis flowchart inputs student percentage marks for three examinations. If the average of these \nmarks is 80% or over then a distinction grade is awarded. If the average of these marks is less \nthan 40% then a fail grade is awarded. Otherwise a pass grade is awarded. \nSTART\nINPUT\nMark1,Mark2,Mark3\nEND\nOUTPUT\n\"Pass\"\nOUTPUT\n\"Distinction\"\nOUTPUT\n\"Fail\"\nTotal   Mark1 +\nMark2 + Mark3\nIS\nAverage >= 80 ?\nIS\nAverage < 40 ?\nAverage   Total \/ 3\nYes\nNo\nNo\nYes\n Complete a trace table for each set of input data: \nSet 1: 88, 74, 60\nMark1\nMark2\nMark3\nTotal\nAverage\nOUTPUT\nSet 2: 20, 33, 67\nMark1\nMark2\nMark3\nTotal\nAverage\nOUTPUT\nSet 3: 79, 91, 70\nMark1\nMark2\nMark3\nTotal\nAverage\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"W \nS ","key":19.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":3,"Question":"(b) \n It has been decided to include an extra grade of Merit when the average of the marks is 60% \nor more, and less than 80%. Describe the changes that will need to be made to the flowchart. \n  ","Marks":"[3]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"S ","key":20.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":4,"Question":"\n4 \nExplain why validation and verification checks are needed when data is input. \nInclude an example of each type of check in your answer.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"D \nC ","key":21.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":5,"Question":"(a) \nQuestion 5 starts on page 14.\n5 \nA database table, BOX, is used to keep a record of boxes made and sold by a craftsman. Boxes \nare categorised by:\n\u2022 \nSIZE \u2013 small, medium or large\n\u2022 \nSHAPE \u2013 brief description for example \u2018star shaped\u2019\n\u2022 \nWOOD \u2013 maple, beech, walnut or ebony\n\u2022 \nPRICE \u2013 price in $\n\u2022 \nSOLD \u2013 whether the box is sold or not. \nA database management system uses these data types:\nText   Number   Currency   Boolean\n Select the most appropriate data type for each field from the four types shown. State the \nreason why you chose the data type.\nSIZE data type  \nReason  \nSHAPE data type  \nReason  \nWOOD data type  \nReason  \nPRICE data type  \nReason  \nSOLD data type  \nReason  \n","Marks":"[5]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"Z \nSeniors 5 \nAdults 5 \nChildren 4 \nOne mark for each correct column. ","key":22.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":5,"Question":"(b) \n (i) Complete the query-by-example grid below to only display the price of small walnut \nboxes.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"4 \nStatements \nSelection \nRepetition \nFOR X \u2190 1 TO 10 \n  SUM \u2190 SUM + 1 \nNEXT X ","key":23.0},{"Paper_No":"0478_m20_qp_22.pdf","Question_No":5,"Question":"(ii) \n The query-by-example grid from part (b)(i) needs to be changed to show both walnut \nand beech boxes and display the wood used. Only one column needs to be changed.  \nWrite the changed column.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[2]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"WHILE X > 10 DO \n  SUM \u2190 SUM + 1 \n  X \u2190 X - 1 \nENDWHILE ","key":24.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA program is needed for a quiz to help younger students to practise their multiplication tables. There \nneeds to be two ways of using the quiz; testing and learning.\nTesting: the student is given one attempt at answering each question and the score is calculated for \nthe whole test.\nLearning: the student is given up to three attempts to get their answer to each question correct. There \nis no scoring.\nA student can choose which multiplication table, from 2 to 12, to use for the quiz. There are five \nquestions in each quiz, each question must use the chosen multiplication table and a different whole \nnumber (from 1 to 12) as the multiplier.\nWrite and test a program or programs for a multiplication tables quiz.\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Testing a student\nStudents enter their name and choice of multiplication table. Each question is displayed on the screen \none at a time, for example:\nQuestion 1\n2 X 7 = \nStudents enter their answer and move on to the next question. A running total of correct answers \n(score) is kept.  At the end of the quiz the student\u2019s name and score are displayed with a personalised \nmessage related to the score, for example:\nAarav your score is 5\/5\nWell done full marks\nDiya your score is 3\/5\nHave another practice\nTask 2 \u2013 Student learning\nStudents enter their name and choice of multiplication table. Each question is displayed on the screen \nas in Task 1. If an answer is correct, a personalised message containing the student\u2019s name confirms \nthis, the quiz then moves to the next question. If an answer is incorrect, a personalised message \ncontaining the student\u2019s name and a hint is displayed, for example:\nAarav your answer is too large\nUp to three attempts are offered to get each answer correct. After the third incorrect attempt, the correct \nanswer is displayed and the quiz moves on to the next question.\nTask 3 \u2013 Varying the quiz\nModify Task 1 to allow students to choose how many questions they would like in the test and if they \nwould like a \u2018mixed\u2019 set of questions. A \u2018mixed\u2019 set means that each question can be from a different \nmultiplication table; from 2 to 12.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n Identify the variable that you used to store the student\u2019s answer in Task 1. Give the most \nappropriate data type for this variable. Explain how your program ensured that any data \nentered for the answer was valid.\nVariable  \nData type  \nValidation  \n","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"IF X > 10 \nTHEN  \n  SUM \u2190 SUM + 1 \n  X \u2190 X - 1 \nENDIF ","key":25.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":1,"Question":"(b) \n Identify and give the data type of a different variable, that you could have used in Task 2. \nState the use of this variable in Task 2.\nVariable  \nData type  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"REPEAT \n  SUM \u2190 SUM + 1 \n  X \u2190 X - 1 \nUNTIL X > 10 ","key":26.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for Task 1, using either pseudocode, programming statements or a \nflowchart.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"4 \n5(a) \nValidation \nRange check ","key":27.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how your program completed Task 3.\nInclude any programming statements that you have added to Task 1 and fully explain the \npurpose of each statement.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"5(b) \nFor each of three different data types \nData type - 1 mark, Example - 1 mark, Reason - 1 mark \nThere are many possible correct answers, this is an example only. \nNormal data (1 mark) 65 (1 mark) to show that the program accepts this value (1 mark) \nErroneous data (1 mark) seventy (1 mark) to show that the program rejects this value (1 mark) \nExtreme data (1 mark) 89 (1 mark) to show that the program accepts this value (1 mark) ","key":28.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":1,"Question":"(e) \n Explain how you could alter Task 1 to change the quiz to:\n\u2022 \ndisplay three alternative answers for each question\n\u2022 \nallow the student to choose one of these answers\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m19_ms_22.pdf","Answer":"6 \nField: Tyre Code \nStock Level \nWidth \nTerrain \nTable: BIKETYRES \nBIKETYRES \nBIKETYRES \nBIKETYRES \nSort:  \nAscending \nShow: \n;\n;\n\u0086\n\u0086\nCriteria:  \n= 24 \n= 'Asphalt' \nor:  \nOne mark for each correct column \n4 ","key":29.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":2,"Question":"(a) \nSection B\n2 \nAn algorithm has been written in pseudocode to:\n\u2022 \ninput 25 positive whole numbers less than 100\n\u2022 \nfind and output the largest number \n\u2022 \nfind and output the average of all the numbers\n01  A \u2190 0\nO2  B \u2190 0\n03  C \u2190 0\n04  REPEAT\n05    REPEAT\n06      INPUT D\n07    UNTIL D > 0 AND D < 100 AND D = INT(D)\n08    IF D > B \n09      THEN \n10        B \u2190 D\n11    ENDIF\n12    C \u2190 C + D\n13    A \u2190 A + 1\n14  UNTIL A >= 25\n15  E \u2190 C \/ A\n16  OUTPUT \"Largest number is \", B\n17  OUTPUT \"Average is \", E\n Give the line number for the statements showing:\nTotalling  \nCounting  \nRange check  \nCalculating the average  \n","Marks":"[4]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"Section A \n1(a) \nAny appropriate constant, for example: \nConstant name \nnoTradeInDiscount \nValue  \n0.05\/5 \nUse  \nStoring the percentage discount if no car is traded in ","key":0.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":2,"Question":"(b) \n State an example for each type of test data needed to test the input of the number:\nNormal test data example  \nErroneous\/abnormal test data example  \nExtreme test data example  \n ","Marks":"[3]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"1(b) \nVariable name TradeInValue \/\/ any suitable variable name for trade-in amount \nData type \nreal\/integer \nValidation \nany two from \n\u2022 \nUse of conditional \/loop statement \/ IF \u2026 THEN \/ REPEAT \u2026 UNTIL \/ WHILE \n\u2022 \nvalue input is greater than (or equal to) 10\u2009000\/0.1 \/ less than (or equal to) 100\u2009000\/1 \/ numeric \/\/ a value \nis actually input \/\/ error message for rejected input \n\u2022 \nrange check \/\/ type check \/\/ presence check ","key":1.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":2,"Question":"(c) \n The algorithm needs to be changed to include finding and outputting the smallest number input.   \nDescribe how you would change the algorithm.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"1(c) \nAny four from: \nMP1 \nDisplay extra model\/choice  \nMP2 \nIncrease options available to 4 \nMP3 \nExtend validation rule \/ selection statement(s) for input selection  \nMP4 \nStore name of extra model e.g. new variable\/constant\/extra item in array \nMP5 \nStore price of extra model e.g. new variable\/ constant\/extra item in array \nMP6 \nChange code to calculate price to pay to include extra model ","key":2.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":3,"Question":"\n3 \nFour pseudocode statements and three flowchart symbols are shown.\nDraw a line from each pseudocode statement to its correct flowchart symbol.  \nPseudocode statement\nFlowchart symbol\nIF X > 12\nINPUT X\nX\nY + Z\nOUTPUT X\n","Marks":"[4]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"1(d) \nAny five from: \nMP1 \nCalculate cashback for payment method 1 \nMP2 \nCalculate monthly payments for payment method 2 \nMP3 \nCalculate amount and monthly payments for payment method 3 \nMP4 \nMethod 1 \u2013 output full amount, one payment and cashback \nMP5 \nMethod 2 \u2013 output full amount, full amount divided by 48 and 48 payments \nMP6 \nMethod 3 \u2013 output full amount times 1.05, full amount times 1.05 divided by 84 and 84 payments \nMP7 \nAttempt to output showing all 3 payment methods with appropriate messages (MPs 4,5,6 not awarded) \nSample answer: \n    PRINT \"Full Amount \",amountToPay, \" to pay.  Number of Payments is 1\" \n    PRINT \"Cashback \", amountToPay * 0.01 \n    PRINT \"Over four years \",amountToPay, \" to pay.  Number of Payments is 48\" \n    PRINT \"Each monthly payment is \", amountToPay \/ 48 \n    PRINT \"Over seven years \",amountToPay * 1.05, \" to pay.  Number of Payments is 84\" \n    PRINT \"Each monthly payment is \", amountToPay * 1.05 \/ 84 ","key":3.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nThis algorithm accepts weights of bags of cookies. Any cookie bag weighing between 0.9 and \n1.1 kilograms inclusive is acceptable. Underweight bags weigh less than 0.9 kilograms and \noverweight bags weigh more than 1.1 kilograms. An input of a negative number stops the process. \nThen the total number of bags, the number of overweight bags and the number of underweight \nbags weighed are output.\nAccept \u2190 0\nOver \u2190 0\nUnder \u2190 0\nOUTPUT \"Enter weight of first cookie bag\"\nINPUT BagWeight\nWHILE BagWeight > 0\n    IF BagWeight > 1.1\n      THEN \n        Error \u2190 1\n      ELSE\n        IF BagWeight < 0.9\n          THEN\n            Error \u2190 2\n          ELSE\n            Error \u2190 0\n        ENDIF\n    ENDIF\n    CASE Error OF\n      0 : Accept \u2190 Accept + 1\n      1 : Over \u2190 Over + 1\n      2 : Under \u2190 Under + 1\n    ENDCASE\n  OUTPUT \"Weight of next bag?\"\n  INPUT BagWeight\nENDWHILE\nTotal \u2190 Accept \u2013 Over \u2013 Under\nOUTPUT \"Number of bags weighed \", Total\nOUTPUT \"Number overweight \", Over\nOUTPUT \"Number underweight \", Under\n Complete a trace table for the given algorithm using this input data: \n1.05, 0.99, 1.2, 0.85, 1.1, 0.9, 1.5, 0.95, 1.05, 1.00, 1.07, 0.89, \u201310\nBagWeight\nAccept\nOver\nUnder\nError\nTotal\nOUTPUT\n","Marks":"[7]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"1(e) \nExplanation \nAny four from: \nMP1 \nUse of selection statement to check if customer chose to pay the full amount \nMP2 \nConsideration of special case where there are no optional extras chosen \nMP3 \nComparison of 1% of total price to pay with the total cost of optional extras \nMP4 \nUse of selection statement to check for the largest value of cashback or extras \/smallest amount to pay \nMP5 \n\u2026 display the cost of this option first \nMP6 \n\u2026 then display the cost of the other option ","key":4.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":4,"Question":"(b) \n There is an error in this algorithm.\nIdentify the error and write the corrected pseudocode statement.\nError  \nCorrection  \n","Marks":"[2]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"Section B \n2(a) \nError: \n\u2022 \nProblem with zero  \u2026  \n\u2022 \n\u2026  stored in the negative number array \/\/ negative number count increases by 1 \nCorrection: \n\u2022 \nReplace ELSE with IF             \n\u2022 \nIF Number < 0 (THEN)   ","key":5.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":5,"Question":"(a) \n5 \nA database table, CHOCBAR, is used to keep a record of chocolate bars sold. Chocolate bars are \ncategorised by:\n\u2022 \nSIZE \u2013 small or large\n\u2022 \nFILLING \u2013 brief description, for example mint crunch\n\u2022 \nPRICE \u2013 price in Rupees, for example \u20b92.50\n\u2022 \nNUMBERSOLD \u2013 how many sold\nA database management system uses these data types:\nText   Number   Currency   Boolean\n Select the most appropriate data type for these three fields from the four data types shown.\nEach data type must be different. State the reason why you chose the data type.\nSIZE data type  \nReason  \nPRICE data type  \nReason  \nNUMBERSOLD data type  \nReason  \n","Marks":"[3]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"2(b) \nExplanation: \n\u2022 \nReplace REPEAT \u2026 UNTIL with WHILE \u2026 DO \u2026 ENDWHILE \n\u2022 \nChange condition to WHILE Number <> 9999 DO \n\u2022 \nAdd \/ Move INPUT Number to before loop \/\/ Move \/ Add extra INPUT Number at end of loop \n\u2022 \nRemove (Count \u2190 0 and) Count \u2190 Count + 1 \nOr \nAny four from: \n\u2022 \nInclude an IF statement after INPUT Number \/ before updating the arrays \n\u2022 \nIF Number <> 9999 THEN \u2026 or similar \n\u2022 \nMove output statements to be executed when Number = 9999 \n\u2022 \nChange UNTIL Count >= 50 to UNTIL Number = 9999 \n\u2022 \nRemove (Count \u2190 0 and) Count \u2190 Count + 1 ","key":6.0},{"Paper_No":"0478_m21_qp_22.pdf","Question_No":5,"Question":"(b) \n Complete the query-by-example grid below to display only the price, filling and number sold \nof small chocolate bars that have sold fewer than 10 bars.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"3(a) \nOne mark for correct input (all sets) \nOne mark for correct calculations (all sets) \nOne mark for each correct output  \nSet 1: 88, 74, 60 \nMark1 \nMark2 \nMark3 \nTotal \nAverage \nOUTPUT \n88 \n74 \n60 \n222 \n74 \nPass \nSet 2: 20, 33, 67 \nMark1 \nMark2 \nMark3 \nTotal \nAverage \nOUTPUT ","key":7.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release material\nA program is needed to record the number of strokes played by each player in a round of golf and \ndecide who is the winning player.\nThe object of the game of golf is to hit a small ball into a series of small holes using a golf club. \nA score is kept of the number of times a player needs to hit the ball to get it in a hole; this is the \nnumber of strokes for the hole. The total score for a round of golf is the total number of strokes taken \nfor each hole. The player with the least number of strokes is the winner. \nA golf course consists of 9 or 18 holes. A round of golf is completed when all the holes have been \nplayed. There can be 2, 3 or 4 players taking part in a round of golf. The number of strokes that \nan experienced golfer would take to complete a round is called par. The scores for the round are \ndisplayed in relation to the par score. For example, if par for an 18-hole course was 72, a score of 80 \nwould be 8 over par and a score of 70 would be 2 under par.\nWrite and test a program or programs to score a round of golf: \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. Data must be \nvalidated on entry.\n\u2022 \nAll outputs, including error messages, need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 setting up the round\nEach player\u2019s scores for the round are to be stored in an array with a separate score for each hole. \nThe scores in these arrays are to be set to zero before a round starts.\nThe following data is to be input and stored:\n\u2022 \nthe number of players taking part in the round\n\u2022 \nthe names of the players\n\u2022 \nthe number of holes to be played: 9 or 18\n\u2022 \nthe par for the course.\nThe number of players, their names, the number of holes to be played and the par for the course are \nall displayed to be checked before the round starts so that any errors seen can be corrected.\nTask 2 \u2013 scoring the round\nFor each hole played, each player\u2019s name is displayed on the screen and they are asked to enter \nthe number of strokes they played for that hole. Each player must enter the number of strokes twice \nto verify their score. A player can choose to see the total number of strokes that they have played so \nfar in the round. \nTask 3 \u2013 deciding the winning player\nAt the end of the round, display the name and final score for each player relative to par. The winner \nis identified; display their name and the winning score. There are also options that display:\n\u2022 \nevery player\u2019s score for each hole\n\u2022 \nthe player\u2019s name and hole number of any score of one for a hole (hole-in-one)\n\u2022 \nthe average score for the round\n\u2022 \nthe average score for a hole.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n  State one constant and one variable that you could have used for Task 1. Give the value \nthat would be assigned to the constant. Give the data type for the variable. Explain why the \nconstant was used rather than a variable and explain why the variable was used rather than a \nconstant.\nConstant name  \nValue  \nWhy a constant was used  \nVariable name  \nData type  \nWhy a variable was used  \n","Marks":"[6]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"33 \n67 \n120 \n40 \nPass \nSet 3: 79, 91, 70 \nMark1 \nMark2 \nMark3 \nTotal \nAverage \nOUTPUT \n79 \n91 \n70 \n240 \n80 \nDistinction ","key":8.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":1,"Question":"(b) \n Describe how your program set the scores to zero before each round for Task 1.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"3(b) \nAny three from: \n\u2022 \nAdd extra decision box \u2026 \n\u2022 \n\u2026 in an appropriate position between the average calculation and the output \n\u2022 \nCheck for average greater than or equal to 60 and less than 80  \n\u2022 \nOutput Merit if average greater than or equal to 60 (and less than 80) \u2026  \n\u2022 \n\u2026 otherwise continue ","key":9.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for Task 2, using pseudocode, programming statements or a flowchart.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"4  \nOne mark for explaining why a validation check is needed when data is input \nTo check that data is sensible \/ reasonable \/ meets required criteria \nOne mark for explaining why a verification check is needed when data is input \nTo check that data is not changed on entry \nOne mark for an example of a validation check \nRange check \/\/ Length check \/\/ Type check \nOne mark for an example of a verification check \nDouble entry \/\/ Visual check ","key":10.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how your program completed part of Task 3 to identify the winner and to display their \nname and the winning score relative to par. All programming statements that you include \nmust be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"5(a) \nOne mark for data type and reason \nSIZE \ntext, expressed as a single word \nSHAPE text, short phrase required \nWOOD text, expressed as a single word \nPRICE \ncurrency, needs to be expressed as dollars \/ may be used in calculations \nSOLD \nBoolean, only two choices ","key":11.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":2,"Question":"(a) \nSection B starts on page 8\nSection B\n2 \nAn algorithm has been written to: \n\u2022 \ninput the ages of 100 students\n\u2022 \ncount and output the number of students aged 7 and under 12\n\u2022 \ncount and output the number of students aged 12 and under 18\n\u2022 \ncount and output the number of students aged 18 and over.\n Complete the pseudocode algorithm:\n01  Count7to12 \u2190 0\n02  Count12to18 \u2190 0\n03  CountOver18 \u2190 0\n04  FOR Student \u2190 1 TO \n05      OUTPUT \"Please enter student's age in years \"\n06      INPUT Age\n07      IF Age >= 7 \n08        THEN\n09          Count7to12 \u2190 Count7to12 + 1\n10      ENDIF\n11      IF Age >= 12 AND Age < 18\n12        THEN\n13          Count12to18 \u2190 \n14      ENDIF\n15      IF Age >= 18\n16        THEN\n17          CountOver18 \u2190 CountOver18 + 1\n18      ENDIF\n19  NEXT Student\n20  OUTPUT \"There are \", Count7to12, \" students aged 7 and under 12.\"\n21  OUTPUT \"There are \", Count12to18, \" students aged 12 and under 18.\"\n22   OUTPUT \"There are \", , \" students aged 18 and over.\"\n","Marks":"[4]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"5(b)(i) \nOne mark for \n\u2022 \ncorrect field and table names must include SIZE, WOOD and PRICE, allow SHAPE or SOLD \n\u2022 \ncorrect show for PRICE only \n\u2022 \ncorrect criteria to select small and walnut \nField: SIZE \nWOOD \nPRICE \nTable: BOX \nBOX \nBOX \nSort:  \nShow: \n\uf06f \n\uf06f \n\uf0fe \n\uf06f \nCriteria: =\u2019small\u2019 \n=\u2019walnut\u2019 \nor:  ","key":12.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":2,"Question":"(b) \n Write the extra pseudocode statements that are needed to count and output the number of \nstudents under the age of 7. Use the variable CountUnder7; assume CountUnder7 has \nalready been set to zero.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m20_ms_22.pdf","Answer":"5(b)(ii) \nField: WOOD \nTable: BOX \nSort:  \nShow: \n\uf0fe \n(1) \nCriteria: =\u2019walnut\u2019 OR \u2018beech\u2019 \n(1) \nor:  \nOne mark for each correct alteration max 2 \n2 ","key":13.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":3,"Question":"\n3 \nFour validation checks and five descriptions are shown.\nDraw a line from each validation check to the most appropriate description.\nValidation check \nDescription\nchecks that the data input is \nbetween two values\nlength check\nchecks that the data input is  \nan integer\ncheck digit\nchecks that the data input has \nthree digits\nrange check\nchecks that the data has  \nbeen input\ntype check\nchecks that the data input has \nthe correct digits\n","Marks":"[4]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"Section A \n1(a) \nVariable \nanswer (example only) \nData type \ninteger\/int \nValidation \ntwo distinct different points OR one point and an expansion \nOne mark per mark point, max two \n\u2013 \nrestricted input to positive numbers \n\u2013 \nchecked if input was numeric \n\u2013 \nensured that input was a whole number \/ integer \n\u2013 \nchecked if a value was input \nOr one point and an expansion two marks, for example \n\u2013 \nrestricted input to positive numbers (1) by using a range\/limit check \/ \nREPEAT\u2026 UNTIL looping until value greater than zero (1) \n\u2013 \nchecked if input was numeric (1) by using a type check (1) \n\u2013 \nensured the value input was a whole number (1) any suitable method e.g. \nrounding to whole number  \n\u2013 \nchecked if a value was input (1) by using a presence check (1) ","key":0.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nThis flowchart inputs a whole number. The function INT returns the integer value of a number. For \nexample, INT (7.5) is 7 \nAn input of -1 ends the routine.\nSTART\nEND\nIS\nINT(Number\/D)\n= Number\/D?\nIS C =\n0?\nOUTPUT C\nIS Number\n= \u20131?\nINPUT Number\nD   INT(Number\/2)\nC   0\nD   D \u2013 1\nC   C + 1\nNo\nYes\nYes\nNo\nNo\nNo\nYes\nYes\nIS D =\n1?\n Complete the trace table for the given algorithm using this input data: \n7, 6, 5, 4, \u20131, 12, 34\nNumber\nC\nD\nOUTPUT\n","Marks":"[6]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"1(b) \nVariable \nnoAttempts (example only) \nData type  \ninteger\/int \nUse  \nstoring the number of attempts a pupil has made on a question ","key":1.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":4,"Question":"(b) \n Describe the purpose of this algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"1(c) \nOne mark per mark point, max six \nMP1 \ninitialisation (must include number of correct answers) \nMP2 \ninput name and table number with prompts \nMP3 \nvalidate table number and reinput \nMP4 \nensure each question uses a different multiplier \nMP5 \ndisplay question  \nMP6 \ninput and validate answer \nMP7 \ncheck if answer correct \nMP8 \nupdate score appropriately \nMP9 \nrepeat for 5 questions \nMP10 \ndisplay score and name at end \u2026  \nMP11 \n\u2026with an attempt to display an appropriate message dependent on \nscore \nExample \nScore = 0 \nMultiplier[1] \u2190 2 \nMultiplier[2] \u2190 5 \nMultiplier[3] \u2190 7 \nMultiplier[4] \u2190 8 \nMultiplier[5] \u2190 11 \nOUTPUT \"Multiplication Table Test\" \nOUTPUT \"Please enter your name\" \nINPUT Name \nREPEAT \n    OUTPUT \"Please enter the table (2 to 12) you would like \nto be tested\" \n    INPUT Table \nUNTIL (Table >=2) AND (Table <=12) \nFOR Count = 1 TO 5 \n    OUTPUT (\"Question \", Count) \n    OUTPUT (Multiplier[Count], \" X \", Table, \" = \") \n    REPEAT \n        INPUT Answer \n    UNTIL Answer > 0 AND Answer = INT(Answer) \n    IF Answer = Multiplier[Count] * Table \n      THEN \n        Score \u2190 Score + 1 \n    ENDIF \nNEXT \nOUTPUT (Name, \" your score is \", Score) \nIF Score = 5  \n  THEN \n    OUTPUT (\"Well done full marks\") \n  ELSE \n    OUTPUT (\"Have another practice\") \nENDIF ","key":2.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":4,"Question":"(c) \n (i) Describe the problem that occurs if a whole number smaller than 4 and not equal to \u20131 \nis input.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"1(d) \nExplanation \nOne mark per mark point illustrated with a suitable programming statement, max \nfour \nMP1 \nextra prompt and input to choose the number of questions and\/or \nmixed set \nMP2 \nmethod of choosing number of questions and\/or mixed set \nMP3 \nextra prompt and input for number of questions \nMP4 \nexplanation of validation for either input \nMP5 \nhow the end value for the question loop was changed if required \nMP6 \nhow the program was changed to allow for mixed tables \nMP7 \n\u2026 how the program ensured that the test used more than one \nmultiplication table ","key":3.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":4,"Question":"(ii) \n Explain how to change the flowchart to prevent this problem occurring.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"1(e) \nExplanation \nOne mark per mark point, max three \nMP1 \nhow to provide 3 answers, including the correct one  \nMP2 \nhow to ensure that all 3 answers are different \nMP3 \nhow 3 answers are displayed e.g. output all 3 answers as a numbered \nlist \nMP4 \nhow to select the correct answer e.g. input the number of the correct \nanswer \nMP5 \nhow to ensure that the correct answer is not always in the same \nposition ","key":4.0},{"Paper_No":"0478_m22_qp_22.pdf","Question_No":5,"Question":"\n5 \nA database table, FLOWER, is used to keep a record of the type of flowers available to make up a \nbouquet.\nFlowerID\nType\nColour\nStyle\nFragrance\nCN001\nCarnation\nPink\nStem\nY\nCN002\nCarnation\nRed\nStem\nN\nCN103\nCarnation\nWhite\nStem\nN\nCN104\nCarnation\nYellow\nStem\nY\nCN105\nCarnation\nPink\nSpray\nY\nCN106\nCarnation\nRed\nSpray\nN\nCN107\nCarnation\nWhite\nSpray\nN\nCN108\nCarnation\nYellow\nSpray\nY\nRE101\nRose\nPink\nStem\nY\nRE102\nRose\nRed\nStem\nY\nRE103\nRose\nWhite\nStem\nN\nRE104\nRose\nYellow\nStem\nY\nRE105\nRose\nOrange\nSpray\nY\nRE106\nRose\nPeach\nSpray\nN\nLY101\nLily\nWhite\nSpray\nY\nA query-by-example has been written to display just the type, style and colour of all flowers that \nhave no fragrance.\nField:\nFlowerID\nFragrance\nStyle\nColour\nTable:\nFLOWER\nFLOWER\nFLOWER\nFLOWER\nSort:\nShow:\n3\n3\n3\n3\nCriteria:\n= Y\nor:\nExplain why the query-by-example is incorrect and write a correct query-by-example.  \nExplanation  \nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[6]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"Section B \n2(a) \n\u2013 ","key":5.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":1,"Question":"1 \nTick (3) one box to show which word accurately describes the scope of a variable declared in a \nprocedure.\nA \nFunction \nB \nGlobal \nC \nLocal \nD \nSubroutine \n","Marks":"[1]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"\u2013 ","key":6.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":2,"Question":"(a) \n2 \n Four descriptions and five pseudocode statements are shown. \nDraw one line to link each description to its most appropriate pseudocode statement.  \nNot all pseudocode statements will be used.\nDescription \nPseudocode statement\na statement to count\na statement to total\na statement to start a  \npre-condition loop\na statement to start a  \npost-condition loop\nFOR Count \n 1 TO 10\nValue \n Value + NewValue\nWHILE Value > 10 DO\nValue \n Value + 1\nREPEAT\n","Marks":"[4]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"\u2013 \n07  \n\u2013 ","key":7.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":2,"Question":"(b) \n Write an algorithm in pseudocode, using a single loop, to output the average of 50 numbers \nthat have been stored in the array Number[]\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"4 \n2(b) \n\u2013 \n27 (example many correct answers any whole number 1-99 inclusive) \n\u2013 \n106 (example many correct answers) \n\u2013 \n99\/1 ","key":8.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":3,"Question":"\n3 \nDescribe the purpose of test data. Include an example of a type of test data in your answer.\nDescription  \nExample  \n","Marks":"[3]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"2(c) \nOne mark per mark point, max four \n\u2013 \nnew variable for minimum\u2026  \n\u2013 \n\u2026 set to first value\/high value  \n\u2013 \n\u2026 at start of program \/ before line 4 \n\u2013 \ntest input \/ D for less than minimum \n\u2013 \n\u2026 replace value minimum if input less than \n\u2013 \n\u2026 after line 7 and before line 14 \n\u2013 \nnew output for minimum (with appropriate message) \n\u2013 \n\u2026 at end of program \/\/ after line 14 ","key":9.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":4,"Question":"\n4 \nDescribe how variables and constants are used in programming.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"3 \n Pseudocode statement \nFlowchart symbol \nOne mark for a single line to decision box from IF X > 12  \nOne mark for a single line to process box from X \u2190 Y + Z  \nTwo marks for two single lines from INPUT X and OUTPUT X to output box  \nOR \nOne mark for a single line from INPUT X or OUTPUT X to output box \/\/ two \nsingle lines from INPUT X and OUTPUT X to process box ","key":10.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":5,"Question":"\n5 \nA food ordering system is an example of a computer system that is made up of sub-systems.\nThe food ordering system:\n\u2022 \nallows the user to enter the details of the food they want to order and to pay for the order \n\u2022 \ndisplays food available as pictures or as a list.\nComplete the structure diagram for the given parts of the food ordering system.\nFood ordering system\n","Marks":"[4]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"IF X > 12  \nINPUT X \nX \u2190 Y + Z  \nOUTPUT X \n4(a) \nOne mark for each correct column  \nBag \nWeight \nAccept \nOver \nUnder \nError \nTotal \nOUTPUT \n0 \n0 \n0 \n(Enter weight of \nfirst cookie \nbag) \n1.05 ","key":11.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":6,"Question":"(a) \n6 \nThe energy efficiency of an electrical appliance is the percentage of useful energy out compared with \nthe total energy in.\nAn algorithm has been written in pseudocode to calculate the energy efficiency of an appliance. \nValues for total energy in and useful energy out are input. The efficiency is calculated and output \nas a percentage. \nThe entry of the number \u20131 for either value stops the algorithm.\n01 REPEAT\n02     OUTPUT \"Enter total energy in \"\n03     INPUT TotalEnergyIn\n04     OUTPUT \"Enter useful energy out \"\n05     OUTPUT UsefulEnergyOut\n06     IF TotalEnergyIn <> -1 AND UsefulEnergy <> -1\n07       THEN \n08         Efficiency \n (UsefulEnergyOut \/ TotalEnergyIn) * 100\n09         OUTPUT \"Efficiency is \", Efficiency, \"%\"\n10     ENDIF\n11 UNTIL TotalEnergyIn <> -1 OR UsefulEnergyOut <> -1\n Identify the three errors in the pseudocode and suggest corrections.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \n","Marks":"[3]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n0.99 ","key":12.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":6,"Question":"(b) \n Write pseudocode to check for an efficiency of 92% or over for this appliance and to output \n\u201cA-rated\u201d if the efficiency is 92% or over.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n1.2 ","key":13.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":7,"Question":"(a) \n7 \nConsider this logic expression. \nX = (A OR NOT B) AND (B AND NOT C)\n Draw a logic circuit for this logic expression. Each logic gate must have a maximum of two \ninputs. Do not simplify this logic expression. \nA\nB\nX\nC\n","Marks":"[5]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"1 \n(Weight of next \nbag?) \n0.85 ","key":14.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":7,"Question":"(b) \n Complete the truth table from the given logic expression.\nA\nB\nC\nWorking space\nX\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n","Marks":"[4]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"2 \n(Weight of next \nbag?) \n1.1 ","key":15.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":8,"Question":"(a) \n8 \nThis flowchart represents an algorithm to find the average value of a number of sales.\nNumberSales   NumberSales + 1\nNumberSales   0\nTotal   0\nAverage   Total \/ NumberSales\nTotal   Total + SaleValue\nIS\nSaleValue\n= 0?\nINPUT\nSaleValue\nOUTPUT\n\"Average sale\nvalue \", Average\nNo\nYes\nSTART\nSTOP\n Complete the trace table using this data:\n5.50, 3.40, 6.25, 3.85, \u201311.00, 0\nNumberSales\nTotal\nSaleValue\nAverage\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n0.9 ","key":16.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":8,"Question":"(b) \n Identify the error in the algorithm and describe how to correct it.\nError  \nCorrection  \n","Marks":"[3]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n1.5 ","key":17.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":9,"Question":"(a) \n9 \nA shop that sells books has set up a new database table called BookList to store book details. \nPart of this table is given.\nCatNo\nTitle\nFiction\nAuthor\nPaperBack\nPrice\nStockLevel\nBK01\nThe Princes\u2019 Story\nYes\nB Penn\nYes\n4.50\n500\nBK02\nThe Princesses\u2019 Story\nYes\nB Penn\nYes\n4.50\n350\nBK03\nComputer Science\nNo\nWay Yu\nYes\n19.99\n20\nBK04\nThe Modern World\nNo\nP Patel\nNo\n25.00\n5\nBK05\nThe Ancient World\nYes\nP Patel\nNo\n25.00\n5\nBK06\nComputer Science\nNo\nR Dale\nYes\n27.35\n8\nBK07\nThe Princes\u2019 Story\nYes\nB Penn\nNo\n12.50\n3\nBK08\nThe Princesses\u2019 Story\nYes\nB Penn\nNo\n12.50\n0\nBK12\nFamous Five\nYes\nE Bly\nYes\n2.75\n45\nBK15\nSecret Seven\nYes\nE Bly\nYes\n2.75\n25\nBK16\nThe Last Knight\nYes\nP Mann\nYes\n5.99\n7\nBK17\nThe Dark Tower\nYes\nP Mann\nYes\n5.99\n5\nBK19\nThe Final Chase\nYes\nP Mann\nYes\n5.99\n5\nBK21\nMaths Today Part 1\nNo\nB Ward\nYes\n6.75\n25\nBK22\nMaths Today Part 2\nNo\nB Ward\nYes\n6.75\n15\nBK23\nMaths Today Part 3\nNo\nB Ward\nYes\n6.75\n10\nBK26\nMaths Today Workbook\nNo\nB Ward\nYes\n6.75\n30\nBK27\nKnitting for Beginners\nNo\nA Smith\nYes\n6.99\n3\nBK30\nWoodwork for Beginners\nNo\nA Smith\nYes\n6.99\n4\nBK31\nNetworking for Beginners\nNo\nA Smith\nYes\n6.99\n0\n State the number of records in this part of the database table.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"1 \n(Weight of next \nbag?) \n0.95 ","key":18.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":9,"Question":"(b) \n (i) Give the name of the field that would be used for the primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n1.05 ","key":19.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":9,"Question":"(ii) \n State the reason for choosing this field for the primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n1.00 ","key":20.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":9,"Question":"(c) \n Complete the table to identify the most appropriate data type for each field based on the data \nshown in the table BookList\nField\nData type\nCatNo\nTitle\nFiction\nPrice\n","Marks":"[2]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n1.07 ","key":21.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":9,"Question":"(d) \n Write the output from this structured query language (SQL) statement.\nSELECT CatNo, Title, Author\nFROM BookList\nWHERE StockLevel = 0;\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"0 \n(Weight of next \nbag?) \n0.89 ","key":22.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":9,"Question":"(e)  \n Complete this SQL statement to display all the titles by the author B Penn.\nSELECT  \nFROM  \nWHERE  ;\n","Marks":"[2]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"2 \n(Weight of next \nbag?) \n-10 ","key":23.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":10,"Question":"(a) \n10 The variables X, Y and Z are used in a program: X stores a whole number, Y stores a decimal \nnumber and Z stores a flag that can be set to TRUE or FALSE\n Write pseudocode statements to declare the variables X, Y and Z\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"Number of bags \nweighed 4 \nNumber \noverweight 2 \nNumber \nunderweight 2 ","key":24.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":10,"Question":"(b) \n The function Same(A,B) returns TRUE if the value of A is the same as the value of B when B \nis rounded to the nearest whole number and FALSE otherwise.\nWrite pseudocode statements to: \n\u2022 \ndefine the function \n\u2022 \ncall the function with X and Y and store the return value in Z\nFunction definition  \nFunction call  \n","Marks":"[6]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"4(b)  \nError Total \u2190 Accept \u2013 Over \u2013 Under \/\/ line 26 \nCorrection Total \u2190 Accept + Over + Under ","key":25.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":10,"Question":"(c) \n State the difference between defining and calling a function.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"5(a) \nOne mark for data type and reason \nSIZE \ntext, expressed as a single word \/\/ Boolean, only two choices  \nPRICE \ncurrency, needs to be expressed as Rupees\/money  \nNUMBERSOLD \nnumber, integer values\/could be used in calculations ","key":26.0},{"Paper_No":"0478_m23_qp_22.pdf","Question_No":11,"Question":"\n11 The one-dimensional (1D) array TeamName[] contains the names of teams in a sports league. \nThe two-dimensional (2D) array TeamPoints[] contains the points awarded for each match. \nThe position of each team\u2019s data in the two arrays is the same. For example, the team stored at \nindex 10 in TeamName[] and TeamPoints[] is the same. \nThe variable LeagueSize contains the number of teams in the league. The variable MatchNo \ncontains the number of matches played. All teams have played the same number of matches.\nThe arrays and variables have already been set up and the data stored.\nEach match can be played at home or away. Points are recorded for the match results of each \nteam with the following values:\n\u2022 \n3 \u2013 away win\n\u2022 \n2 \u2013 home win\n\u2022 \n1 \u2013 drawn match\n\u2022 \n0 \u2013 lost match.\nWrite a program that meets the following requirements:\n\u2022 \ncalculates the total points for all matches played for each team\n\u2022 \ncounts the total number of away wins, home wins, drawn matches and lost matches for each \nteam\n\u2022 \noutputs for each team:\n \u2013 \nname \n\u2013 \ntotal points\n\u2013 \ntotal number of away wins, home wins, drawn matches and lost matches\n\u2022 \nfinds and outputs the name of the team with the highest total points\n\u2022 \nfinds and outputs the name of the team with the lowest total points.\nYou must use pseudocode or program code and add comments to explain how your code works. \nYou do not need to declare any arrays, variables or constants; you may assume that this has \nalready been done.\nAll inputs and outputs must contain suitable messages.\nYou do not need to initialise the data in the arrays TeamName[] and TeamPoints[] or the \nvariables LeagueSize and MatchNo\nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of Cambridge Assessment. Cambridge Assessment is the brand name of the University of Cambridge \nLocal Examinations Syndicate (UCLES), which is a department of the University of Cambridge.\n  ","Marks":"[15]","Paper_No_Dropped":"0478_m21_ms_22.pdf","Answer":"5(b) \nField: SIZE \nFILLING \nPRICE \nNUMBERSOLD \nTable: CHOCBAR \nCHOCBAR \nCHOCBAR \nCHOCBAR \nSort:  \nShow: \n\uf06f \n\uf0fe \n\uf0fe \n\uf0fe \nCriteria: = \"small\" \n<10 \nor:  \nOne mark for correct rows Field, Table and Sort \nOne mark for correct Show row \nOne mark for correct Criteria row \n3 ","key":27.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nThe local high school uses buses to transport students to school. There are six bus routes labelled A to F. You have \nconducted a survey to analyse the punctuality statistics of these buses over a four-week period. The data from the \nsurvey are shown in the table:\nPunctuality table\nDay\nBus A\nBus B\nBus C\nBus D\nBus E\nBus F\nMon1\n0\n0\n2\n1\n\u22121\n0\nTue1\n0\n1\n0\n0\n\u22121\n\u22125\nWed1\n0\n0\n\u22121\n0\n\u22121\n\u22125\nThu1\n2\n0\n\u22121\n0\n\u22122\n\u22125\nFri1\n2\n1\n\u22122\n0\n\u22124\n\u22124\nMon2\n4\n2\n\u22122\n0\n\u221210\n\u22123\nTue2\n0\n0\n\u22123\n0\n\u22122\n\u22125\nWed2\n3\n0\n\u22121\n0\n0\n0\nThu2\n4\n0\n0\n0\n0\n0\nFri2\n\u22122\n0\n0\n0\n0\n0\nMon3\n\u22125\n1\n\u22122\n2\n0\n0\nTue3\n0\n0\n0\n0\n1\n\u22122\nWed3\n0\n0\n1\n0\n2\n\u22123\nThu3\n3\n0\n1\n0\n\u22123\n1\nFri3\n4\n2\n1\n0\n1\n1\nMon4\n\u22121\n0\n1\n0\n1\n1\nTue4\n8\n0\n\u22121\n0\n3\n0\nWed4\n1\n1\n\u22121\n0\n\u22121\n0\nThu4\n1\n0\n2\n0\n0\n\u22122\nFri4\n\u22122\n0\n\u22122\n0\n0\n\u22125\nPositive numbers represent minutes early, negative numbers represent minutes late and 0 represents the bus having \nbeen on time.\nWrite and test a program or programs for the local high school. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be validated on \nentry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Setting up the data storage.\nUsing arrays set up a system to enable data for each bus route to be entered covering each day of a four-week \nperiod. It must be possible to enter the data supplied or your own set of data, using suitable prompts as necessary.\nTask 2 \u2013 Working out the statistics.\nExtend your program so that the following statistics for the four-week period may be calculated and output:\n\u2022 \nthe number of late arrivals for each bus route\n\u2022 \nthe average number of minutes late for each bus route\n\u2022 \nthe bus route with the highest number of days on which it was late\n\u2022 \nthe average number of minutes late for each bus route, using only data from days on which it was late\nAll the results should be displayed with appropriate annotation.\nTask 3 \u2013 Checking specific days.\nExtend the program as follows:\n\u2022 \nAllow the user to input a specific day, for example Fri3, to be used for analysis of data.\n\u2022 \nFind and display how many buses were late on this particular day.\n\u2022 \nFor each late bus, display the route label and how late the bus was on this particular day.\n1 \n All variables, constants and other identifiers must have meaningful names.\n(i) State one array you used for Task 1. State the data type and purpose of this array.\nArray  \nData type  \nPurpose  \n","Marks":"[3]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"Section A \n1(a) \nMany correct answers, the names used must be meaningful. The names given are examples only. \nOne mark per mark point, max three \nConstant name \nMaxNumberPlayers \nValue ","key":0.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":1,"Question":"(ii) \n State one variable you used for Task 2 and one variable you used for Task 3. In each \ncase, state the data type and purpose of the variable.\nTask 2 variable name  \nData type  \nPurpose  \nTask 3 variable name  \nData type  \nPurpose  \n","Marks":"[6]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"Why constant used This number will not change whilst the program is running \nOne mark per mark point, max three \nVariable name \nNumberOfPlayers \nData type \nInteger\/int \nWhy variable used A value between 2 and 4 inclusive is input and stored at the start of the round ","key":1.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":1,"Question":"(b) \n Write an algorithm to show how you calculated and output the number of late arrivals and the \naverage number of minutes late for each bus route (part of Task 2), using either pseudocode, \nprogramming statements or a flowchart.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"1(b) \nOne mark per mark point, max four  \nMP1 \nusing a FOR \u2026 NEXT  \/\/  REPEAT \u2026 UNTIL  \/\/  DO \u2026 WHILE loop \nMP2 \nstarting at 1\/0 and finishing at 18\/17 or 9\/8  \/\/  18\/9 iterations \nMP3 \nsetting the elements in the player scores arrays to zero \nMP4 \n\u2026 for all four arrays  \/\/  number of arrays for players in this round \nMP5 \nsetting variables \/ array for total scores to 0 \nMP6 \nuse of assignment \/ append statement(s) \nAny programming statements included must be explained. ","key":2.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":1,"Question":"(c) \n Explain how your program uses the input in Task 3 to only find the data for that specific day \n(part of Task 3). Any programming statements used in your answer must be fully explained.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"1(c) \nOne mark per mark point, max six  \nMP1 \nloop through the number of holes played \nMP2 \nfor each hole work \/ loop through the number of players actually playing \nMP3 \nfor each player display their name \nMP4 \n\u2026 prompt to enter the number of strokes played for the hole \nMP5 \n\u2026 input the number of strokes twice \nMP6 \n\u2026 validate both inputs are the same \nMP7 \n\u2026 store the number of strokes in the appropriate array \nMP8 \n\u2026 update the total score for that player \nMP9 \n\u2026 prompt and input to ask if the player wants to see the number of strokes played so far \nMP10 \u2026 check if required then output number of strokes  \nExample Answer \nFOR Hole \u2190 1 TO NumberOfHoles \n  FOR Player \u2190 1 TO NumberOfPlayers \n    REPEAT \n      OUTPUT PlayerName[Player], \"Please enter the number of strokes played for hole \", \n             Hole \n      INPUT NumberStrokes \n      OUTPUT PlayerName[Player], \" please re-enter the number\" \n      INPUT NumberStrokesAgain \n    UNTIL NumberStrokes = NumberStrokesAgain \n    IF Player = 1 \n      THEN \n        Player1[Hole] \u2190 NumberStrokes \n        Player1Total \u2190 Player1Total + NumberStrokes \n        OUTPUT \"Do you want to see number total of strokes played so far Y\/N? \" \n        INPUT SeeTotal  \n        IF SeeTotal = \"Y\" \n          THEN \n            OUTPUT \"Total number of strokes so far \", Player1Total \n        ENDIF \n    ENDIF \n    IF Player = 2 ","key":3.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":1,"Question":"(d) \n Explain how you would alter your program in Task 1 to allow you to choose the number of \nweeks to enter data on bus arrival times.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"1(c) \n      THEN \n        Player2[Hole] \u2190 NumberStrokes \n        Player2Total \u2190 Player2Total + NumberStrokes \n        OUTPUT \"Do you want to see number total of strokes played so far Y\/N? \" \n        INPUT SeeTotal  \n        IF SeeTotal = \"Y\" \n          THEN \n            OUTPUT \"Total number of strokes so far \", Player2Total \n        ENDIF \n    ENDIF \n    IF Player = 3 \n      THEN \n        Player3[Hole] \u2190 NumberStrokes \n        Player3Total \u2190 Player3Total + NumberStrokes \n        OUTPUT \"Do you want to see number total of strokes played so far Y\/N? \" \n        INPUT SeeTotal  \n        IF SeeTotal = \"Y\" \n          THEN \n            OUTPUT \"Total number of strokes so far \", Player3Total \n        ENDIF \n    ENDIF \n    IF Player = 4 \n      THEN \n        Player4[Hole] \u2190 NumberStrokes \n        Player4Total \u2190 Player4Total + NumberStrokes \n        OUTPUT \"Do you want to see number total of strokes played so far Y\/N? \" \n        INPUT SeeTotal  \n        IF SeeTotal = \"Y\" \n          THEN \n            OUTPUT \"Total number of strokes so far \", Player4Total \n        ENDIF \n    ENDIF \n  NEXT Player \nNEXT Hole \n1(d) \nExplanation \nOne mark per mark point, max four  \nMP1 \nWork\/ Loop through all the total scores \nMP2 \ncompare each total score using selection \/ IF statements \/\/ use an appropriate function \nMP3 \nselect the score with the lowest value \nMP4 \n\u2026 also select the player name for that score \nMP5 \noutput the player name and either the difference between par and their score or their score \nMP6 \ncompare the score with the lowest value with the value of par using selection \/ IF statements \nMP7 \n\u2026 identify as  \u201cover par\u201d if the value is greater than par or output \u201cunder par\u201d if the value is less than par or output \n\u201cpar\u201d if there is no difference \nAny programming statements included must be explained. ","key":4.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":2,"Question":"\nSection B\n2 \nDescribe each of the following data types used in programming. In each case, give an example of \na piece of data to illustrate your answer. Each example must be different.\nChar\nString\nBoolean\n","Marks":"[6]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"Section B \n2(a) \nOne mark per mark point, max four  \n\u2022 \n100 \n\u2022 \nAND Age < 12 \n\u2022 \nCount12to18 + 1 \n\u2022 \nCountOver18 ","key":5.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":3,"Question":"(a) \n3 \n Give an example of a conditional statement using pseudocode.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"2(b) \nOne mark suitable IF construct, one mark correct assignment statement, for example \nIF Age < 7  \n  THEN \n    CountUnder7 \u2190 CountUnder7 + 1 \nENDIF  \nOne mark suitable message, one mark correct use of countUnder7 variable, for example \nOUTPUT \"There are \", CountUnder7, \" students aged under 7.\" ","key":6.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":3,"Question":"(b) \n Describe the purpose of a conditional statement. \n  ","Marks":"[2]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"3 \nOne mark for each correct single line from the validation check, max four  \nValidation check \nDescription \nchecks that the data input is \nbetween two values  \nlength check \nchecks that the data input is  \nan integer \ncheck digit \nchecks that the data input has  \nthree digits \nrange check \nchecks that the data has  \nbeen input \ntype check \nchecks that the data input has \nthe correct digits ","key":7.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":4,"Question":"(a) \nQuestion 4 starts on page 10.\n4 \nThis section of program code may be used as a validation check.\n1 \nPRINT \"Input a value between 0 and 100 inclusive\"\n2 \nINPUT Value\n3 \nWHILE Value < 0 OR Value > 100\n4 \n PRINT \"Invalid value, try again\"\n5 \n INPUT Value\n6 \nENDWHILE\n7 \nPRINT \"Accepted: \", Value\n Give a name for this type of validation check.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"4(a) \nOne mark each for columns Number and OUTPUT \nTwo marks for column C first four values (1) last three values (1) \nTwo marks for column D first six values (1) last four values (1) \nNumber \nC \nD \nOUTPUT ","key":8.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":4,"Question":"(b) \n Describe what is happening in this validation check.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"0 ","key":9.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":4,"Question":"(c) \n Complete the trace table for this program code using the test data:  200, 300, \u20131, 50, 60\nValue\nOUTPUT\n","Marks":"[3]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"2 ","key":10.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":4,"Question":"(d) \n Draw a flowchart to represent this section of program code.\n","Marks":"[5]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"6 \n0 ","key":11.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nThe table, BEVERAGES, shows the number of calories in 100 ml of a range of popular beverages. \nIt also shows the availability of these drinks in a can, a small bottle and a large bottle.\nBevNo\nBevName\nCalories\nCan\nSmall Bottle\nLarge Bottle\nBev01\nCola\n40\nYes\nYes\nYes\nBev02\nLime\n45\nYes\nNo\nYes\nBev03\nEnergy Drink 1\n52\nYes\nYes\nNo\nBev04\nEnergy Drink 2\n43\nYes\nNo\nNo\nBev05\nMango\n47\nYes\nNo\nYes\nBev06\nLemon Iced Tea\n38\nYes\nNo\nYes\nBev07\nLemonade\n58\nYes\nYes\nYes\nBev08\nOrange Juice\n46\nYes\nYes\nNo\nBev12\nApple Juice\n50\nYes\nYes\nNo\nBev15\nChocolate Milk\n83\nYes\nYes\nNo\n Give a reason for choosing BevNo as the primary key for this table.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"1 ","key":12.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":5,"Question":"(b) \n State the number of records shown in the table BEVERAGES.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"2 ","key":13.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":5,"Question":"(c) \n List the output that would be given by this query-by-example.\nField:\nBevNo\nBevName\nCan\nSmall Bottle\nLarge Bottle\nTable:\nBEVERAGES\nBEVERAGES\nBEVERAGES\nBEVERAGES\nBEVERAGES\nSort:\nDescending\nShow:\n\u00fc\n\u00fc\nCriteria:\n= \"Yes\"\n= \"Yes\"\n= \"Yes\"\nor:\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"2 ","key":14.0},{"Paper_No":"0478_s19_qp_21.pdf","Question_No":5,"Question":"(d) \n Complete the query-by-example grid to output a list showing just the names and primary keys \nof all the beverages with a calorie count greater than 45. The list should be in alphabetical \norder of names.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"0 ","key":15.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nAn auction company has an interactive auction board at their sale rooms, which allows buyers to \nplace bids at any time during the auction. Before the auction starts, the sellers place their items \nin the sale room with a unique number attached to each item (item number). The following details \nabout each item need to be set up on the interactive auction board system: item number, number of \nbids, description and reserve price. The number of bids is initially set to zero.\nDuring the auction, buyers can look at the items in the sale room and then place a bid on the \ninteractive auction board at the sale room. Each buyer is given a unique number for identification \n(buyer number). All the buyer needs to do is enter their buyer number, the item number and their bid. \nTheir bid must be greater than any existing bids.\nAt the end of the auction, the company checks all the items and marks those that have bids greater \nthan the reserve as sold. Any items sold will incur a fee of 10% of the final bid to be paid to the \nauction company.\nWrite and test a program or programs for the auction company. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data, data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Auction set up.\nFor every item in the auction the item number, description and the reserve price should be recorded. \nThe number of bids is set to zero. There must be at least 10 items in the auction.\nTask 2 \u2013 Buyer bids.\nA buyer should be able to find an item and view the item number, description and the current highest \nbid. A buyer can then enter their buyer number and bid, which must be higher than any previously \nrecorded bids. Every time a new bid is recorded the number of bids for that item is increased by one. \nBuyers can bid for an item many times and they can bid for many items. \nTask 3 \u2013 At the end of the auction.\nUsing the results from TASK 2, identify items that have reached their reserve price, mark them as \nsold, calculate 10% of the final bid as the auction company fee and add this to the total fee for all \nsold items. Display this total fee. Display the item number and final bid for all the items with bids that \nhave not reached their reserve price. Display the item number of any items that have received no \nbids. Display the number of items sold, the number of items that did not meet the reserve price and \nthe number of items with no bids.\n1 \n All variables, constants and other identifiers must have meaningful names.\nDescribe the data structures you have used in Task 1 to record the items for sale. Include \nsome sample data for each data structure you have described.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"1 ","key":16.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":1,"Question":"(b) \n Explain how your program for Task 1 ensures the item number is unique.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"0 ","key":17.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for the part of Task 2 that allows the buyer to add a new bid, using \neither pseudocode, programming statements or a flowchart. Assume that Task 1 has been \ncompleted and that the item details have already been found.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"1 ","key":18.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how your program for Task 2 checks that a new bid is higher than previous bids for \nan item.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"1 \n-1 ","key":19.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":1,"Question":"(e) \n Explain how your program identifies the items that have reached their reserve price, then \ncalculates and displays the total auction company fee for all sold items as part of Task 3. Any \nprogramming statements used in your answer must be fully explained.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"4(b)  \nOne mark per mark point, max two  \n\u2022 \nto count the factors \/ the numbers that go into (other than 1 or itself) of a number \n\u2022 \nto output the number of factors  ","key":20.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":2,"Question":"(a) \nSection B\n2 \n An algorithm has been written in pseudocode to input 100 numbers, select and print the \nlargest number and smallest number.\nCount  1\nINPUT Number\nHigh  Number\nLow  Count\nREPEAT \n  INPUT Number\n  IF Number > High \n    THEN \n      High  Number \n  ENDIF\n  IF Number > Low \n    THEN \n      Low  Number \n  ENDIF\n  Count  Count + 1\nUNTIL Count = 99\nPRINT \"Largest Number is \", Number\nPRINT \"Smallest Number is \", Low\nFind the four errors in the pseudocode and suggest a correction for each error.\nError 1 \nCorrection  \nError 2 \nCorrection  \nError 3 \nCorrection  \nError 4 \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"4(c)(i) \nOne mark per mark point, max two  \n\u2022 \nthe value of D becomes zero  \n\u2022 \ndivision by zero error \n\u2022 \nendless loop ","key":21.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":2,"Question":"(b) \n Show how you would change the corrected algorithm to total the numbers and print the total. \nUse a variable Total.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"4(c)(ii) \nOne mark per mark point, max two  \n\u2022 \nafter the decision box to test if the number is -1 \n\u2022 \ninsert another decision box to test if the number is less than 4 \/ less than or equal to 3  \n\u2022 \nreturn to INPUT Number if true  ","key":22.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":3,"Question":"\n3 \nThis flowchart inputs the marks gained in an examination. An input of \u20131 ends the routine.\nOUTPUT \"Number of\nDistinctions \", Distinction\nOUTPUT \"Average Mark \"\nTotal\/Count\nSTART\nEND\nIs Mark = \u20131 ?\nIs\nMark >=\n80 ?\nINPUT Mark\nTotal   0\nCount   0\nDistinction   0\nNo\nNo\nYes\nYes\nTotal   Total + Mark\nCount   Count + 1\nDistinction\nDistinction + 1\nComplete the trace table for the mark input data: 50, 70, 65, 30, 95, 50, 55, 85, 65, 35, \u20131, 45\nTotal\nCount\nDistinction\nMark\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_m22_ms_22.pdf","Answer":"5 \nExplanation \nOne mark per mark point, max three \n\u2022 \nfield, FlowerID, not required \/ should not be displayed \n\u2022 \nType field not included and displayed \n\u2022 \nFragrance field should not be displayed  \n\u2022 \nFragrance criteria should not be Y \/ should be N \nField: Type \nFragrance \nStyle \nColour \nTable: FLOWER \nFLOWER \nFLOWER \nFLOWER \nSort:  \nShow: \n\uf0fe \n\uf06f \n\uf0fe \n\uf0fe \nCriteria:  \n= N \nor:  \nquery-by-example grid \nOne mark per mark point, max three \n\u2022 \nOne mark for changing Flower ID to Type \n\u2022 \nOne mark for changing Criteria in Fragrance to N  \n\u2022 \nOne mark for changing Show in Fragrance to \uf06f \n6 ","key":23.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":4,"Question":"\n4 \nFor each of the four groups of statements in the table, place a tick in the correct column to show \nwhether it is an example of Selection or Repetition.\nStatements\nSelection\nRepetition\nFOR A  1 TO 100\n  B  B + 1\nNEXT A\nCASE A OF\n  100: B  A\n  200: C  A\nENDCASE\nIF A > 100\nTHEN \n  B  A\nENDIF\nREPEAT\n  A  B * 10\nUNTIL A > 100\n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"Mark scheme abbreviations \n\/  \nseparates alternative words \/ phrases within a marking point  \n\/\/  \nseparates alternative answers within a marking point  \nunderline  actual word given must be used by candidate (grammatical variants accepted)  \nmax  \nindicates the maximum number of marks that can be awarded  \n( )  \nthe word \/ phrase in brackets is not required, but sets the context  \nNote:  \nNo marks are awarded for using brand names of software packages or hardware. ","key":0.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":5,"Question":"\n5 \nExplain what is meant by validation and verification.\nGive an example for each one.\nValidation  \nExample  \nVerification \nExample  \n","Marks":"[6]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"C ","key":1.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":6,"Question":"(a) \n6 \nA database table, FLIGHT, is used to keep a record of flights from a small airfield. Planes can \ncarry passengers, freight or both. Some flights are marked as private and only carry passengers.\nFlight number\nPlane\nNotes\nDeparture time\nPassengers\nFN101\nCaravan 1\nPrivate passenger flight\n08:00\nY\nCN101\nCaravan 2\nFreight only\n08:30\nN\nCN102\nPiper 1\nFreight only\n09:00\nN\nFN104\nPiper 2\nPassengers only\n09:20\nY\nFN105\nPiper 1\nFreight and passengers\n10:00\nY\nFN106\nCaravan 1\nPassengers only\n10:30\nY\nCN108\nCaravan 2\nFreight only\n08:00\nN\nCN110\nLear\nPrivate passenger flight\n08:00\nY\n State the field that could have a Boolean data type.\nField   ","Marks":"[1]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"2(a) \nOne mark for each single correct line from a description to statement \nDescription \nPseudocode statement ","key":2.0},{"Paper_No":"0478_s19_qp_22.pdf","Question_No":6,"Question":"(b) \n A query-by-example has been written to display just the flight numbers of all planes leaving \nafter 10:00 that only carry passengers.\nField:\nFlight number\nPassengers\nDeparture time\nTable:\nFLIGHT\nFLIGHT\nFLIGHT\nSort:\nShow:\n3\nCriteria:\n= Y\n= 10:00\nor:\nExplain why the query-by-example is incorrect, and write a correct query-by-example.\nExplanation  \nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[7]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"FOR Count \uf0ac 1 TO 10 \nValue \uf0ac Value + NewValue \na statement to total \nWHILE Value > 10 DO \na statement to start a  \npre-condition loop \nValue \uf0ac Value + 1 \nREPEAT \na statement to start a  \npost-condition loop \na statement to count \n2(b) \nOne mark for each point: \n\u2022 \nInitialisation of total to zero before loop \n\u2022 \nappropriate loop controls \n\u2022 \ntotalling statement inside the loop, must use array Number[] with an index \n\u2022 \ncalculation of average outside loop \n\u2022 \noutput of average outside loop \nExample: \nTotal \uf0ac 0 \nFOR Count \uf0ac 1 TO 50 \n    Total \uf0ac Total + Number[Count] \nNEXT Count \nAverage \uf0ac Total \/ 50 \nOUTPUT \"The average is \", Average ","key":3.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release Material\nA discount stationery store sells items in bulk at a discount to its customers. Customers can order from \na small range of items available on that day. The greater the quantity of an item they buy in one order, \nthe greater the discount for that item.\nQuantity of an item\nDiscount\n10\n5%\n20\n10%\n50\n25%\n100\n35%\n500\n50%\nIn addition to this, new customers can use a $10 voucher, provided their order comes to more than \n$50. Also, returning customers are given a discount voucher with a monetary value.\nWrite and test a program or programs for the discount stationery store.\n\u2022 \n Your program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Stationery available on the day.\nUsing arrays, set up a list of at least 10 different items available that day. For every item include: item \ncode, description, price and the amount in stock. All item codes must be different. Display the item \ncode, description, price and the amount in stock on the screen.\nTask 2 \u2013 Customer places an order.\nThe customer chooses an item code from the list of currently available items. Any items that are out of \nstock are not displayed and any items that have low stock of 10 or fewer are highlighted. The customer \nenters the number they wish to purchase. If there are not enough items in stock the number is rejected. \nThe price to pay and any discount is shown on the screen. When the order is complete, any customer \ndiscount voucher is applied and the total price is shown. If the customer confirms the order, the stock \nnumbers are then updated.\nTask 3 \u2013 At the end of the day.\nList the item codes of any items that have sold out. Display the item code of any items of which none \nhave been sold. Display the item code and description of the item of which the greatest quantity have \nbeen sold today.\n1 \n  All variables, constants and other identifiers must have meaningful names.\nDescribe the data structures you have used in Task 1 to record the items available that day. \nInclude some sample data for each data structure you have described.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"3 \nOne mark for each point max two. \n\u2022 \ncheck that the program works as expected  \n\u2022 \ncheck for logic\/runtime errors \n\u2022 \ncheck that the program rejects any invalid data that is input  \n\u2022 \ncheck that the program only accepts reasonable data \nOne mark for example \nNormal  \/\/ erroneous \/\/ abnormal \/\/ extreme \/\/ boundary ","key":4.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":1,"Question":"(b) \n Explain how your program for Task 1 ensures all the item codes are different.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"4 \nOne mark for each point max three. \n\u2022 \nvariables \/ constants are used to store items of data \n\u2022 \nthe data stored in variables \/ constants are accessed by an identifier \/\/ named data stores \n\u2022 \nthe value of a variable may change during the execution of a program  \n\u2022 \nthe value of a constant will remain the same during the execution of a program   ","key":5.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":1,"Question":"(c) \n Explain how your program for Task 2 highlights items where the stock level is low.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"5 \nOne mark for a suitable hierarchical structure \nOne mark for suitable names for the sub systems for user input and display options \nOne mark for sub systems for user inputs, (choice of display,) food order and payment \nOne mark for sub systems for display output types, pictures and list ","key":6.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":1,"Question":"(d) \n Write an algorithm for Task 2 using either pseudocode, programming statements or a \nflowchart. Assume that Task 1 has been completed and the list of items currently available \nhas already been displayed.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"6(a) \nOne mark for each error identified and correction \n\u2022 \nLine 05 OUTPUT UsefulEnergyOut should be INPUT UsefulEnergyOut \n\u2022 \nLine 06 IF TotalEnergyIn <> -1 AND UsefulEnergy <> -1 should be:  \nIF TotalEnergyIn <> -1 AND UsefulEnergyOut <> -1 \n\u2022 \nLine 11 UNTIL TotalEnergyIn <> -1 OR UsefulEnergyOut <> -1 should be:  \nUNTIL TotalEnergyIn = -1 OR UsefulEnergyOut = -1 ","key":7.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":1,"Question":"(e) \n Explain how your program completes Task 3. Any programming statements used in your \nanswer must be fully explained.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"6(b) \nOne mark for checking for >= 92  \nOne mark for outputting \"A-rated\" only if the condition is met  \nFor example \nIF Efficiency >= 92  \n  THEN  \n    OUTPUT \"A-rated\"  \nENDIF ","key":8.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":2,"Question":"(a) \nQuestion 2 begins on page 8.\nSection B\n2 \n An algorithm has been written in pseudocode to input the weight of 500 items and reject any \nthat are over-weight or under-weight, then print the percentage rejected.\nCount \n 1\nReject \n 0\nOver \n 62\nUnder \n 58\nREPEAT \n  INPUT ItemWeight\n  IF ItemWeight > Over AND ItemWeight < Under\n    THEN\n      Reject \n Reject - 1\n  ENDIF\n  Count \n Count + 1\nUNTIL Count > = 500\nReject \n Reject \/ 100\nPRINT \"Percentage rejected is \", Reject\nFind the four errors in the pseudocode and suggest a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"7(a) \nOne mark for each correct gate, with the correct inputs as shown. ","key":9.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":2,"Question":"(b) \n Describe how you would change the corrected algorithm to calculate the number accepted \ninstead of rejected, using a variable Accept, and print a warning if fewer than 50% are \naccepted.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"7(b) \nA \nB \nC \nX \n0 \n0 \n0 \n0 \n0 \n0 ","key":10.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":3,"Question":"\n3 \nThis flowchart inputs the tread depth of five tyres, four on the car and a spare tyre. Any tread \ndepth of 1.6 mm or less is rejected. To be potentially roadworthy, a car must have four tyres with a \ntread depth greater than 1.6 mm. \nSTART\nEND\nIs\nCount = 6?\nIs\nTreadReject\n<= 1?\nIs\nDepth <=\n1.6?\nINPUT Depth\nTreadReject  0\nCount  1\nNo\nNo\nNo\nYes\nYes\nYes\nOUTPUT \"Car is\nnot roadworthy\"\nOUTPUT \"Car is\npotentially\nroadworthy\"\nCount  Count + 1\nTreadReject  TreadReject + 1\nComplete Trace table 1 for the tread depth input data: \n1.7, 1.9, 1.4, 1.8, 2.0 \nTreadReject\nCount\nDepth\nOUTPUT\nTrace table 1\nComplete Trace table 2 for the tread depth input data: \n1.2, 1.9, 1.4, 1.8, 2.4 \nTreadReject\nCount\nDepth\nOUTPUT\nTrace table 2\n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"0 \n0 ","key":11.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":4,"Question":"\n4 \nFor each of the four checks in the table, place a tick in the correct column to show whether it is an \nexample of a validation or verification check.\nStatements\nValidation\nVerification\nRange check\nDouble entry\nCheck digit\nPresence check\n ","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"0 \n0 \n0 ","key":12.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":5,"Question":"\n5 \nIdentify and describe three loop structures that are available in pseudocode.\nLoop structure 1  \nDescription  \nLoop structure 2  \nDescription  \nLoop structure 3  \nDescription  \n","Marks":"[6]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"1 \n0 ","key":13.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":6,"Question":"(a) \nQuestion 6 begins on page 14.\n6 \nA database table, TRAIN, is used to keep a record of train departures from a station. \nTrain Number\nPlatform\nDestination\nDeparture Time\nStatus\n1A37\n1\nNewtown\n08:00\nOn time\n2X19\n2\nAnytown\n08:10\nLate\n1A29\n1\nBigcity\n08:15\nOn time\n1A28\n2\nAnytown\n08:30\nCancelled\n1A67\n3\nGardenvillage\n08:45\nOn time\n1A37\n1\nNewtown\n08:50\nOn time\n1A24\n2\nCharter Train\n09:00\nLate\n1A67\n3\nGardenvillage\n09:15\nOn time\n Explain why the field Train Number could not be used as a primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"0 \n0 \n0 ","key":14.0},{"Paper_No":"0478_s19_qp_23.pdf","Question_No":6,"Question":"(b) \n A query-by-example has been written to display only the train numbers and platforms of all \ntrains leaving after 08:30 that are late. \nField:\nTrain Number\nPlatform\nDeparture Time\nStatus\nTable:\nTRAIN\nTRAIN\nTRAIN\nTRAIN\nSort:\nShow:\n3\nCriteria:\n= Y\n< 08:30\nor:\n= \"Late\"\nExplain why the query-by-example is incorrect, and write a correct query-by-example. \nExplanation  \nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[7]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"0 ","key":15.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA shop sells a range of mobile devices, SIM cards and accessories as shown in the table:\nCategory\nItem code\nDescription\nPrice ($)\nPhone\nBPCM\nCompact\n29.99\nPhone\nBPSH\nClam Shell\n49.99\nPhone\nRPSS\nRoboPhone \u2013 5-inch screen and 64 GB memory\n199.99\nPhone\nRPLL\nRoboPhone \u2013 6-inch screen and 256 GB memory\n499.99\nPhone\nYPLS\nY-Phone Standard \u2013 6-inch screen and 64 GB memory\n549.99\nPhone\nYPLL\nY-Phone Deluxe \u2013 6-inch screen and 256 GB memory\n649.99\nTablet\nRTMS\nRoboTab \u2013 8-inch screen and 64 GB memory\n149.99\nTablet\nRTLM\nRoboTab \u2013 10-inch screen and 128 GB memory\n299.99\nTablet\nYTLM\nY-Tab Standard \u2013 10-inch screen and 128 GB memory\n499.99\nTablet\nYTLL\nY-Tab Deluxe \u2013 10-inch screen and 256 GB memory\n599.99\nSIM card\nSMNO\nSIM Free (no SIM card purchased)\n0.00\nSIM card\nSMPG\nPay As You Go (SIM card purchased)\n9.99\nCase\nCSST\nStandard\n0.00\nCase\nCSLX\nLuxury\n50.00\nCharger\nCGCR\nCar\n19.99\nCharger\nCGHM\nHome\n15.99\nWrite and test a program or programs for this shop.\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll arrays, variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Setting up the system.\nWrite a program to:\n\u2022 \nuse appropriate data structures to store the item code, description and price information for the \nmobile devices, SIM cards and accessories\n\u2022 \nallow the customer to choose a specific phone or tablet\n\u2022 \nallow phone customers to choose whether the phone will be SIM Free or Pay As You Go\n\u2022 \nallow the customer to choose a standard or luxury case\n\u2022 \nallow the customer to choose the chargers required (none, one or both may be purchased)\n\u2022 \ncalculate the total price of this transaction\n\u2022 \noutput a list of the items purchased and the total price.\nTask 2 \u2013 Allow a customer to order multiple mobile devices.\nExtend Task 1 to:\n\u2022 \noffer the customer the opportunity to purchase an additional mobile device\n\u2022 \nif required, perform bulleted steps 2 to 7 of Task 1 for each additional mobile device and \ncalculate a running total for the customer\n\u2022 \nonce no further devices are required, output the total the customer will need to pay.\nTask 3 \u2013 Offering discounts.\nExtend the program to allow a discount of 10% off the price of every additional phone or tablet \npurchased.\nOutput the new total the customer will need to pay and the amount of money saved.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n (i) Identify two arrays you could have used for Task 1 and, in each case, state its purpose.\nArray 1  \nPurpose  \nArray 2  \nPurpose  \n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"0 ","key":16.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":1,"Question":"(ii) \n Identify two variables you could have used for Task 1 and, in each case, state its \npurpose.\nVariable 1  \nPurpose   \nVariable 2  \nPurpose   \n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"1 \n0 ","key":17.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":1,"Question":"(b) \n  Explain why the item code data could not be stored as a real data type and identify the most \nsuitable data type for the item code data.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"1 ","key":18.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":1,"Question":"(c) \n  Write an algorithm to show how you input your choice of mobile device and SIM card (part of \nTask 1), using either pseudocode, programming statements or a flowchart. It is not necessary \nto show initialisation or setting up of arrays containing product details.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"1 \n0 \n4 marks for 8 correct outputs \n3 marks for 6\/7 correct outputs \n2 marks for 4\/5 correct outputs \n1 mark for 2\/3 correct outputs   ","key":19.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":1,"Question":"(d) \n Explain how your program completes Task 3. Any programming statements used in your \nanswer must be fully explained.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"8(a) \nNumberSales \nTotal \nSaleValue \nAverage \nOUTPUT \n0 \n0 ","key":20.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":2,"Question":"\nSection B starts on page 8.\nSection B\n2 \nTick (\u00fc) one box in each row to identify if the statement about structure diagrams is true or false.\nStatement\nTrue\n(\u00fc)\nFalse\n(\u00fc)\nA structure diagram is a piece of code that is available throughout the \nstructure of a program.\nA structure diagram shows the hierarchy of a system.\nA structure diagram is another name for an array.\nA structure diagram shows the relationship between different components \nof a system.\n","Marks":"[2]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"5.50 \n5.50 ","key":21.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":3,"Question":"(a) \n3 \nPrograms can perform validation and verification checks when data is entered.  \n Give the names of two different validation checks and state the purpose of each one.\nCheck 1 \nPurpose \nCheck 2 \nPurpose \n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"8.90 \n3.40 ","key":22.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":3,"Question":"(b) \n Give the name of one verification check. \n  ","Marks":"[1]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"15.15 \n6.25 ","key":23.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":3,"Question":"(c) \n Describe the difference between validation and verification.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"19.00 \n3.85 ","key":24.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":4,"Question":"(a) \n4 \nThe pseudocode algorithm shown should allow numbers to be entered and should allow \n50 numbers to be stored in an array.\nCount \u2190 0\nREPEAT \n  INPUT Values[Count]\n  Count \u2190 Count + 1\nUNTIL Count = 0\n Explain why the algorithm will never end.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"8.00 \n-11.00 \n0 \n1.6 \nAverage sale value 1.6 \nOne mark for each column NumberSales, Total, SaleValue  \nOne mark for columns Average and OUTPUT  ","key":25.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":4,"Question":"(b) \n  Re-write the original pseudocode so that it terminates correctly and also prevents numbers \nbelow 100 from being stored in the array Values[ ]\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"8(b) \nError \u2013 one mark for identification of error  \nfor example including negative numbers \/ not differentiation between negative and positive values \nCorrection \nOne mark for correct placement and one mark for appropriate action  \nFor example \u2013 after the input box insert a decision box to reject negative numbers  ","key":26.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":4,"Question":"(c) \n Describe how you could change your pseudocode in part (b) so that it prevents numbers \nbelow 100 and above 200 from being stored in the array Values[ ]\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"9(a) ","key":27.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nThe flowchart represents an algorithm.\nThe predefined function DIV gives the value of the result of integer division, \nfor example, y \u2190 9 DIV 4 gives y a value of 2\nAn input value of \u20131 ends the algorithm.\nSTART\nINPUT\nValue\nYes\nYes\nNo\nNo\nIS\nValue =\n-1 ?\nCalc1   Value DIV 2\nEND\nNo\nOUTPUT\nValue\nIS\nCalc1 =\nValue \/ 2 ?\nIS\nCalc2 =\nValue \/ 3 ?\nCalc2   Value DIV 3\nYes\n Complete the trace table for the input data:\n50, 33, 18, 15, 30, \u20131, 45, 12, 90, 6\nValue\nCalc1\nCalc2\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"1 \n9(b)(i) \nCatNo ","key":28.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":5,"Question":"(b) \n Describe the purpose of the algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"9(b)(ii) \nIt is a unique identifier \/\/ no repeated values ","key":29.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":6,"Question":"(a) \n6 \nA garden centre sells garden tools and stores details of these in a database table named TOOLS. \nCode is the primary key in the TOOLS table.\nCode\nDescription\nPrice ($)\nQuantity_Stock\nQuantity_Ordered\nGFLG\nGarden Fork\n50.00\n1\n50\nGSLG\nGarden Spade\n50.00\n11\n0\nGHLG\nGarden Hoe\n45.00\n8\n0\nHFSM\nHand Fork\n9.99\n42\n0\nHSSM\nHand Spade\n9.99\n40\n0\nHWSM\nHand Weeder\n9.99\n11\n0\nHS20\nHose (20 metres)\n45.00\n10\n0\nHS35\nHose (35 metres)\n60.00\n2\n0\nHS50\nHose (50 metres)\n75.00\n20\n60\nYBLG\nYard Brush\n24.99\n100\n0\nLMHD\nLawn Mower \n99.99\n5\n0\nLMBT\nLawn Mower (Battery)\n249.99\n7\n0\nLMPT\nLawn Mower (Petrol)\n349.99\n10\n25\nTRBT\nEdge Trimmer (Battery)\n79.99\n15\n0\nTRPT\nEdge Trimmer (Petrol)\n59.99\n20\n0\nSHSM\nShears\n40.00\n40\n0\nHCSM\nHedge Clippers\n40.00\n45\n0\n State the purpose of the primary key in the TOOLS table.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"9(c) \nTwo marks for 4 correct data types or one mark for 2 or 3 correct data types \nField \nData type \nCatNo \nText\/Alphanumeric \nTitle \nText\/alphanumeric \nFiction \nBoolean  \nPrice \nReal  ","key":30.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":6,"Question":"(b) \n List the output from the data shown in the table TOOLS that would be given by this query-by-\nexample.\nField:\nCode\nDescription\nPrice ($)\nQuantity_Stock\nQuantity_Ordered\nTable:\nTOOLS\nTOOLS\nTOOLS\nTOOLS\nTOOLS\nSort:\nDescending\nShow:\n\u00fc\n\u00fc\n\u00fc\nCriteria:\n>40\n>0\n>0\nor:\n  ","Marks":"[3]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"9(d) \nOne mark for each correct row \nBK08 \nThe Princesses\u2019 Story  \nB Penn \nBK31 \nNetworking for Beginners \nA Smith ","key":31.0},{"Paper_No":"0478_s20_qp_21.pdf","Question_No":6,"Question":"(c) \n Complete the query-by-example grid to output the tools where the quantity in stock is below \n25. Only show the Code, Description and Quantity_Stock fields in ascending order of Code.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"9(e) \nOne mark if two correct or two marks if completely correct \nTitle  \nBookList \nAuthor = \"B Penn\" \/\/ Author = 'B Penn' \/\/ Author Like \"B Penn\" ","key":32.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA car park payment system allows customers to select the number of hours to leave their car in the \ncar park. The customer will get a discount if they enter their frequent parking number correctly. The \nsystem calculates and displays the amount the customer must pay. The price of parking, the number \nof hours the customer can enter, and any discount depend upon the day of the week and the arrival \ntime. The number of hours entered is a whole number. The price per hour is calculated using the \nprice in force at the arrival time. No parking is allowed between Midnight and 08:00.\nDay of the week\nArrival time\nFrom 08:00 to 15:59\nFrom 16:00 to Midnight\nMax stay in hours\nPrice per hour\nHours\nPrice\nSunday\n8\n2.00\nUp to Midnight\n2.00\nMonday\n2\n10.00\nUp to Midnight\n2.00\nTuesday\n2\n10.00\nUp to Midnight\n2.00\nWednesday\n2\n10.00\nUp to Midnight\n2.00\nThursday\n2\n10.00\nUp to Midnight\n2.00\nFriday\n2\n10.00\nUp to Midnight\n2.00\nSaturday\n4\n3.00\nUp to Midnight\n2.00\nA frequent parking number can be entered for discounted parking. This number consists of 4 digits \nand a check digit that is calculated using a modulo 11 check digit calculation. A discount of 50% is \navailable for arrival times from 16:00 to Midnight; the discount is 10% at all other arrival times.\nWrite and test a program or programs to simulate the car park payment system. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Calculating the price to park.\nA customer inputs the day, the hour of arrival excluding minutes (for example 15:45 would be 15), \nthe number of hours to leave their car, and a frequent parking number if available. If the frequent \nparking number has an incorrect check digit, then no discount can be applied. The price to park, \nbased on the day, the hour of arrival, the number of hours of parking required and any discount \navailable, is calculated and displayed.\nTask 2 \u2013 Keeping a total of the payments.\nExtend Task 1 to keep a daily total of payments made for parking. The daily total is zeroed at the \nstart of the day. For the simulation, each customer inputs the amount paid, this must be greater than \nor equal to the amount displayed. There is no change given so the amount input may exceed the \namount displayed. Each customer payment is added to the daily total, and this total is displayed at \nthe end of the day.\nTask 3 \u2013 Making payments fairer.\nCustomers have complained that sometimes they are being charged too much if they arrive before \n16:00 and depart after 16:00. Extend Task 1 to calculate the price before 16:00, then add the \nevening charge. For example, a customer arriving at 14:45 on a Sunday and parking for five hours \nwas previously charged 10.00 and would now be charged 6.00\n1  \nAll variables, constants and other identifiers must have meaningful names.\n Identify two variables that you could have used for Task 1. Give the data type and state the \nuse of each variable.\nVariable 1  \nData type  \nUse  \nVariable 2  \nData type  \nUse  \n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"10(a) \nOne mark for each correct line \nDECLARE X : INTEGER \nDECLARE Y : REAL \nDECLARE Z : BOOLEAN ","key":33.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":1,"Question":"(b) \n Data input by a customer for Task 1 includes the day and the hour of arrival. \nIdentify one suitable validation check for each input and justify your choice. Your validation \nchecks must be different. \nDay of arrival \u2013 validation check  \nJustification  \nHour of arrival \u2013 validation check  \nJustification  \n","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"10(b) \nOne mark for using FUNCTION and ENDFUNCTION and RETURNS BOOLEAN \nOne mark for naming the function Same \nOne mark for defining the two parameters correctly  \nOne mark for comparing the two parameters using ROUND \nOne mark for correctly returning TRUE and FALSE \nOne mark for correct function call \nExample definition: \nFUNCTION Same(A : INTEGER, B : REAL) RETURNS BOOLEAN \n   IF A = ROUND(B,0) \n     THEN \n       RETURN TRUE \n     ELSE \n       RETURN FALSE \n   ENDIF \nENDFUNCTION \nExample call: \nZ \uf0ac Same(X,Y)  ","key":34.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":1,"Question":"(c) \n Explain how your program for Task 1 ensured that the frequent parking number entered by \nthe customer had a valid check digit.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"10(c) \nA function is defined once and called many times or \nDefine \u2013 setting up the function and call is using a function  ","key":35.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":1,"Question":"(d) \n  Write an algorithm for part of Task 2 that simulates customer payment and calculating total \npayments using either pseudocode, programming statements or a flowchart. Assume that \nTask 1 has been completed.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"11 \nRead and understand the question before starting to mark any scripts. Read the whole answer before marking a script: \nCheck if each requirement listed below has been met.   \nRequirements may be met using a suitable built-in function from the programming language used (Python, VB.NET or \nJava) \nOn script if requirement met add seen, NE if partial attempt, cross if no attempt (see marked scripts). \nUse the tables for A02 and A03 below to award a mark in a suitable band using a best fit approach, then add up the total.  \nMarks are available for:  \nto \n\u2022 \nAO2 (maximum 9 marks)  \n\u2022 \nAO3 (maximum 6 marks) \nData Structures required with names as given in the scenario \nArrays or lists TeamName, TeamPoints \nVariables LeagueSize, MatchNo \nRequirements (techniques) \nR1 calculates total points for all matches played by each team (nested iteration, totalling) \nR2 counts and outputs, with the team\u2019s name, for each team \nthe total number of away wins, home wins, drawn matches and lost matches  \n(nested iteration, counting, output) \nR3 finds and outputs \nthe name of the team with the highest number of points and the name of the team with the lowest number of points.  \n(output, selection) ","key":36.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":1,"Question":"(e) \n Explain how your program completed Task 3. Assume that Task 2 has been completed. Any \nprogramming statements used in your answer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"11 \nExample 15-mark answer in pseudocode: \n\/\/ meaningful identifier names and appropriate data structures to store the data required \nDECLARE TeamCounter : INTEGER \nDECLARE MatchCounter : INTEGER \nFOR TeamCounter \uf0ac 1 to LeagueSize \/\/ zero totals for each club\u2019s results \n    TotalPoints[TeamCounter] \uf0ac 0 \nNEXT TeamCounter \nFOR TeamCounter \uf0ac 1 TO LeagueSize \n    AwayWinNo \uf0ac 0  \/\/ zero totals for each club\u2019s result details \n    HomeWinNo \uf0ac 0 \n    DrawNo \uf0ac 0 \n    LostNo \uf0ac 0 \n    FOR MatchCounter \uf0ac 1 TO MatchNo \n        TotalPoints[TeamCounter] \uf0ac TotalPoints[TeamCounter] +  \nTeamPoints[TeamCounter, MatchCounter] \n        CASE OF TeamPoints[TeamCounter, MatchCounter] \n          3 : AwayWinNo \uf0ac AwayWinNo + 1 \n          2 : HomeWinNo \uf0ac HomeWinNo + 1 \n          1 : DrawNo \uf0ac DrawNo + 1 \n          0 : LostNo \uf0ac LostNo + 1 \n        ENDCASE \n    NEXT MatchCounter \n    OUTPUT \"Team \", TeamName[TeamCounter]  \/\/ Output details of a team\u2019s results \n    OUTPUT \"Total points \", TotalResult[TeamCounter] \n    OUTPUT \"Away wins \", AwayWinNo \n    OUTPUT \"Home wins \", HomeWinNo \n    OUTPUT \"Draws \", DrawNo \n    OUTPUT \"Losses \", LostNo ","key":37.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":2,"Question":"\nSection B\n2 \nMost programming languages include basic data types. Ahmad is describing the basic data types \nhe has used. \nState the data type that Ahmad is describing in each sentence. \nChoose the data type from this list of programming terms.\nArray   Boolean   Char   Constant   Function   Integer\nIteration   Procedure   Real   String   Variable\nA number with a fractional part that can be positive or negative and used in calculations\nData type  \nA whole number that can be positive, negative or zero and used in calculations\nData type  \nA single number, symbol or letter\nData type  \nA sequence of characters\nData type  \nA data type with two values, True or False\nData type  \n","Marks":"[5]","Paper_No_Dropped":"0478_m23_ms_22.pdf","Answer":"\/\/ Check for highest and lowest results \n    IF TeamCounter = 1 \n      THEN \n        HighestResult \uf0ac TotalPoints[TeamCounter] \n        LowestResult \uf0ac TotalPoints[TeamCounter] \n    ENDIF \n    IF TotalPoints[TeamCounter] > HighestResult \n      THEN \n        HighestResult \uf0ac TotalPoints[TeamCounter] \n        TopTeam \uf0ac TeamCounter \n    ENDIF \n    IF TotalPoints[TeamCounter] < LowestResult \n      THEN \n        LowestResult \uf0ac TotalPoints[TeamCounter] \n        BottomTeam \uf0ac TeamCounter \n    ENDIF \nNEXT TeamCounter \n\/\/ output names of the teams with the highest and lowest number of points \nOUTPUT \"Top Team \", TeamName[TopTeam]   \nOUTPUT \"Bottom Team \", TeamName[BottomTeam] \nMarking Instructions in italics \nAO2:  \nApply knowledge and understanding of the principles and concepts of computer science to a given context, including the \nanalysis and design of computational or programming problems \n0 \n1\u20133 \n4\u20136 \n7\u20139 \nNo creditable response. \nAt least one programming \ntechnique has been used. \nAny use of selection, iteration, \ncounting, totalling, input and \noutput. \nSome programming techniques \nused are appropriate to the \nproblem. \nMore than one technique seen \napplied to the scenario, check list \nof techniques needed. \nThe range of programming \ntechniques used is appropriate to \nthe problem.   \nAll criteria stated for the scenario \nhave been covered by the use of \nappropriate programming \ntechniques, check list of \ntechniques needed. \nSome data has been stored but \nnot appropriately. \nAny use of variables or arrays or \nother language dependent data \nstructures e.g. Python lists. \nSome of the data structures \nchosen are appropriate and store \nsome of the data required.   \nMore than one data structure used \nto store data required by the \nscenario. \nThe data structures chosen are \nappropriate and store all the data \nrequired. \nThe data structures used store all \nthe data required by the scenario. \nMarking Instructions in italics \nAO3:  Provide solutions to problems by:  \nevaluating computer systems \nmaking reasoned judgements  \npresenting conclusions \n0 \n1\u20132 \n3\u20134 \n5\u20136 \nNo creditable response. \nProgram seen without relevant \ncomments. \nProgram seen with some relevant \ncomment(s). \nThe program has been fully \ncommented \nSome identifier names used are \nappropriate. \nSome of the data structures used \nhave meaningful names. \nThe majority of identifiers used are \nappropriately named. \nMost of the data structures used \nhave meaningful names. \nSuitable identifiers with names \nmeaningful to their purpose have \nbeen used throughout. \nAll of the data structures used \nhave meaningful names. \nThe solution is illogical. \nThe solution contains parts that \nmay be illogical. \nThe program is in a logical order. \nThe solution is inaccurate in many \nplaces. \nSolution contains few lines of code \nwith errors that attempt to perform \na task given in the scenario. \nThe solution contains parts that \nare inaccurate. \nSolution contains lines of code \nwith some errors that logically \nperform tasks given in the \nscenario. Ignore minor syntax \nerrors. \nThe solution is accurate. \nSolution logically performs all the \ntasks given in the scenario. Ignore \nminor syntax errors. \nThe solution attempts at least one \nof the requirements. \nSolution contains lines of code that \nattempt at least one task given in \nthe scenario. \nThe solution meets most of the \nrequirements. \nSolution contains lines of code that \nperform most tasks given in the \nscenario. \nThe solution meets all the \nrequirements given in the \nquestion. \nSolution performs all the tasks \ngiven in the scenario. ","key":38.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":3,"Question":"(a) \n3 \n An algorithm has been written in pseudocode to input the names and marks of 35 students. \nThe algorithm stores the names and marks in two arrays Name[ ] and Mark[ ]. The highest \nmark awarded is found and the number of students with that mark is counted. Both of these \nvalues are output.\n01  HighestMark \u2190 100\n02  HighestMarkStudents \u2190 0\n03  FOR Count \u2190 1 TO 35\n04      OUTPUT \"Please enter student name\"\n05      INPUT Name[Count]\n06      OUTPUT \"Please enter student mark\"\n07      INPUT Mark[Counter]\n08      IF Mark[Count] = HighestMark \n09        THEN \n10          HighestMarkStudents \u2190 HighestMarkStudents \u2013 1\n11      ENDIF\n12      IF Mark[Count] > HighestMark \n13        THEN \n14          Mark[Count] \u2190 HighestMark \n15          HighestMarkStudents \u2190 1\n16      ENDIF\n17  NEXT Count\n18  OUTPUT \"There are \", HighestMarkStudents,\" with the highest mark of \",\n      HighestMark\nGive line numbers where the four errors are to be found in the pseudocode. Suggest a \ncorrection for each error.\nError 1 line number  \nCorrection  \nError 2 line number  \nCorrection  \nError 3 line number  \nCorrection  \nError 4 line number  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_21.pdf","Answer":"1(a)(i) \nMany correct answers, the name must be meaningful. Must relate to Task 1 \n1 mark per bullet point \ne.g.1 \n\u2022 \nArray  \nBusA \n\u2022 \nData type  \ninteger \n\u2022 \nPurpose  \nstoring the minutes late \ne.g.2 \n\u2022 \nArray  \nDay \n\u2022 \nData type  \nstring \n\u2022 \nPurpose  \nstoring the code for the day of the week  \n3\n1(a)(ii) \nMany correct answers, the name must be meaningful. Names shown are \nexamples only.  \n1 mark per bullet point \n\u2022 \nTask 2 variable name  BusAMinsLate \n\u2022 \nData type  \nreal \n\u2022 \nPurpose  \nused in calculation of average minutes late \n\u2022 \nTask 3 variable name  SearchDay \n\u2022 \nData type  \nstring \n\u2022 \nPurpose  \nto input the day to be searched for \n6\n1(b) \n1 mark for each point: \nMP1 \nConditional statement to identify when a bus is late (punctuality \n< 0) \nMP2 \nCount the number of late days for at least one bus route \nMP3 \nTotal the late minutes for at least one bus route \nMP4 \nCalculation of average minutes late \n1 mark for each point (max three points): \nMP5 \nInitialisation of counting\/totalling variables \nMP6 \nIteration through days \nMP7 \nChecking all buses\u00ab \nMP8 \nCount late days and total minutes for all bus routes \nMP9 \nOutput of number of late arrivals or average minutes late for at \nleast one bus route\u00ab \nMP10 \nOutput complete with all bus routes with late arrivals and \naverage minutes late, with appropriate messages \nExample algorithm on next page \n6\n1(b) \nExample algorithm \nCountA \u2190 0; CountB \u2190 0; CountC \u2190 0; CountD \u2190 0; \nCountE \u2190 0; CountF \u2190 0 \nTotalA \u2190 0; TotalB \u2190 0; TotalC \u2190 0; TotalD \u2190 0; \nTotalE \u2190 0; TotalF \u2190 0 \nFOR Days \u2190 0 to 19 \nIF BusA[Days] < 0  \nTHEN  \nCountA \u2190 CountA + 1 \nTotalA \u2190 TotalA + BusA[Days] \nENDIF \nIF BusB[Days] < 0  \nTHEN  \nCountB \u2190 CountB + 1 \nTotalB \u2190 TotalB + BusBA[Days] \nENDIF \nIF BusC[Days] < 0  \nTHEN  \nCountC \u2190 CountC + 1 \nTotalC \u2190 TotalC + BusC[Days] \nENDIF \nIF BusD[Days] < 0  \nTHEN  \nCountD \u2190 CountD + 1 \nTotalD \u2190 TotalD + BusD[Days] \nENDIF \nIF BusE[Days] < 0  \nTHEN  \nCountE \u2190 CountE + 1 \nTotalE \u2190 TotalE + BusE[Days] \nENDIF \nIF BusF[Days] < 0  \nTHEN  \nCountF \u2190 CountF + 1 \nTotalF \u2190 TotalF + BusF[Days] \nENDIF \nNEXT \nPRINT \"The number of late days for each bus route are: \nBus A \"CountA\", Bus B \"CountB\", Bus C \"CountC\", Bus D \", \nCountD\", Bus E \", CountE\", Bus F \"CountF \nPRINT \"The average number of minutes late for each route \nare: Bus A \"TotalA\/20\", Bus B \"TotalB\/20\", Bus C \n\"TotalC\/20\", Bus D \", TotalD\/20\", Bus E \", TotalE\/20\", \nBus F \"TotalF\/20 \n1(c) \nExplanation of how the candidate\u2019s program performed the following: \nThree from: \nMP1 \nThe input stored as a variable \nMP2 \nThe method used to find the position of the day in the Day \narray that matches the input \nMP3 \nThe array index is stored as a variable \nMP4 \nThe index variable used as the array index for each bus array \nMP5 \n\u00aband the contents of each array stored\/output.  \n3\n1(d) \nTwo from: \nMP1 \nAdd a user input and prompt to enter the number of weeks \nrequired to record data on arrival times \nMP2 \nStore the user input for number of weeks as a variable \nMP3 \nCalculation to change number of weeks to number of days  \nMP4 \nReplace the upper limit of the loop with a variable \nMP5 \nIncrease the maximum size of the arrays to accommodate a \nhigher number of weeks \n2","key":0.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":3,"Question":"(b) \n Explain how you could extend the algorithm to also find the lowest mark awarded, count the \nnumber of students with that mark, and output both these values.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s19_ms_21.pdf","Answer":"Many possible answers, those given are examples only. \n1 mark for each correct description and 1 mark for each correct example \nChar \nDescription:  A single character (from the keyboard)  \nExample:   A \/ # \/ 2 \nString \nDescription:  An (ordered) sequence of characters  \nExample:   Hello world \/ #123?Y \/ 234 78963 \nBoolean \nDescription:  A data type with two possible values  \nExample:   TRUE \/ FALSE \n6\n3(a) \nMany possible answers, those given are examples only. \n1 mark per bullet: \n\u2022 \nIF \n\u2022 \nCondition and outcome \nExample answer: \nIF X < 0 \nTHEN \nPRINT \"Negative\" \nELSE \nPRINT \"Not negative\" \nENDIF  \nOR \n1 mark per bullet: \n\u2022 \nCASE \n\u2022 \nCondition and outcome \nExample answer: \nCASE X OF  \n1: PRINT (\"ONE\") \n2: PRINT (\"TWO\") \nOTHERWISE PRINT (\"Less than ONE or more than TWO\") \nENDCASE \n2\n3(b) \n\u2022 \nTo allow different routes through a program \n\u2022 \ndependent on meeting certain criteria \n2\n4(a) \nRange check \n1\n4(b) \nTwo from: \n\u2022 \nThe entered number (Value)is being checked to see that it is not \n< 0 or not > 100 \n\u2022 \nIf it is, it is rejected and the user has to enter another number \/ an \nerror message is displayed \n\u2022 \nOtherwise the number is accepted, the word \u2018Accepted\u2019 is output \nalong with the Value  \n2\n4(c) \nValue \nOUTPUT \nInput a value between 0 and 100 \ninclusive \n200 \nInvalid value, try again \n300 \nInvalid value, try again \n\u20131 \nInvalid value, try again \n50 \nAccepted: 50 \n1 mark \u2013 Value column \n1 mark \u2013 OUTPUT column first line \n1 mark \u2013 OUTPUT column lines two to five \n3\n4(d) \nSTART\nPRINT \"Input a \nvalue between \n0 and 100 \ninclusive\" \nIS Value < 0\nOR\nIS Value > 100 ?\nINPUT Value\nPRINT \"Invalid \nvalue, try \nagain\" \nPRINT \n\"Accepted: \", \nValue \nEND\nYes\nNo\n1 mark \u2013 Input prompt and input value \n1 mark \u2013 Correct decision box labelled sufficiently (Yes\/No) \u2013 allow 2 \ndecision boxes \n1 mark \u2013 Remaining outputs correct \n1 mark \u2013 All connecting lines and arrows to be complete and correct \n1 mark \u2013 Standard flowchart symbols used \n5\n5(a) \nEach data value is unique \n1\n5(b) \n10 records \n1\n5(c) \nBev07 \nLemonade \nBev01 \nCola \n1 mark for each correct content \n1 mark for each correct format \n1 mark for correct order  \n3\n5(d) \nField: \nBevNo \nBevName \nCalories \nTable: BEVERAGES BEVERAGES \nBEVERAGES  \nSort:  \nAscending \nShow: \n; \n;\n\u0086\n\u0086 \u0086 \u0086 \nCriteria: \n>45 \nor:  \n1 mark for correct Field row \n1 mark for Table and Sort rows \n1 mark for correct Show row \n1 mark for correct Criteria rows \n4","key":1.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nThis flowchart inputs the points won and the points lost when playing a game. The difference \nbetween the points won and lost is calculated and depending on the result the player can: move \nup to the next level, stay at the same level, or move down to the previous level. The flowchart \nfinishes when the input for points won is \u20131.\nSTART\nINPUT\nPointsWon, PointsLost\nEND\nYes\nYes\nYes\nNo\nNo\nNo\nOUTPUT\n\"Keep on trying\"\nOUTPUT\n\"Sorry move\ndown\"\nDifference \n   PointsWon - PointsLost\nIS\nPointsWon = \u20131 ?\nIS\nDifference > =\n1000 ?\nIS\nDifference < 0 ?\nOUTPUT\n\"Well done\nmove up\"\n Complete a trace table for this set of input data: \n5000, 4474, 6055, 2000, 7900, 9800, 3000, 2150, \u20131, 6700, 7615\nPointsWon\nPointsLost\nDifference\nOUTPUT\n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"Section A \n1(a) \n4 marks for: \nData Structure(s) max 2  \n\u2022 \nArrays \n\u2022 \nVariable(s) for \/\/ data entry such as reserve price \/\/ index \/ constant \nfor minimum number of items  \nFurther description max 3 \n\u2022 \nData type(s) one or more  \n\u2022 \nUse(s) one or more  \n\u2022 \nName(s) one or more e.g. Item_Number, NumberBids, \nDescription, Reserve Price  \n\u2022 \nSample data for appropriate arrays e.g. 1234, 0, vase, 20.00 \/\/ \nSample data for variable or constant e.g. 10   \n1 mark for: \n\u2022 \nAt least four appropriate named arrays with sample data  \n5\n1(b) \n\u2022 \nKeep a counter\/number \n\u2022 \nAdd one every time a new item is added \nor \n\u2022 \nKeep a list of numbers used \n\u2022 \nUsing a loop check number is not already in the list before a new \nitem number is added\n2\n1(c) \nFive from: \nMP1 \nEnter Buyer Number \nMP2 \nCheck if buyer number valid \nMP3 \nEnter new bid \nMP4 \nCheck if new bid less than or equal to current highest bid \u00ab \nMP5 \n\u00ab if so reject \nMP6 \n\u00ab Otherwise store the bid entered as new highest bid \nMP7 \nIncrease number of bids by one \nMP8 \nStore Buyer Number \nSample answer \nREPEAT \nPRINT \"Enter Buyer Number\" \nINPUT BuyerNumber \nUNTIL BuyerNumber >= BuyerLow and BuyerNumber <= \nBuyerHigh \nREPEAT  \nPRINT \"Enter Bid -99 to exit\" \nINPUT Bid \nIF Bid > HighestBid(item) \nTHEN \nHighestBid(item) \u2190 Bid \nNumberBids(item) \u2190 NumberBids(item) + 1 \nENDIF \nUNTIL Bid > HighestBid(item) OR Bid = -99 \nIF Bid <> -99  \nTHEN \nBuyerItem(item) \u2190 BuyerNumber \nENDIF \nThere are many possible correct answers, this is an example only. \n5\n1(d) \nThree from: \nMP1 \nUsing index number of item, to find if any bids for item exist \nMP2 \nUsing IF\/UNTIL\/WHILE (statement) to compare new bid with \nhighest\/latest bid recorded \nMP3 \nUse an assignment (statement) to replace current highest bid, if \nnew bid greater than current highest bid  \nMP4 \n\u00ab else reject bid \/\/ using a (REPEAT\/WHILE) loop ask for bid to be \nre-entered  \nMP5 \nIf number of bids \/ highest bid = zero add bid (provided greater than \nzero)  \n3\n1(e) \nExplanation of how the candidate\u2019s program performed the following. \nFive from: \nMP1 \nMethod to search item arrays \nMP2 \nConditional statement used to check for the successful bids \nMP3 \n\u00ab equal to \/ greater than reserve price \nMP4 \nMethod used to calculate 10% percent of successful bid (for each \nitem) \nMP5 \n\u00aband add to auction company total fee \nMP6 \nMethod used to display total fee with a suitable message \nAll programming statements used must be explained. \n5\nSection B \n2(a) \n1 mark for each error identified + suggested correction \n\u2022 \nLow \u2190 Count should be Low \u2190 Number    \n\u2022 \nNumber > Low should be Number < Low  \n\u2022 \nUNTIL Count = 99 should be UNTIL Count > 99 or UNTIL \nCount = 100 or UNTIL Count >= 100 \/\/ Count \u2190 1 \nshould be Count \u2190 0 \n\u2022 \nPRINT \"Largest Number is \", Number should be PRINT \n\"Largest Number is \", High \n4\n2(b) \nMP1 \nAdd Total \u2190 0 \/\/ Total \u2190 Number \nMP2 \nAdd Total \u2190 Total + Number \nMP3 \nAdd PRINT \"Total is \", Total \nMP4 \nAll positioning explained \/ seen  \nCount \u2190 1 \nINPUT Number \nHigh \u2190 Number \nLow \u2190 Number \nTotal \u2190 Number \nREPEAT  \nINPUT Number \nTotal \u2190 Total + Number \nIF Number > High  \nTHEN  \nHigh \u2190 Number  \nENDIF \nIF Number < Low  \nTHEN  \nLow \u2190 Number  \nENDIF \nCount \u2190 Count + 1 \nUNTIL Count > 99 \nPRINT \"Largest Number is \", High \nPRINT \"Smallest Number is \", Low \nPRINT \"Total is \", Total \n4","key":0.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":4,"Question":"(b) \n The flowchart needs to be changed. When the difference is more than 5000 the output \nmessage is \u2018Fantastic leap up two levels\u2019. \nDescribe the changes that will need to be made to the flowchart.\n   ","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"Total \nCount \nDistinction \nMark \nOUTPUT \n0 \n0 \n0 \n50 \n50 ","key":1.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":5,"Question":"\n5 \nArrays are data structures used in programming. Explain what is meant by the terms dimension \nand index in an array. Use examples of arrays in your explanations.\nDimension  \nIndex  \n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"0 \n70 \n120 ","key":2.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":6,"Question":"(a) \n6 \nA database table, JUICE, is used to keep a record of cartons of fresh fruit juice available for sale. \nJuice code\nFruit 1\nFruit 2\nSize\nVolume (ml)\nStock level\nLMO10\nMango\nOrange\nLarge\n1000\n18\nMOO05\nOrange\nOrange\nMedium\n500\n8\nSAM02\nApple\nMango\nSmall\n200\n25\nSAA02\nApple\nApple\nSmall\n200\n50\nSPP02\nPineapple\nPineapple\nSmall\n200\n10\nMMM05\nMango\nMango\nMedium\n500\n12\nLMM10\nMango\nMango\nLarge\n1000\n5\nMGG05\nGuava\nGuava\nMedium\n500\n5\nSMO02\nMango\nOrange\nSmall\n200\n7\nMOP05\nOrange\nPineapple\nMedium\n500\n12\nLAA10\nApple\nApple\nLarge\n1000\n32\nSGO02\nGuava\nOrange\nSmall\n200\n10\nLPP10\nPineapple\nPineapple\nLarge\n1000\n3\nLOO10\nOrange\nOrange\nLarge\n1000\n25\nSOO02\nOrange\nOrange\nSmall\n200\n40\n Identify a suitable field to use as the primary key. State a reason for your choice.\nField  \nReason \n","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"0 \n65 \n185 ","key":3.0},{"Paper_No":"0478_s20_qp_22.pdf","Question_No":6,"Question":"(b) \n  Complete the query-by-example grid to display only the stock level and size of all cartons \ncontaining only apple juice.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"0 \n30 \n215 ","key":4.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA school snack shop sells the following items:\nCategory\nItem code\nDescription\nPrice ($)\nHealthy?\nFruit\nFR1\nApple\n1.00\nYes\nFruit\nFR2\nBanana\n1.25\nYes\nFruit\nFR3\nOrange\n1.00\nYes\nFruit\nFR4\nPeach\n1.30\nYes\nSandwich\nSN1\nCheese\n1.75\nYes\nSandwich\nSN2\nCheese and Tomato\n2.20\nYes\nSandwich\nSN3\nChicken\n2.00\nYes\nSandwich\nSN4\nChicken Salad\n2.35\nYes\nSandwich\nSN5\nSalad (Vegetarian)\n2.00\nYes\nCrisps\nCR1\nSalted\n1.00\nNo\nCrisps\nCR2\nCheese and Onion\n1.00\nNo\nCrisps\nCR3\nBarbecue\n1.00\nNo\nCrisps\nCR4\nPrawn Cocktail\n1.00\nNo\nConfectionery\nCN1\nBiscuits\n0.95\nNo\nConfectionery\nCN2\nChocolate Bar\n1.05\nNo\nConfectionery\nCN3\nToffee and Chocolate Bar\n1.25\nNo\nConfectionery\nCN4\nChocolate Wafers\n1.30\nNo\nDrink\nDR1\nCola\n1.20\nNo\nDrink\nDR2\nLemon and Lime Soda\n1.20\nNo\nDrink\nDR3\nOrange Soda\n1.20\nNo\nDrink\nDR4\nOrange Juice\n1.50\nYes\nDrink\nDR5\nApple Juice\n1.50\nYes\nWrite and test a program or programs for this snack shop.\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll arrays, variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Setting up the system to show the items for sale and to allow items to be selected\nWrite a program to:\n\u2022 \nuse arrays to store the item code, description, price and whether or not the item is healthy\n\u2022 \nallow a customer to choose an item to purchase\n\u2022 \noutput the description of each chosen item, its price and whether or not it is healthy\n\u2022 \nallow the customer to choose additional items until they decide to stop\n\u2022 \ncalculate and output the total price of the chosen items.\nTask 2 \u2013 Specifying quantities and introducing restrictions\nExtend Task 1 to:\n\u2022 \nallow the customer to input the quantity of each item they would like to purchase\n\u2022 \ncount the number of healthy and unhealthy items chosen by the customer. For example, two \napples and a peach count as three healthy items\n\u2022 \ncheck that the customer has chosen at least one healthy item for every two unhealthy items. \nIf so, allow the customer to make the purchase. Otherwise, the purchase cannot proceed, a \nmessage is output to say the purchase is cancelled and the customer has to start again.\nTask 3 \u2013 Offering discounts\nExtend the program to:\n\u2022 \neither apply a 10% discount to the total price, when purchasing both healthy and unhealthy \nitems, only if the number of healthy items matches or exceeds the number of unhealthy items\n\u2022 \nor apply a 20% discount to the total price if all the items purchased are healthy items\n\u2022 \ncalculate then output the new total price and the amount of money saved.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n (i) Identify one array you could have used for Task 1 and state its purpose.\nArray  \nPurpose  \n","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"0 \n95 \n310 ","key":5.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":1,"Question":"(ii) \n Identify one variable you could have used for Task 2 and state its purpose.\nVariable  \nPurpose   \n","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"1 \n50 \n360 ","key":6.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":1,"Question":"(iii) \n Identify one constant you could have used for Task 3 and state its purpose.\nConstant  \nPurpose   \n","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"1 \n55 \n415 ","key":7.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":1,"Question":"(b) \n  Explain why a student would be advised not to store the Healthy? data as a real data type \nand identify the most suitable data type for the Healthy? data.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"1 \n85 \n500 ","key":8.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":1,"Question":"(c) \n  Write an algorithm for Task 1 using either pseudocode, programming statements or a \nflowchart. It is not necessary to show initialisation or setting up of arrays. \n  ","Marks":"[6]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"2 \n65 \n565 ","key":9.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":1,"Question":"(d) \n Explain how your program completes Task 3. Assume Task 1 and Task 2 have been \ncompleted. Any programming statements used in your answer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"2 \n35 \n600 ","key":10.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":1,"Question":"(e) \n Describe how you could alter your program to restrict the maximum number of items \npurchased by a customer to six.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"\u20131 \nNumber of \nDistinctions 2 \nAverage Mark 60 \n1 mark for Total and Count columns both correct. \n1 mark for each correct column apart from Total and Count. \nIf no marks awarded allow 1 mark for initialisation of Total, Count and \nDistinction, set to zero. \n4","key":11.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":2,"Question":"\nSection B\n2 \nDraw a line to connect each Description to the most appropriate Pseudocode example.\nDescription\nPseudocode example\nA loop that will iterate  \nat least once\nCASE \u2026 OF \u2026 OTHERWISE \u2026 ENDCASE\nA loop that will not be  \nexecuted on the first test  \nif the condition is false\nNumber \n Number + 1\nA conditional statement\nWHILE \u2026 DO \u2026 ENDWHILE\nTotalling\nSum \n Sum + NewValue\nCounting\nREPEAT \u2026 UNTIL\n","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"Statements \nSelection \nRepetition \nFOR A \u2190 1 TO 100 \nB \u2190 B + 1 \nNEXT A ","key":12.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":3,"Question":"\n3 \nThis section of pseudocode is to be used as a validation check that will continue until a number \nbetween 0 and 499 inclusive is entered.  \n 1      PRINT \"Input a number from 0 to 499 inclusive\"\n 2      FOR Number \n 1 TO 10    \n 3        INPUT Number  \n 4        IF Number < 0 AND Number > 499 \n 5          THEN \n 6            PRINT \"Invalid number, please try again\"\n 7        ENDIF\n 8      UNTIL Number = 0 OR Number = 499\n 9      PRINT Number, \" is within the correct range\" \nThere are three lines in this pseudocode that contain errors. In each case, state the line number \nto identify the incorrect line and write out the corrected line in full.\nError 1 line number  \nCorrection \nError 2 line number  \nCorrection \nError 3 line number  \nCorrection \n","Marks":"[6]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"CASE A OF \n100: B \u2190 A \n200: C \u2190 A \nENDCASE ","key":13.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":4,"Question":"(a) \n4 \nA code must take the form LL9 9LL where L is a letter and 9 is a digit. \n A presence check has already been used to ensure data has been entered. Name two other \ntypes of validation check that can be used to test the code is valid.\nCheck 1 \nCheck 2 \n","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"IF A > 100 \nTHEN  \nB \u2190 A \nENDIF ","key":14.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":4,"Question":"(b) \n Give one example of invalid test data for each of the validation checks you have named in \npart (a) and in each case, give a reason why it fails the check. Each example of test data \nmust be different.\nCheck 1 Invalid Test Data  \nReason  \nCheck 2 Invalid Test Data  \nReason  \n","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"REPEAT \nA \u2190 B * 10 \nUNTIL A > 100 ","key":15.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":5,"Question":"\n5 \nThis algorithm finds prime numbers. \nThe pre-defined function DIV gives the value of the result of integer division, \nfor example, y \n 9 DIV 4 gives y a value of 2\n  Flag \n False\n  INPUT Number \n  WHILE Number <> 0\n    Divisor \n 2\n    WHILE Divisor <= Number \/ 2  \n      Value \n Number DIV Divisor\n      IF Number \/ Divisor = Value\n        THEN\n          Flag \n True\n      ENDIF\n      Divisor \n Divisor + 1\n    ENDWHILE\n    IF Flag = False\n      THEN\n        OUTPUT Number, \" is prime\"\n    ENDIF\n  INPUT Number\n  Flag \n False\n  ENDWHILE\nComplete the trace table for the algorithm using the input data:\n5, 6, 8, 0, 11, 13\nFlag\nNumber Divisor Value\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"1 mark for each correct row \n4","key":16.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":6,"Question":"\nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of the Cambridge Assessment Group. Cambridge Assessment is the brand name of the University of \nCambridge Local Examinations Syndicate (UCLES), which itself is a department of the University of Cambridge.\n6 \nDraw the flowchart symbol for Decision and the flowchart symbol for Process.\nDecision\nProcess\n","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_22.pdf","Answer":"Validation  \nTwo from: \n\u2022 \nautomated checking  \n\u2022 \nchecking that data is reasonable \/ of a certain type \n\u2022 \nchecking that data meets certain criteria \nExample 1 mark \n\u2022 \nrange check \/\/ length check \/\/ type check \/\/ check digit etc. \nVerification  \nTwo from:  \n\u2022 \nchecking that data has not changed\u00ab \n\u2022 \n\u00ab during input to a computer \n\u2022 \n\u00ab during transfer between computers \/ devices \nExample 1 mark \n\u2022 \ndouble entry \/\/ checking against original \/\/ visual check \/\/ use of \nchecksum etc. \n6\n6(a) \nPassengers \n1\n6(b) \nExplanation \nThree from: \n\u2022 \nFlight number not displayed \n\u2022 \nPassengers displayed when should not be  \n\u2022 \nDeparture time = not >  \n\u2022 \n\"Freight and passengers\" flight not excluded  \nRevised QBE \u2013 answers shown are examples only \n1 mark per bullet \n\u2022 \ncorrect field and table names (either 3 or 4 columns) must include \nNotes, Flight number and Departure time \n\u2022 \ncorrect show \n\u2022 \ncorrect time criteria for the candidate\u2019s QBE grid \n\u2022 \nuse of criteria to select planes with passengers only \nField: Flight number Passengers Departure time Notes \nTable: \nFLIGHT \nFLIGHT \nFLIGHT \nFLIGHT \nSort: \nShow: \n; \n\u0086\n\u0086\n\u0086 \nCriteria: \n=Y \n>10:00 \n<> \"Freight and \npassengers\" \nor: \nOR \nField: \nFlight number \nDeparture time \nNotes \nTable: \nFLIGHT \nFLIGHT \nFLIGHT \nSort: \nShow: \n; \n\u0086\n\u0086 \nCriteria: \n>10:00 \n= \"Passengers only\" \nor: \n>10:00 \n=\"Private passenger \nflight\" \n7","key":17.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":7,"Question":"(a) \n7 \nA convenience store which sells general groceries wants to set up a database table called \nSTOCK. The table will contain fields including a description of the item, the price of the item \nand the number in stock for each item. The STOCK table also has a fourth field to be used as a \nprimary key.\n Complete the table to suggest a suitable field name for each of the four fields in the table \nSTOCK. Give the purpose of the data to be stored in each field.\nField name\nPurpose of field contents\n","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"Section A \n1(a) \n4 marks for: \nData Structure(s) max 2  \n\u2022 \nArrays  \n\u2022 \nVariable(s) for \/\/ data entry such as Item Code \/\/ index \/ constant \nfor minimum number of items  \nFurther description max 3 \n\u2022 \nData type(s) one or more  \n\u2022 \nUse(s) one or more  \n\u2022 \nName(s) one or more e.g. Item_Code, Description, Price, \nStock \n\u2022 \nSample data for appropriate arrays e.g. 1234, Notepad, 0.050, \n1000 \/\/ Sample data for variable or constant e.g. 10   \n1 mark for: \n\u2022 \nAll four names and suitable data samples \n5\n1(b) \n\u2022 \nKeep a counter\/number \n\u2022 \nAdd one every time a new item code is added \nor \n\u2022 \nKeep a list of item codes used \n\u2022 \nUsing a loop check item codes is not already in the list before a \nnew item code is added  \n2\n1(c) \n\u2022 \nCheck items in stock array \n\u2022 \n\u00ab with a value of 10 or less \n\u2022 \nDisplay these values in a different way e.g. in red \n3\n1(d) \nFive from: \nMP1 Enter the item code \nMP2 \u00aband check if valid \nMP3 Enter number to purchase and check if less than or equal to number \nin stock for that item number \nMP4 Display error message(s) if needed \nMP5 Calculate price to pay \nMP6 Using the number to purchase calculate discount \u00ab \nMP7 Check for new customer AND $50 spend\/returning customer \neligibility \u00ab \nMP8 \u00ab application of discount(s) if available \nMP9 Check order confirmed \u00ab \nMP10 \u00ab update appropriate stock level \nSample answer \nREPEAT \nPRINT \"Enter Item Code\" \nINPUT ItemCode  \nFound \u2190 False \nCount \u2190 1 \nREPEAT \nIF ItemCode = ItemList(Count} THEN Found \u2190 True \nENDIF \nCount \u2190 Count + 1 \nUNTIL Found OR Count = NoItems \nUNTIL Found \nREPEAT \nPRINT \"Enter Number to purchase\" \nINPUT Number \nUNTIL Number > 0 and Number <= Stock(ItemCode) \nPriceToPay  \u2190 Number * Price (ItemCode) \nIF Number >= 10 AND Number < 20 THEN PriceToPay \u2190 \nPriceToPay * 0.95 ENDIF \nIF Number >= 20 AND Number < 50 THEN PriceToPay \u2190 \nPriceToPay * 0.9 ENDIF \nIF Number >= 50 AND Number < 100 THEN PriceToPay \u2190 \nPriceToPay * 0.75 ENDIF \nIF Number >= 100 AND Number < 500 THEN PriceToPay \u2190 \nPriceToPay * 0.65 ENDIF \nIF Number >= 500 THEN PriceToPay \u2190 PriceToPay * 0.5 \nENDIF \nPRINT \"Enter Value of discount voucher, 0 if no voucher\" \nINPUT Voucher \nPriceToPay \u2190 PriceToPay \u2013 Voucher \nPRINT \"Price to pay is \", PriceToPay \nPRINT \"Order confirmed? Y\/N\" \nINPUT Confirm \nIF Confirm = \"Y\" THEN Stock(ItemCode) \u2190 Stock(ItemCode) \n\u2013 Number ENDIF \n5\n1(e) \nExplanation \nFive from: \nMP1 \nSearch item arrays \nMP2 \nFor stock level = 0 \u00ab \nMP3 \n\u00ab list these as sold out \nMP4 \nCheck stock level at end of day with original stock level\/\/search \nitems sold arrays \nMP5 \n\u00ab if the same, display\/store item code as not sold\/\/if 0, \ndisplay\/store item code as not sold \nMP6 \n\u00ab update largest value if greater than existing greatest value \u00ab \n\/\/use max function on items sold array \u00ab \/\/other method to find \nhighest number sold \u00ab \nMP7 \n\u00ab display this item number with a suitable message \nAll programming statements used must be explained. \n5\nSection B \n2(a) \n1 mark for each error identified + suggested correction \nCount \u2190 1 should be Count \u2190 0 or Count >= 500 should be \nCount > 500 \nAND should be OR \nReject \u2190 Reject \u2013 1 should be Reject \u2190 Reject + 1 \nReject \u2190 Reject\/100 should be Reject \u2190 Reject\/5 or Reject \n* 100 \/ 500 \n4\n2(b) \nMP1 Add Accept \u2190 0 at start \nMP2 Add ELSE Accept \u2190 Accept + 1 after THEN AND Over and \nUnder defined\/position described  \nOR \nAdd Accept \u2190 Accept + 1 after THEN AND Replace IF \nstatement with \u2026<= Over AND \u2026>= UNDER\u00ab \/position described \nMP3 Add Accept \u2190 Accept\/5 after UNTIL AND correct loop\/position \ndescribed \nMP4 ADD IF Accept < 50 THEN PRINT \"Less than 50% \naccepted\" at end \nAccept \u2190 0 \nCount \u2190 1 \/\/ 0 \nReject \u2190 0 \nOver \u2190 62 \nUnder \u2190 58 \nREPEAT \nINPUT ItemWeight \nIF ItemWeight > Over OR ItemWeight < Under \/\/ IF \nItemWeight <= Over AND \nItemWeight >= Under \nTHEN \nReject \u2190 Reject + 1 \nELSE     \nAccept \u2190 Accept + 1\/\/ELSE not required \nENDIF \nCount \u2190 Count + 1  \nUNTIL Count > 500  \/\/ >= 500 \nAccept \u2190 Accept \/ 5 \nIF Accept < 50 \nTHEN  \nPRINT \"Less than 50% accepted\" \nENDIF \n4","key":0.0},{"Paper_No":"0478_s20_qp_23.pdf","Question_No":7,"Question":"(b) \n Complete the query-by-example grid to output stock items where the quantity in stock has \nfallen below 20. Only show the primary key and description of the items.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"TreadReject Count\nDepth \nOUTPUT \n0 ","key":1.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":1,"Question":"(s) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nAn electric mountain railway makes four return trips every day. In each trip the train goes up the \nmountain and back down. The train leaves from the foot of the mountain at 09:00, 11:00, 13:00 and \n15:00. The train returns from the top of the mountain at 10:00, 12:00, 14:00 and 16:00. Each train \nhas six coaches with eighty seats available in each coach. Passengers can only purchase a return \nticket; all tickets must be purchased on the day of travel. The cost is $25 for the journey up and \n$25 for the journey down. Groups of between ten and eighty passengers inclusive get a free ticket \nfor every tenth passenger, provided they all travel together (every tenth passenger travels free). \nPassengers must book their return train journey, as well as the departure train journey, when they \npurchase their ticket. Passengers can return on the next train down the mountain or a later train. \nThe last train from the top of the mountain has two extra coaches on it.\nThe train times are displayed on a large screen, together with the number of tickets still available \nfor each train. Every time a ticket is booked the display is updated. When a train is full, the word \n\u2018Closed\u2019 is displayed instead of the number of tickets available.\nWrite and test a program or programs for the electric mountain railway. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must \nbe validated on entry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Start of the day.\nWrite a program to set up the screen display for the start of the day. Initialise suitable data structure \nto total passengers for each train journey and total the money taken for each train journey. Each \ntrain journey must be totalled separately. There are four journeys up and four journeys down every \nday. \nTask 2 \u2013 Purchasing tickets.\nTickets can be purchased for a single passenger or a group. When making a purchase, check \nthat the number of tickets for the required train journeys up and down the mountain is available. If \nthe tickets are available, calculate the total price including any group discount. Update the screen \ndisplay and the data for the totals. \nTask 3 \u2013 End of the day.\nDisplay the number of passengers that travelled on each train journey and the total money taken \nfor each train journey. Calculate and display the total number of passengers and the total amount \nof money taken for the day. Find and display the train journey with the most passengers that day.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n(a) Identify and give the data type and use of one array that you could have used for Task 1.\nArray  \nData type  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"2 \n1.7 ","key":2.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":1,"Question":"(b) \n Describe two validation checks that could be used when inputting the number of tickets to \nbuy for Task 2. For each validation check give one example of normal data and one example \nof erroneous data.\nValidation check 1  \nNormal data  \nErroneous data  \nValidation check 2  \nNormal data  \nErroneous data   \n","Marks":"[6]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"1.9 ","key":3.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for the part of Task 2 that inputs the tickets required, calculates the total \nprice for the ticket(s) purchased by a passenger including a group discount (if applicable) and \nupdates the data structures used for the totals.\nUse either pseudocode, programming statements or a flowchart.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"4 \n1.4 ","key":4.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how your program completed Task 3. Include any programming statements that you \nhave used and fully explain the purpose of each statement.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"1.8 ","key":5.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":2,"Question":"(a) \nSection B starts on page 8\nSection B\n2 \n Write an algorithm in pseudocode to input 500 positive whole numbers. Each number input \nmust be less than 1000. Find and output the largest number input, the smallest number input \nand the range (difference between the largest number and smallest number). \n  ","Marks":"[6]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"2.0 \nCar is potentially roadworthy \nTreadReject Count\nDepth \nOUTPUT \n0 ","key":6.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":2,"Question":"(b) \n Describe how the algorithm could be changed to make testing less time-consuming.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"1 ","key":7.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":3,"Question":"(a) \n3 \n Draw the most appropriate flowchart symbol for each pseudocode statement.\nPseudocode statement\nFlowchart symbol\nIF Number = 20\nPRINT Number\nNumber \u2190 Number + 1\n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"1.2 ","key":8.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":3,"Question":"(b) \n State the type of each pseudocode statement. For example, X \u2190 X + Y is totalling.\nIF Number = 20  \nPRINT Number  \nNumber \u2190 Number + 1  \n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"1.9 ","key":9.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nThis algorithm checks passwords.\n\u2022 \nEach password must be 8 or more characters in length; the predefined function Length \nreturns the number of characters.\n\u2022 \nEach password is entered twice, and the two entries must match.\n\u2022 \nEither Accept or Reject is output.\n\u2022 \nAn input of 999 stops the process.\nREPEAT\n  OUTPUT \"Please enter password\"\n  INPUT Password\n  IF Length(Password) >= 8\n    THEN\n      INPUT PasswordRepeat\n      IF Password <> PasswordRepeat\n        THEN \n          OUTPUT \"Reject\"\n        ELSE\n          OUTPUT \"Accept\"\n      ENDIF\n    ELSE \n      OUTPUT \"Reject\"\n  ENDIF\nUNTIL Password = 999\n Complete the trace table for the algorithm using this input data: \nSecret, Secret, VerySecret, VerySecret, Pa55word, Pa55word, 999, 888 \nPassword\nPasswordRepeat\nOUTPUT\n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"4 \n1.4 ","key":10.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":4,"Question":"(b) \n Explain how the algorithm could be extended to allow three attempts at inputting the matching \npassword. Any pseudocode statements used in your answer must be fully explained.\n   ","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"1.8 ","key":11.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":5,"Question":"(a) \n5 \nA one-dimensional array dataArray[1:20] needs each element set to zero.\n Write a pseudocode routine that sets each element to zero. Use the most suitable loop \nstructure.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"2.4 \nCar is not roadworthy \n1 mark for each correct pairs of columns.   \n4","key":12.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":5,"Question":"(b) \n Explain why you chose this loop structure.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"Statements \nValidation \nVerification \nRange check ","key":13.0},{"Paper_No":"0478_s21_qp_22.pdf","Question_No":6,"Question":"\n6 \nA database table, PLANT, is used to keep a record of plants sold by a nursery. The table has these \nfields:\n\u2022 \nNAME \u2013 name of plant\n\u2022 \nFLOWER \u2013 whether the plant flowers (True) or not (False)\n\u2022 \nPOSITION \u2013 shade, partial shade or sun\n\u2022 \nSIZE \u2013 small, medium or large\n\u2022 \nPRICE \u2013 price in $\n\u2022 \nNUMBERSOLD \u2013 how many sold\nA query-by-example grid has been completed to display only the price, name and number sold of \nsmall plants that do not flower.\nField:\nNAME\nPRICE\nNUMBERSOLD\nSIZE\nFLOWER\nPOSITION\nTable:\nPLANT\nSort:\nShow:\n3\n3\n3\nCriteria:\n= \"shade\"\nor:\nIdentify the errors in the query-by-example grid.\nRewrite the corrected query-by-example grid.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[5]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"Double entry ","key":14.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA school would like a system to allow students and staff to show their preference on matters relating \nto the school, such as a proposal for changing the start and finish times of the school day.\nOption\nProposed start and finish times of the school day\nA\nStart: 08:00 \u2013 Finish: 15:00\nB\nStart: 08:20 \u2013 Finish: 15:20\nC\nStart: 08:40 \u2013 Finish: 15:40\nD\nStart: 09:00 \u2013 Finish: 16:00\nE\nStart: 09:30 \u2013 Finish: 16:30\nThe school has 150 students and 20 members of staff. The system is required to accept preferences, \nand count and report the results to show student preferences, staff preferences and overall results.\nWrite and test a program or programs for the system. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Setting up the system and recording preferences.\nSet up a system to allow preferences to be recorded for each of five different options, labelled A to E.\n\u2022 \nAllow a description for each option to be entered.\n\u2022 \nAllow students and staff to enter their unique number before their preferences can be entered \n(everyone is given a unique number by the school). \n\u2022 \nCheck if the unique number has already been used:\n\u25cb \nif so, supply a suitable message and do not allow preferences to be entered\n\u25cb \nif not:\n\u2022 \nrecord that the entered unique number has been used \n\u2022 \nallow preferences from 1 to 5 to be entered for each option (1 is \u2018strongly agree\u2019 and  \n5 is \u2018strongly disagree\u2019)\n\u2022 \nstore the preferences in suitable data structures, keeping student and staff preferences \nseparate. \nTask 2 \u2013 Totalling the preferences and reporting the results.\nExtend Task 1 to achieve the following:\n\u2022 \nAllow the preferences for each of the options to be totalled, keeping student and staff \npreferences separate.\n\u2022 \nDisplay the results as a list of the options, with the totals given for each one as:\n\u25cb \nstudent results\n\u25cb \nstaff results\n\u25cb \ncombined results. \nTask 3 \u2013 Changing the program to include a counting method.\nExtend Task 2 to achieve the following:\n\u2022 \nCount the number of times the preference 1, \u2018strongly agree\u2019, was given for each option, \ncounting student and staff preferences separately.\n\u2022 \nDisplay the results as a list of the options, with the number of times preference 1 was given for \neach option as:\n\u25cb \nstudent results\n\u25cb \nstaff results\n\u25cb \ncombined results.\n1 \n All variables, constants and other identifiers must have meaningful names.\n(i) Identify one constant you could have used for Task 1. Give the value that would be \nassigned to the constant and explain its use.\nConstant  \nValue  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"Check digit ","key":15.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":1,"Question":"(ii) \n Identify one variable you could have used for Task 1 and explain its use.\nVariable  \nUse  \n","Marks":"[2]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"Presence check ","key":16.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":1,"Question":"(iii) \n Describe one array you could have used for Task 1. Include the name, data type, length, \nsample data and use for that array.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"1 mark for each correct row \n4","key":17.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":1,"Question":"(b) \n Write an algorithm for Task 2, using pseudocode, programming statements or a flowchart. It \nis not necessary to show details completed in Task 1.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s19_ms_23.pdf","Answer":"\u2022 \nFOR \u2026 TO \u2026 NEXT \n\u2022 \nfixed number of repetitions \n\u2022 \nREPEAT \u2026 UNTIL \n\u2022 \nalways executed \/\/ condition tested at end \n\u2022 \nWHILE \u2026 DO \u2026 ENDWHILE \n\u2022 \nmay not be executed \/\/ condition tested at beginning \n6\n6(a) \nNumber is repeated\/not unique \n1\n6(b) \nThree from: \nTrain number not displayed  \nDeparture time before 8:30 \nCriteria of =Y for Platform not required\/incorrect  \nAll late trains will be shown\/the condition should be on the line above \n4 marks, one mark for each correct column \nField:\nTrain Number \nPlatform \nDeparture Time \nStatus \nTable:\nTRAIN \nTRAIN \nTRAIN \nTRAIN \nSort:\nShow:\n; \n;\n\u0086\n\u0086 \nCriteria:\n> 08:30 \n= \"Late\" \nor:\n7","key":18.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":1,"Question":"(c) \n Explain how you could change your program in Task 1 to allow the number of options \navailable to be increased to six.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"1(a)(i) \nAny meaningful array related to Task 1 \u2013 one mark (max two) e.g. \nItemCode \nDescription \nCorrect purpose for each array related to Task 1 \u2013 one mark (max two) e.g. \n\u2026to store the item codes \n\u2026to store the descriptions of the items for sale ","key":0.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":1,"Question":"(d) \n Explain how your program counts the number of times students enter preference 1 (\u2018strongly \nagree\u2019) for each option (A to E), part of Task 3. Any programming statements used in your \nanswer must be fully explained.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"1(a)(ii) \nAny meaningful variable related to Task 1 \u2013 one mark (max two) e.g. \nPurchaseItem \nTotalPrice \nCorrect purpose for each variable related to Task 1 - one mark (max two) e.g. \n\u2026 to allow input of an item\/code for purchase \n\u2026 to store\/calculate the total price of the transaction ","key":1.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":2,"Question":"\nSection B\n2 \nDraw a line to connect each Data Type to the most appropriate Description.\nReal\nData Type\nMust be a whole number\nDescription\nString\nMust be one of two values\nInteger\nMay be any number\nBoolean\nMay contain any combination of characters\n","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"1(b) \nAny one correct statement e.g. \n\u2022 \nThe Code data is made up of letters\/alphabetic characters\/not numbers \n\u2022 \nReal data must have numerical value\/would not be used in calculations \nOne mark for: \n\u2022 \nString ","key":2.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":3,"Question":"\n3 \nIdentify a suitable validation check that could be used for each piece of normal test data and \ndescribe how it would be used. Each validation check must be different.\nTest data for entering an email address: id27@cambridgeuniversity.com\nValidation check name  \nDescription of use  \nTest data for entering a year: 2021\nValidation check name  \nDescription of use  \nTest data for entering a name: Ericson-Bower\nValidation check name  \nDescription of use  \n","Marks":"[6]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"1(c) \nAny five from \n\u2022 \nInput with message to allow choice of mobile device \n\u2022 \nAttempt to validate input to check for valid item code \n\u2022 \nAccurate validation of input to check for valid item code \n\u2022 \nDetermination of whether device is phone or tablet \n\u2022 \nRestriction to only allow input for SIM card required if mobile device is a phone \n\u2022 \nInput with message to find out if a SIM card is required \nExample answer \nOUTPUT \"Which type of phone or tablet would you like? Input the Item Code\" \nDeviceFlag \u2190 False \nWHILE DeviceFlag = False \n  INPUT DeviceCode \n  Count \u2190 0 \n  WHILE Count<10 DO \n    IF DeviceCode = ItemCode[Count] \n      THEN \n        IF Count < 6 \n          THEN \n            DeviceType \u2190 \"Phone\" \n          ELSE \n            DeviceType \u2190 \"Tablet\" \n        ENDIF \n        DeviceFlag \u2190 True \n        Count \u2190 10 \n    ENDIF \n    Count \u2190 Count + 1 \n  ENDWHILE \n  IF DeviceFlag = False \n    THEN ","key":3.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":4,"Question":"(a) \n4 \nThe pseudocode algorithm should allow a user to input the number of scores to be entered and \nthen enter the scores. The scores are totalled, the total is output and the option to enter another \nset of scores is offered.\n1 \nCount \u2190 0\n2 \nREPEAT \n3 \n  FullScore \u2190 20\n4 \n  INPUT Number\n5 \n  FOR StoreLoop \u2190 1 TO Number\n6 \n    INPUT Score \n7 \n    FullScore \u2190 FullScore\n8 \n  UNTIL StoreLoop = Number\n9 \n  OUTPUT \"The full score is \", FullScore\n10   OUTPUT \"Another set of scores (Y or N)?\"\n11   OUTPUT Another\n12   IF Another = \"N\"\n13     THEN\n14       Count \u2190 1\n15   ENDIF\n16 UNTIL Count = 1\n Identify the four errors in the pseudocode and suggest a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"1(c) \n      OUTPUT \"Your code doesn\u2019t exist, please try again\" \n  ENDIF \nENDWHILE \nIF DeviceType \u2190 \"Phone\" \n  THEN \n    OUTPUT \"Would you like a SIM Card? (Answer Y or N)\" \n    INPUT SimRequired \nENDIF \n1(d) \nAny five from \n\u2022 \nExplanation of finding if more than one device is purchased \n\u2022 \nExplanation of application of device discount \n\u2022 \nExplanation of calculating the discount(s) and finding the new price \n\u2022 \nExplanation of outputting new total \n\u2022 \nExplanation of outputting amount saved \n\u2022 \nExplanation of messages used ","key":4.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":4,"Question":"(b) \n  Show how you could change the algorithm to store the individual scores in the array \nScoreArray[], then find and print the average score once the scores have all been entered.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"2 \nStatement \nTrue \n(\uf0fc) \nFalse \n(\uf0fc) \nA structure diagram is a piece of code that is available throughout the structure of a program. \n\uf0fc \nA structure diagram shows the hierarchy of a system. \n\uf0fc \nA structure diagram is another name for an array. \n\uf0fc \nA structure diagram shows the relationship between different components of a system. \n\uf0fc \nTwo marks for four correct rows.  \nOne mark for three correct rows. ","key":5.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":5,"Question":"(a) \n5 \nThe flowchart represents an algorithm.\nThe algorithm will terminate if 0 is entered at the Op input.\nSTART\nINPUT\nOp\nEND\nYes\nYes\nYes\nYes\nYes\nNo\nNo\nNo\nNo\nNo\nINPUT\nValue1\nINPUT\nValue2\nOUTPUT\n\"Input Error\"\nIS\nOp = 0 ?\nIS\nOp = 1 ?\nIS\nOp = 2 ?\nIS\nOp = 3 ?\nIS\nOp = 4 ?\nAns   Value1 + Value2\nAns   Value1 - Value2\nAns   Value1 * Value2\nAns   Value1 \/ Value2\n Complete the trace table for the algorithm using this input data:\n1, 87, 14, 3, 2, 30, 5, 10, 6, 4, 10, 2, 0, 2, 90, 6\nOp\nValue1\nValue2\nAns\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"3(a) \nOne mark for each correct validation check (max two) \n\u2022 \nRange \n\u2022 \nLength \n\u2022 \nType \n\u2022 \nCheck Digit \nOne mark for each correct related purpose (max two) e.g. \n\u2022 \nTo make sure the data entered falls within a specific set of values  \n\u2022 \nTo make sure the data entered is no longer than specified \n\u2022 \nTo make sure the data entered follows rules related to whether it is numbers of letters \n\u2022 \nTo make sure an identification code entered is genuine or possible ","key":6.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":5,"Question":"(b) \n State the purpose of the algorithm.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"3(b) \nOne mark for correct verification check (max one) \n\u2022 \nDouble (data) entry \n\u2022 \nVisual check ","key":7.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":5,"Question":"(c) \n Suggest an addition that could be made to the algorithm to make it more useful.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"3(c) \nAny two correct statements (max two) e.g. \n\u2022 \nValidation checks if the data entered is possible\/it cannot check if data has been entered correctly. \n\u2022 \nVerification checks if the data entered matches the data submitted for entry\/ it does not check if data matches set \ncriteria. ","key":8.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":6,"Question":"(a) \nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of the Cambridge Assessment Group. Cambridge Assessment is the brand name of the University of \nCambridge Local Examinations Syndicate (UCLES), which itself is a department of the University of Cambridge.\n6 \nA car hire company uses a database table, TREAD, to store details of the cars. The table has \nfields to represent each car\u2019s licence number, mileage, and the tread depth of each of its four \ntyres.\n Suggest suitable names for each of the fields described.\nField name\n","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"4(a) \nAny two correct statements (max two) e.g. \n\u2022 \nThe value of the variable Count begins as 0 \u2026 \n\u2022 \n\u2026 and is incremented by 1 before it is tested by the loop condition \n\u2022 \nCount will never be 0 at the end of the loop ","key":9.0},{"Paper_No":"0478_s21_qp_23.pdf","Question_No":6,"Question":"(b) \n Complete the query-by-example grid to display cars where all four tyres have a tread depth \nof less than 2. Display all the fields, using the field names you created in part (a). The output \nshould be sorted by licence number.\nField:\nTable:\nSort:\nShow:\no\no\no\no\no\no\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"4(b) \nCount \u2190 0  \nREPEAT \n  INPUT Number \n  IF Number >= 100 \n    THEN  \n      Values[Count] \u2190 Number \n  ENDIF      \nCount \u2190 Count + 1     \nUNTIL Count = 50 \nOne mark \u2013 separate INPUT statement \nOne mark \u2013 IF statement attempted \nOne mark \u2013 IF statement completely correct \nOne mark \u2013 termination of loop updated ","key":10.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release material\nFriends of Seaview Pier is an organisation devoted to the restoration and upkeep of a pier in the \ntown. A pier is a wooden structure that provides a walkway over the sea. The pier requires regular \nmaintenance and the friends of the pier need to raise money for this purpose. \nMembers of Friends of Seaview Pier each pay $75 per year, as a contribution to the pier\u2019s running costs. \nThis entitles them to free admission to the pier throughout the year. They can also volunteer to help run \nthe pier, by working at the pier entrance gate, working in the gift shop, or painting and decorating. \nTo provide additional income, the pier\u2019s wooden planks can be sponsored. A brass plaque, which \ncontains a short message of the sponsor\u2019s choice, is fitted to a plank on the pier, for a donation of \n$200. \nWrite and test a program or programs for the Friends of Seaview Pier:\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. Data must be \nvalidated on entry.\n\u2022 \nAll outputs, including error messages, need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 becoming a member of Friends of Seaview Pier\nSet up a system to enable people to become members of Friends of Seaview Pier and for each new \nmember enter:\n\u2022 \ntheir first name and last name\n\u2022 \nwhether or not they wish to work as a volunteer \n\u25cb \nif they choose to volunteer, identify the area from:\n\u2013 \nthe pier entrance gate\n\u2013 \nthe gift shop\n\u2013 \npainting and decorating  \n\u2022 \nthe date of joining\n\u2022 \nwhether or not they have paid the $75 fee. \nAll of this information needs to be stored using suitable data structures.\nTask 2 \u2013 using the membership data\nExtend the program in Task 1 so that a list of the first and last names of members can be output in \nany of the following categories:\n\u2022 \nMembers who have chosen to work as volunteers.\n\u2022 \nVolunteers who would like to work at the pier entrance gate.\n\u2022 \nVolunteers who would like to work in the gift shop.\n\u2022 \nVolunteers who would like to help with painting and decorating tasks.\n\u2022 \nMembers whose membership has expired (they have not re-joined this year).\n\u2022 \nMembers who have not yet paid their $75 fee.\nTask 3 \u2013 sponsoring a wooden plank\nAdd an additional option to the program in Task 1 to enable the pier\u2019s wooden planks to be \nsponsored. Separate data structures should be used to store the names of the individuals and \nthe short messages they would like to have written on their brass plaque. An output would display \neverything that was input for the sponsor to confirm. If errors are found, the program should allow \ndata to be re-entered. Once complete, the data is stored and the sponsor is charged $200.\n1 \n Describe the data structures you could have used in Task 1. Your description should include \ntypes of data structure, names used for data structures, their uses and examples of sample \ndata.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"4(c) \nAny two correct statements (max two) e.g. \n\u2022 \nAlter the IFstatement\/add a second IF statement\/comparison that\u2019s already there \u2026 \n\u2022 \n\u2026 so that additional criteria set an upper limit of <=200 ","key":11.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":1,"Question":"(b) \n Explain how you could change your program in Task 1 to total all the money collected from \nnew members who have paid.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"5(a) \nValue \nCalc1 \nCalc2 \nOUTPUT \n50 \n25 ","key":12.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":1,"Question":"(c) \n  Describe how data input in Task 1 could be validated to find out if a new member wants to \nwork as a volunteer.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"33 ","key":13.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":1,"Question":"(d) \n Write an algorithm to show how your program completes Task 3 assuming the option to \nsponsor a wooden plank has been chosen, using pseudocode, programming statements or a \nflowchart. Details completed in Task 1 are not required.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"11 ","key":14.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":1,"Question":"(e) \n Explain how your program allows any one of the member or volunteer lists to be selected and \ndisplayed (part of Task 2). Any programming statements used in your answer must be fully \nexplained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"9 ","key":15.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":2,"Question":"\nSection B\n2 \nTick (\u00fc) one box in each row to identify the most appropriate data type for each description. Only \none tick (\u00fc) per column.\nDescription\nData type\nBoolean\nChar\nInteger\nReal\nString\na single character from the keyboard\nmultiple characters from the keyboard\nonly one of two possible values\nonly whole numbers\nany number\n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"18 ","key":16.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":3,"Question":"\n3 \nGive one piece of normal test data and one piece of erroneous test data that could be used to \nvalidate the input of an email address.\nState the reason for your choice in each case.\nNormal test data  \nReason  \nErroneous test data  \nReason  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"7 ","key":17.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":4,"Question":"(a) \n4 \nThe flowchart shows an algorithm that should allow 60 test results to be entered into the variable \nScore. Each test result is checked to see if it is 50 or more. If it is, the test result is assigned to the \nPass array. Otherwise, it is assigned to the Fail array. \n Complete this flowchart:\nSTART\nPassCount\n0\nEND\nYes\nFailCount\n0\nCount\n0\nCount\nCount + 1\nYes\nNo\nNo\n","Marks":"[6]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"30 ","key":18.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":4,"Question":"(b) \n Write a pseudocode routine that will check that each test result entered into the algorithm is \nbetween 0 and 100 inclusive.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"10 \n30 \n-1 \nOne mark for each correct column (max four) ","key":19.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nThe pseudocode represents an algorithm.\nThe pre-defined function DIV gives the value of the result of integer division. \nFor example, Y = 9 DIV 4 gives the value Y = 2 \nThe pre-defined function MOD gives the value of the remainder of integer division. \nFor example, R = 9 MOD 4 gives the value R = 1 \nFirst \u2190 0\nLast \u2190 0\nINPUT Limit\nFOR Counter \u2190 1 TO Limit\n  INPUT Value\n  IF Value >= 100\n    THEN\n      IF Value < 1000\n        THEN\n          First \u2190 Value DIV 100\n          Last \u2190 Value MOD 10\n            IF First = Last\n              THEN\n                OUTPUT Value\n            ENDIF\n      ENDIF\n  ENDIF\nNEXT Counter\n Complete the trace table for the algorithm using this input data:\n8, 66, 606, 6226, 8448, 642, 747, 77, 121\nCounter\nValue\nFirst\nLast\nLimit\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"5(b) \nAny two correct statements e.g. \n\u2022 \nThe program outputs a value \n\u2022 \nThat is divisible by 6 \/\/ 2 and 3 ","key":20.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":5,"Question":"(b) \n Describe the purpose of the algorithm. \n  ","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"6(a) \nTo uniquely identify a product (in TOOLS) ","key":21.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":6,"Question":"(a) \n6 \nA computer game shop records its stock levels in a database table called GAMES. The fields used \nin the stock table are shown.\nName\nDescription\nGameID\nprimary key\nGameName\nthe name of each game\nAgeRestriction\nthe minimum age at which a person is allowed to play each game\nGamePrice\nthe selling price for each game\nNumberStock\nthe quantity of each game currently in stock\nOnOrder\nwhether or not each game is on order from the suppliers\nDateLastOrdered\nthe date the most recent order for each game was placed \nGameDescription\na summary of the contents and purpose of each game\n State the number of fields that are in the table GAMES. \n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"6(b) \nHS50 \nHose (50 metres) \n60\nGFLG \nGarden Fork \n50\nLMPT \nLawn Mower (Petrol) \n25\nOne mark for correct data \nOne mark for correct format \nOne mark for data in correct order ","key":22.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":6,"Question":"(b) \n State one important fact that must be true for a field to be a primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_21.pdf","Answer":"6(c) \nField: Code \nDescription \nQuantity_Stock \nTable: TOOLS \nTOOLS \nTOOLS \nSort: Ascending \nShow: \n\uf0fe \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria:  \n<25 \nor:  \nOne mark for each completely correct column (max three) \n3 ","key":23.0},{"Paper_No":"0478_s22_qp_21.pdf","Question_No":6,"Question":"(c) \n Complete the query-by-example grid to output all the games that have no stock and that are \non order with the supplier. Display only the GameID, GameName and GamePrice fields in \nalphabetical order of the name of the game.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"Section A \n1(a) \nFor two variables \nOne mark for identification of a variable with a suitable data type and one mark for its use \nVariable \nhourArrived \nData type  \ninteger \nUse  \nto calculate the price based on the number of hours parking \nVariable \npriceToPay \nData type  \nreal \nUse  \nstore result of price calculation \nMany correct answers, these are examples only.  ","key":0.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":1,"Question":"(s) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release material\nA program is needed to allow a Wildlife Park to sell tickets. A booking consists of one or more tickets for \nthe same day and can be made up to a week in advance. A booking can be made for a visit of one day \nor two consecutive days. A booking can have extra attractions included. A booking will be valid for the \nday chosen only.\nTicket type\nCost for one day\nCost for two days\none adult\n$20.00\n$30.00\none child (an adult may bring up to two children)\n$12.00\n$18.00\none senior\n$16.00\n$24.00\nfamily ticket (up to two adults or seniors, and three children) \n$60.00\n$90.00\ngroups of six people or more, price per person\n$15.00\n$22.50\nExtra attraction\nCost per person\nlion feeding\n$2.50\npenguin feeding\n$2.00\nevening barbecue (two-day tickets only)\n$5.00\nWrite and test a program or programs for the Wildlife Park: \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. Data must be \nvalidated on entry. \n\u2022 \nAll outputs, including error messages, need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 displaying the ticket options and the extra attractions available\nSet up your program to:\n\u2022 \ndisplay the options, attractions and prices for one-day tickets\n\u2022 \ndisplay the options, attractions and prices for two-day tickets\n\u2022 \nshow the days available for booking; assume that there are tickets available for any valid day.\nTask 2 \u2013 process a booking\nExtend your program for Task 1 to:\n\u2022 \ninput the tickets and extra attractions required, then calculate the total cost of the booking\n\u2022 \nallocate a unique booking number\n\u2022 \ndisplay the booking details, including the total cost and the unique booking number\n\u2022 \nrepeat as required.\nTask 3 \u2013 ensuring each booking is the best value\nCheck that the total for each booking gives the best value and offer an alternative if this is not the case. \nFor example, buying two family tickets is better than a group ticket for a group of 10 that includes \nfour adults and six children.\n1  \nAll variables, constants and other identifiers must have meaningful names.\n(a) (i) Identify one constant that you could have used for Task 1.\n Give the value and use of the constant.\nConstant  \nValue  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"1(b) \nFor each validation check \nOne mark for identification of a check and one mark for the justification \nDay \nCheck \npresence check \nJustification  \nneed to enter day to be able to calculate price  \nHour \nCheck \nrange check \nJustification \nneed to check hour is between 8 and 23 \nMany correct answers, these are examples only.  ","key":1.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":1,"Question":"(ii) \n Identify one variable that you could have used for Task 2.\n Give the data type and use of the variable.\nVariable  \nData type  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"1(c) \nAny four from: \n\u2022 \nAll 5 digits input \n\u2022 \nEach of the first 4 digits is multiplied by a weight based on its position \n\u2022 \nSpecific method of individualising the digits described \n\u2022 \nAdded together divided by 11  \n\u2022 \nRemainder used to calculate correct 5th digit \n\u2022 \nChecked against 5th digit input \n\u2022 \nIf the same, then valid ","key":2.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":1,"Question":"(b) \n Explain how your program showed the days available for booking in Task 1.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"1(d) \nAny four from: \n\u2022 \nInput amount \n\u2022 \nCheck amount greater than or equal to the price to pay \u2026 \n\u2022 \n\u2026 True \u2013 add amount to daily total \n\u2022 \n\u2026 False \u2013 ask for payment to be re-entered \n\u2022 \n\u2026 Until valid amount input \nSample answer \n    PRINT \"Please Enter Payment\" \n    INPUT amount \n    WHILE amount < priceToPay DO \n        PRINT \"Insufficient payment, please enter new Payment\" \n        INPUT amount \n    ENDWHILE \n    totalPayment \u2190 totalPayment + amount ","key":3.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":1,"Question":"(c) \n Explain how your program made sure that each booking number allocated in Task 2 was \nunique.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"1(e) \nExplanation \nAny four from: \n\u2022 \nAdd number of hours selected to arrival hour \n\u2022 \nCheck if this is greater than 16 \n\u2022 \nTrue \u2013 calculate price up to 16 \u2026 \n\u2022 \n\u2026 using current price in force \n\u2022 \n\u2026 and add in evening charge \n\u2022 \nFalse \u2013 calculate price as usual \nProgramming statements can be used but must be explained. ","key":4.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":1,"Question":"(d) \n Write an algorithm for the part of Task 2 that inputs the tickets and extra attractions required \nthen calculates the total cost of the booking.\nAssume that the booking is for a single day. \nUse pseudocode, programming statements or a flowchart.  \n  ","Marks":"[6]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"Section B \n2  \nReal \nInteger \nChar\/String \nString \nBoolean ","key":5.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":1,"Question":"(e) \n Explain how your program decides when a family ticket is better value in Task 3.  \nAny programming statements that you include in your answer must be fully explained.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"3(a) \nOne mark for error and correction \nLine 1 HighestMark \u2190 0 \nLine 7 INPUT Mark[Count] \nLine 10 HighestMarkStudents \u2190 HighestMarkStudents + 1 \nLine 14 HighestMark \u2190 Mark[Count]  ","key":6.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":2,"Question":"(a) \nSection B starts on page 8\nSection B\n2  \nAn algorithm allows a user to input their password and checks that there are at least eight \ncharacters in the password. Then, the user is asked to re-input the password to check that both \ninputs are the same. The user is allowed three attempts at inputting a password of the correct \nlength and a matching pair of passwords. The pre-defined function LEN(X) returns the number of \ncharacters in the string, X\n01  Attempt \u2190 0\n02  REPEAT\n03    PassCheck \u2190 TRUE\n04    OUTPUT \"Please enter your password \"\n05    INPUT Password\n06    IF LEN(Password) < 8\n07      THEN\n08        PassCheck \u2190 TRUE\n09      ELSE\n10        OUTPUT \"Please re-enter your password \"\n11        INPUT Password2\n12        IF Password <> Password\n13           THEN\n14           PassCheck \u2190 FALSE\n15        ENDIF\n16    ENDIF\n17    Attempt \u2190 Attempt + 1\n18  UNTIL PassCheck OR Attempt <> 3\n19  IF PassCheck\n20    THEN\n21     OUTPUT \"Password success\"\n22    ELSE\n23      OUTPUT \"Password fail\"\n24  ENDIF\n Identify the three errors in the pseudocode and suggest a correction to remove each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \n","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"3(b) \nAny six from: \nAdd variable LowestMark \u2026 \n\u2026 Set this to a high value for example 100 \nAdd variable LowestMarkStudents \u2026 \n\u2026 Set this to zero \nCheck if Mark[Count] = LowestMark \u2026 \n\u2026 True \u2013 add 1 to LowestMarkStudents \nCheck if Mark[Count] < LowestMark \u2026 \n\u2026 True \u2013 set LowestMarkStudenta to 1 and set LowestMark to Mark[Count] \nAdd extra output statement ","key":7.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":2,"Question":"(b) \n The algorithm includes two types of check on the data input.\nIdentify and describe each type of check.\nType of check 1  \nDescription  \nType of check 2  \nDescription  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"4(a) \nOne mark for correct input (PointsWon and PointsLost) \nOne mark for correct calculations (Difference) \nOne mark for correct output  \nPointsWon \nPointsLost \nDifference \nOUTPUT \n5000 \n4474 \n526 \nKeep on trying \n6055 \n2000 \n4055 \nWell done move up \n7900 \n9800 \n-1900 \nSorry move down \n3000 \n2150 \n850 \nKeep on trying \n-1 \n6700 ","key":8.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":2,"Question":"(c) \n  Give two sets of test data for this algorithm and a reason for choosing each set.\nEach set of test data and its reason must be different.\nSet 1  \nReason  \nSet 2  \nReason  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"4(b) \nAny three from: \n\u2022 \nAdd extra decision box \u2026 \n\u2022 \n\u2026 before checking for difference greater than or equal to 1000  \n\/\/ change Is difference >= 1000 to >= 1000 and <= 5000 \n\u2022 \nCheck for difference greater than 5000  \n\u2022 \nAdd extra Output \u2018Fantastic leap up two levels\u2019\u2026 \n\u2022 \n\u2026 before flowline returns to input  ","key":9.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":3,"Question":"(a) \n3 \n Describe a one-dimensional array. Include an example of an array declaration.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"5 \nOne mark for explanation of dimension \nOne mark for explanation of index \nOne mark for inclusion of an example \nThe dimension is the number of indexes required to access an element. \nThe index is the position of the element in an array \nFor example A[25] is the 25th element of a one-dimensional array. ","key":10.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":3,"Question":"(b) \n Explain how indexing could be used to search for a value stored in a one-dimensional array.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"6(a) \nOne mark for field and one mark for reason \nField \nJuice code \nReason only unique identifier ","key":11.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nThis algorithm checks the temperature of hot food being served to customers.\nSTART\nCounter\n0\nCounter\nCounter + 1\nError   \n((Hot + Cold) \/ Counter) * 100\nError\nHot\n0\nCold\n0\nServe\n0\nServe\nServe + 1\nINPUT Temp\nOUTPUT\nError\nOUTPUT\n\"Too Cold\"\nOUTPUT\n\"Too Hot\"\nIs Temp\n= \u20131?\nIs Temp\n> 86?\nIs Temp\n< 63?\nEND\nHot\nHot + 1\nCold\nCold + 1\nYes\nNo\nNo\nNo\nYes\nYes\n Complete the trace table for the algorithm using this input data: \n75, 78, 84, 87, 91, 80, 75, 70, 65, 62, \u20131, 20 \nCounter\nHot\nCold\nServe\nTemp\nError\nOUTPUT\n","Marks":"[7]","Paper_No_Dropped":"0478_s20_ms_22.pdf","Answer":"6(b) \nField: Fruit 1 \nFruit 2 \nSize \nStock level \nTable: JUICE \nJUICE \nJUICE \nJUICE \nSort:  \nShow: \n\uf06f \n\uf06f \n\uf0fe \n\uf0fe \nCriteria: =\"Apple\" \n=\"Apple\" \nor:  \nOne mark for each correct column \n4 ","key":12.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":4,"Question":"(b) \n State how the final output from the algorithm could be improved. \n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"1(a)(i) \nAny array related to Task 1 \u2013 one mark e.g. \nItemCode \nDescription \nCorrect purpose related to Task 1 - one mark e.g. \n\u2026to store the product code of the items in stock \n\u2026to store descriptions\/names of the items on sale ","key":0.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":4,"Question":"(c) \n Identify the process in the algorithm that is not required.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"1(a)(ii) \nAny variable related to Task 2 \u2013 one mark e.g. \nQuantity \nHealthyNum \nCorrect purpose related to Task 2 - one mark e.g. \n\u2026 to allow input of the quantity of a product \n\u2026 to store\/track the number of healthy items in the order ","key":1.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":5,"Question":"(a) \nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of Cambridge Assessment. Cambridge Assessment is the brand name of the University of Cambridge \nLocal Examinations Syndicate (UCLES), which is a department of the University of Cambridge.\n5 \nA database table, NURSE, is used to keep a record of disposable items worn by veterinary nurses.  \nThis is part of the table:\nItemNumber\nDescription\nSingleUse\nUses\nStockLevel\nReorderLevel\nDIG1\nGlove (pair)\nY\n1\n500\n800\nDIA1\nApron\nY\n1\n700\n800\nDIM5\nHair net\nY\n1\n650\n500\nDIA2\nApron\nN\n5\n 25\n100\nDIS4\nSuit\nN\n3\n 70\n 50\nDIV9\nShoe cover (pair)\nY\n1\n400\n250\n Complete this query-by-example grid to display only the item number and the description of \nsingle use items, where the stock level is below the reorder level.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"1(a)(iii) \nAny constant related to Task 3 \u2013 one mark e.g. \nOff10 \nOff20 \nCorrect purpose related to Task 3 - one mark e.g. \n\u2026 to store the \u2018matching healthy items\u2019 option discount rate \n\u2026 to store the \u2019all healthy items\u2019 discount rate ","key":2.0},{"Paper_No":"0478_s22_qp_22.pdf","Question_No":5,"Question":"(b) \n Give a reason why the field SingleUse is not required in the table NURSE.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"1(b) \nAny two correct statements e.g. \n\u2022 \nThe Healthy? data is not numerical \n\u2022 \nBoolean ","key":3.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release material\nSeaview Castle Visitor Centre is open seven days a week. It offers a range of facilities and activities \nincluding meeting rooms, a permanent fossil exhibition, supervised walks along the cliff tops and an \nold stone quarry.  \nThere are three meeting rooms, which can each be booked separately. There is one large room \nthat can be used for a variety of activities such as showing films, holding presentations, displaying \nexhibitions or wedding receptions. There are also two smaller meeting rooms. Each room can be \nbooked by the day according to the following tariff:\nRoom\nCost per day\nlarge\n$295\nsmall 1\n$175\nsmall 2\n$150\nWrite and test a program or programs to arrange meeting room bookings: \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. Data must be \nvalidated on entry. \n\u2022 \nAll outputs, including error messages, need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 setting up a booking system structure for the meeting rooms\nSet up suitable data structures for each of the three meeting rooms to store:\n\u2022 \nwhen it is booked during a fixed eight-week period\n\u2022 \nthe client\u2019s name (the person making the booking)\n\u2022 \na unique booking code\n\u2022 \nthe cost of the booking.  \nTask 2 \u2013 booking a meeting room\nExtend the program in Task 1 to enable bookings to be made so that the client enters their name, \nthe meeting room required and the day of the booking. After the data has been entered, the program \nshould check if the requested day is available for the required meeting room and if not, the client \nshould be allowed to enter an alternative day or exit the program.\nIf the requested day is available, the booking details and cost of the booking should be output for \nthe client to confirm. Once confirmed, a unique booking code should be generated and stored in \nboth the appropriate meeting room data structure and the unique booking code data structure. The \nclient\u2019s name and cost of the booking should be stored in the appropriate data structures set up in \nTask 1. \nBookings of more than one day must be entered as separate single day bookings. \nTask 3 \u2013 using the booking data\nExtend the program in Task 1 and Task 2 to make use of the data that is available, to:\n\u2022 \nselect a meeting room and output the days when it is free\n\u2022 \ntotal and output the amount of money currently taken for all three meeting rooms\n\u2022 \ncheck the bookings for a specific client.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n Identify one variable and one array you could have used for Task 1 or Task 2. \nGive the use for the variable and array.\nVariable  \nUse  \nArray  \nUse  \n  ","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"1(c) \nAny six from \n\u2022 \nInput of item\/item code (with message) \n\u2022 \nAttempt at use of validation of input for item\/item code \n\u2022 \nFully functional validation of input for item\/item code \n\u2022 \nFind location of item\/item code in array \n\u2022 \nRetrieve item description, price and whether it is healthy \n\u2022 \nCheck if another item is required \u2013 message and input \n\u2022 \nUse of loop to repeat purchase option \n\u2022 \nRunning total of price \n\u2022 \nOutput of description of each item, price and healthy status (with message) \n\u2022 \nOutput total price with message (outside final loop) \nExample answer \nAnotherItem \u2190 \"Y\" \nWhile AnotherItem = \"Y\" \n  SnackCodeFlag \u2190 False  \n  OUTPUT \"Input an Item Code\" \n  WHILE SnackCodeFlag = False \n    INPUT SnackCode \n    Count \u2190 0 \n    WHILE Count < 22 DO \n      IF SnackCode = ItemCode[Count] \n        THEN \n          SnackCodeFlag \u2190 True \n          OUTPUT \"Item Description \", Description[Count], \" Item Price \", \n          Price[Count], \" Item is Healthy? \", Healthy[Count] \n          TotalPrice \u2190 TotalPrice + Price[Count] \n          Count \u2190 22 \n      ENDIF \n      Count \u2190 Count + 1 \n    ENDWHILE \n    IF SnackCodeFlag = False \n      THEN ","key":4.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":1,"Question":"(b) \n  Describe how you could test if the validation of the input to choose a meeting room works \n(Task 2).\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"1(c) \n        OUTPUT \"Your Item Code doesn\u2019t exist, please try again\" \n    ENDIF \n  ENDWHILE \n  OUTPUT \"Would you like another item? (Answer Y or N)\" \n  INPUT AnotherItem \nENDWHILE   \nOUTPUT \"The total price is \", TotalPrice \n1(d) \nAny four from \n\u2022 \nExplanation of comparing numbers of healthy and non-healthy items \n\u2022 \nExplanation of checking for zero unhealthy items \n\u2022 \nExplanation of applying the 10% discount rule \n\u2022 \nExplanation of applying the 20% discount rule \n\u2022 \nExplanation of calculating the new total price and money saved \n\u2022 \nExplanation of output ","key":5.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":1,"Question":"(c) \n Explain how your program in Task 2 could be altered to allow a 30% discount on bookings for \nthe same meeting room of two to six days, inclusive.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"1(e) \nOne for each correct statement (max two) \n\u2022 \nUse a loop structure when making purchases\u2026 \/ introduce a count of items when making purchases \u2026 \/modify the \nexisting loop structure \n\u2022 \n\u2026 that terminates after six iterations ","key":6.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":1,"Question":"(d) \n Write an algorithm to show how your program completes the following parts of Task 2: \n\u2022 \noutput the booking details and cost of the booking\n\u2022 \ntake confirmation from the client\n\u2022 \ngenerate a unique booking code\n\u2022 \nstore the booking details. \nAssume that Task 1 and the first part of Task 2 have been completed. \nAssume that the booking is for a single day and that the requested booking day is available. \nUse pseudocode, programming statements or a flowchart.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"2 \nDescription                                                       Pseudocode example \nOne mark \u2013 one correct link \nTwo marks \u2013 two correct links \nThree marks \u2013 three correct links \nFour marks \u2013 four\/five correct links ","key":7.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":1,"Question":"(e) \n Explain how your program selects a meeting room, finds and then outputs the days when it \nis available (part of Task 3). Any programming statements used in your answer must be fully \nexplained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"CASE \u2026 OF \u2026 OTHERWISE \u2026 ENDCASE \nREPEAT \u2026 UNTIL \nWHILE \u2026 DO \u2026 ENDWHILE \nSum \u2190 Sum + NewValue \nNumber \u2190 Number + 1 \nA loop that will iterate at least once \nA loop that will not be executed on the first \ntest if the condition is false \nA conditional statement \nTotalling \nCounting ","key":8.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":1,"Question":"(s) \nSection B\n2 \nTick (3) one or more boxes in each row to match the type of test data to each description. \nDescription\nTypes of test data\nBoundary\nErroneous \/ \nAbnormal\nExtreme\nNormal\ntest data that is always on the limit of \nacceptability\ntest data that is either on the limit of \nacceptability or test data that is just \noutside the limit of acceptability\ntest data that will always be rejected\ntest data that is within the limits of \nacceptability\n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"Line 2 and Line 4 errors - One mark for each correct identification and correction of error \nError 1 line number: Line 2 \nCorrection:       REPEAT \nError 2 line number: Line 4 \nCorrection:       IF Number < 0 OR Number > 499 \nLine 8 error - One mark for correct identification of error and one mark for each correction of error \nError 2 line number: Line 8 \nCorrection:       UNTIL Number >= 0 AND Number <= 499 ","key":9.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":2,"Question":"\n3 \nDescribe what is meant by the terms variable and constant and give an example of each in your \nanswer.  \nVariable  \nConstant  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"4(a) \nOne mark for each correct check (max two) \n\u2022 \nLength (check) \n\u2022 \nType Check  \n\u2022 \nFormat Check ","key":10.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":3,"Question":"(a) \n4 \nThe pseudocode represents an algorithm.\nThe pre-defined function DIV gives the value of the result of integer division. \nFor example, Y = 11 DIV 4 gives the value Y = 2 \nCount \u2190 0\nINPUT Limit\nFOR In \u2190 1 TO Limit\n  Logic \u2190 TRUE\n  Test \u2190 2\n  INPUT Number\n  REPEAT\n    IF Number \/ Test = Number DIV Test \n      THEN\n        Logic \u2190 FALSE\n      ELSE\n        Test \u2190 Test + 1\n    ENDIF\n  UNTIL NOT Logic OR Test >= Number DIV 2\n  IF Logic\n    THEN\n      Store[Count] \u2190 Number\n      Count \u2190 Count + 1\n  ENDIF\nNEXT In\nFOR Out \u2190 0 TO Count - 1\n  OUTPUT Store[Out]\nNEXT Out\n Complete the trace table for the algorithm using this input data:\n5, 9, 5, 8, 10, 7\nIn\nLogic\nTest\nNumber\nStore\n[Count]\nCount\nLimit\nOut\nOUTPUT\n","Marks":"[7]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"4(b) \nOne mark for each suitable piece of test data and one mark for each relevant reason (max four) \n\u2022 \nLL9999LL999 \n\u2022 \nToo long \n\u2022 \n5678987 \n\u2022 \nAll numeric \n\u2022 \nCB12EU \n\u2022 \nNo space is present ","key":11.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":3,"Question":"(b) \n State the purpose of this algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"5 \nFlag \nNumber \nDivisor \nValue \nOUTPUT \nFalse ","key":12.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":3,"Question":"(c) \n This algorithm only works for numbers that are 3 or greater.\nDescribe how you could change this algorithm to make sure that only numbers that are \n3 or greater are entered. Any pseudocode statements used in your answer must be fully \ndescribed.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"2 ","key":13.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":4,"Question":"\n5 \nThe flowchart shows an algorithm that should:\n\u2022 \nallow 100 numbers to be entered into the variable Number\n\u2022 \ntotal the numbers as they are entered\n\u2022 \noutput the total and average of the numbers after they have all been entered.\nComplete this flowchart:\nSTART\nTotal\n0\nEND\nCounter\n0\nYes\nNo\n","Marks":"[6]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"3 \n5 is prime \nFalse ","key":14.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":5,"Question":"(a) \n6 \nData about planets in the solar system is stored in a database table called PLANETS. The fields \nused in the table are shown.\nName of field\nContents of field\nPlanetName\nthe name of the planet\nPlanetMass\nthe planet\u2019s mass in kilograms\nLarger\nwhether or not the planet has a greater mass than Earth\nMaxDistance\nthe maximum distance the planet is from Earth in kilometres\nMinDistance\nthe minimum distance the planet is from Earth in kilometres\nYearLength\nthe length of time it takes for the planet to orbit the Sun in Earth days\n State the name of the field that could contain Boolean data.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"2 ","key":15.0},{"Paper_No":"0478_s22_qp_23.pdf","Question_No":5,"Question":"(b) \n Complete the query-by-example grid to output the planets with a longer year length and \ngreater mass than Earth. Assume Earth\u2019s year length is 365 days. \nDisplay only the name of the planets sorted in alphabetical order.\nField:\nTable:\nSort:\nShow:\no\no\no\no\no\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"True ","key":16.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":1,"Question":"(a) 1 \n Four descriptions of stages in the program development life cycle are shown.\nDraw one line to link each description to its most appropriate program development life cycle \nstage.\nNot all program development life cycle stages will be used.\nProgram development life cycle description \nProgram development life cycle stage\ndevelop an algorithm to solve the problem \nby using structure diagrams, flowcharts or \npseudocode\nanalysis\ncoding\ndesign\nevaluation\ntesting\ndetect and fix the errors in the program\nidentify the problem and its requirements\nwrite and implement the instructions to  \nsolve the problem\n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"2 \nTrue ","key":17.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":1,"Question":"(b) \n Identify three of the component parts after a problem has been decomposed.\n1  \n2  \n3  \n","Marks":"[3]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"False ","key":18.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":2,"Question":"\n2 \nTick (\u00fc) one box to show the name of the data structure used to store a collection of data of the \nsame data type.\nA \nArray \nB \nConstant \nC \nFunction \nD \nVariable \n","Marks":"[1]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"2 ","key":19.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":3,"Question":"(a) \n3 \n Describe what is meant by data validation.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"True ","key":20.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":3,"Question":"(b) \n A validation check is used to make sure that any value that is input is an integer between 30 \nand 200 inclusive.\nGive one example of each type of test data to check that the validation check is working as \nintended. Each example of test data must be different.\nGive a reason for each of your choices of test data.\nNormal test data  \nReason  \nAbnormal test data  \nReason  \nExtreme test data  \nReason  \n","Marks":"[6]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"2 \nTrue ","key":21.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":4,"Question":"\n4 \nExplain the purpose of the library routines DIV and ROUND\nDIV  \nROUND  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"2 ","key":22.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nAn algorithm has been written in pseudocode to allow some numbers to be input. All the positive \nnumbers that are input are totalled and this total is output at the end.\nAn input of 0 stops the algorithm.\n01 Exit \u2190 1\n02 WHILE Exit <> 0 DO\n03     INPUT Number\n04     IF Number < 0\n05       THEN\n06         Total \u2190 Total + Number\n07       ELSE\n08         IF Number = 0\n09           THEN\n10             Exit \u2190 1\n11         ENDIF\n12     ENDIF\n13 ENDIF\n14 OUTPUT \"The total value of your numbers is \", Number\n Identify the four errors in the pseudocode and suggest a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"False \n0 \nOne mark for each correct column ","key":23.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":5,"Question":"(b) \n Describe how you could change the corrected algorithm to record and output how many \npositive numbers have been included in the final total.\nYou do not need to rewrite the algorithm.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"6 \nDecision \nProcess \nOne mark for each correct symbol  ","key":24.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":6,"Question":"\n6 \nState two features that should be included to create a maintainable program. \nGive a reason why each feature should be used. \n1  \n2  \n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"7(a) \nFieldname \nPurpose of field contents \nCodeNo \nPrimary key to identify products \nProduct \nTo describe the product \nPrice \nThe price of individual item \nNumInStock \nHow many are in stock \nOne mark for each correct fieldname and description pair ","key":25.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":7,"Question":"(a) \n7 \nThe flowchart represents an algorithm.\nSTART\nINPUT\nLetter\nINPUT Choice\nOUTPUT \"Another Letter?\n(Y or N)\"\nOUTPUT \"Letter \", Letter,\n\" is represented by \",\nWord[Pointer, 2]\nIS\nChoice =\n'Y' ?\nIS\nWord[Pointer, 1]\n= Letter ?\nSTOP\nPointer    1\nPointer    Pointer  + 1\nYes\nYes\nNo\nNo\nThe table represents the two-dimensional (2D) array Word[] which stores the first half of the \nphonetic alphabet used for radio transmission. For example, Word[10,1] is \u2018J\u2019.\nIndex\n1\n2\n1\nA\nAlpha\n2\nB\nBravo\n3\nC\nCharlie\n4\nD\nDelta\n5\nE\nEcho\n6\nF\nFoxtrot\n7\nG\nGolf\n8\nH\nHotel\n9\nI\nIndia\n10\nJ\nJuliet\n11\nK\nKilo\n12\nL\nLima\n13\nM\nMike\n Complete the trace table for the algorithm by using the input data:  F, Y, D, N\nPointer\nLetter\nChoice\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_s20_ms_23.pdf","Answer":"7(b) \nField: CodeNo \nProduct \nNumInStock \nTable: STOCK \nSTOCK \nSTOCK \nSort:  \nShow: \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria:  \n<20 \nor:  \nOne mark for each completely correct column (max three) \n3 ","key":26.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":7,"Question":"(b) \n Identify the type of algorithm used. \n  ","Marks":"[1]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to be \nthe exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a MP has ellipsis at the beginning, but there is no ellipsis on the MP before it, then this is just a follow-on sentence and can \nbe awarded without the previous mark point. \nSection A \n1(a) \nArray \nTrainUpPassengers  \/\/  TrainUpPassengers[] \nData type  \nInteger\/int \nUse  \nstoring the number of passengers on the train journeys up \nMany correct answers, this is an example.  ","key":0.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":7,"Question":"(c) \n Describe one problem that could occur with this algorithm if an invalid character was input. \n  ","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"1(b) \nOne mark for description, one mark for normal data and one mark for erroneous data for two checks \nValidation check  (type check) to check that the number entered is a whole number \/ integer \nNormal data  \n34 \nErroneous data \ntwo \/\/ 1.5 \nValidation check  (range check) to check that the value of the number entered is between 1 and 80 \/ 480 inclusive  \nNormal data  \n34  \nErroneous data \n99 \/\/ 500  \nValidation check  (presence check) to check that a value has been entered \nNormal data  \n34 \/\/ any data entered \nErroneous data \n\u201c\u201d \/\/ blank \/\/ no data entered \nValidation check  (length check) to check that a value has 3 digits or fewer \/\/ between 1 and 3 digits \nNormal data  \n345  \nErroneous data \n3456 \nMany correct answers, the data are examples only. ","key":1.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":8,"Question":"(a) \n8 \nThe function LENGTH(Phrase) calculates the length of a string Phrase\n Write the pseudocode statements to:\n\u2022 \nstore the string \"The beginning is the most important part\" in Phrase\n\u2022 \ncalculate and output the length of the string\n\u2022 \noutput the string in upper case.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"1(c) \nAny six from: \nMP1 \nInput number of tickets  \nMP2 \nInput train up mountain and train down mountain \nMP3 \nSuitable prompts seen for inputs that are included  \nMP4 \nCheck that tickets are available on selected train(s)  \nMP5 \nIf available calculate price of tickets \u2026  \nMP6 \n\u2026 calculation includes discount if required  \nMP7 \nUpdate total passengers \/ seats available for a train  \nMP8 \nUpdate total passengers \/ seats available for up train and down train  \nMP9 \nUpdate total cost for a train  \nMP10 Update total cost for up train and down train  \nExample answers  \nOUTPUT \"How many tickets\" \nINPUT NoTickets \nOUTPUT \"Which Train up the mountain? 1, 2, 3 or 4\" \nINPUT UpNumber \nOUTPUT \"Which Train down the mountain? 1, 2, 3 or 4\" \nINPUT DownNumber \nIF (DownNumber = 4 AND TrainUp[UpNumber] + NoTickets <= 480 AND TrainDown[DownNumber] + \nNoTickets <= 640) OR (TrainUp[UpNumber] + NoTickets <= 480 AND TrainDown[DownNumber] + \nNoTickets <= 480) \n  THEN \n    Cost \u2190 (NoTickets \u2013 NoTickets DIV 10) * 50 \n    TrainUp[UpNumber] \u2190 TrainUp[UpNumber] + NoTickets \n    TrainDown[DownNumber] \u2190 TrainUp[DownNumber] + NoTickets \n    TrainUpTotal[UpNumber]  \u2190 TrainUpTotal[UpNumber]  + Cost \/ 2 \n    TrainDownTotal[DownNumber]  \u2190 TrainDownTotal[DownNumber]  + Cost \/ 2 \nENDIF ","key":2.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":8,"Question":"(b) \n Write the output your pseudocode should produce.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"1(c) \nYes \nYes \nSTART \nOUTPUT \"Tickets\" \nINPUT Tickets \nCost \u2190 (NoTickets \u2013 NoTickets DIV 10) * 50 \nTrainUp[UpNo] \u2190 TrainUp[UpNo] + NoTickets \nTrainDown[DownNo] \u2190 TrainUp[DownNo] + NoTickets \nTrainUpTotal[UpNo]  \u2190 TrainUpTotal[UpNo]  + Cost \/ 2 \nTrainDownTotal[DownNo]  \u2190 TrainDownTotal[DownNo]  + Cost \/ 2 \nEND \nIs Tickets <=  \nUpTickets[UpNo] AND \nTickets <=  \nDownTickets[DownNo]? \nNo \nOUTPUT \"Up Train\" \nINPUT UpNo \nOUTPUT \"Down Train\" \nINPUT DownNo \n1(d) \nExplanation \nAny five from: \nMP1 \nHow the program displayed the number of passengers for a journey ... \nMP2 \n\u2026 how completed for all trains \nMP3 \nHow the program displayed the amount of money taken for a journey \u2026 \nMP4 \n\u2026 how completed for all trains \nMP5 \nHow the program calculated the total number of passengers  \nMP6 \nHow the program calculated the total money taken  \nMP7 \nHow the program attempted to select the train journey with the most passengers  \nMP8 \nHow the program attempted to dealt with more than one train being the most popular \nMP9 \nHow the program displayed the results with suitable messages \nProgramming statements must be given with each explanation. ","key":3.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":9,"Question":"(a) \n9 \nConsider this logic expression.\nZ = (NOT A OR B) AND (B XOR C)\n Draw a logic circuit for this logic expression.\nEach logic gate must have a maximum of two inputs.\nDo not simplify this logic expression.\nA\nB\nC\nZ\n","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"Section B \n2(a) \nAny six from: \nMP1 \nInitialisation of large and small variables e.g. Large \u2190 0 Small \u2190 1000 \nMP2 \nUse of a loop for 500 entries \/\/ or 499 if initialisation done on first correct entry \nMP3 \nInput with prompt \nMP4 \nAttempt at checking the range of 1 to 999 for input  \nMP5 \n\u2026 working range check \nMP6 \nChecking for a whole number  \nMP7 \nSelecting largest number \nMP8 \nSelecting smallest number \nMP9 \nCalculating the range \nMP10 Outputting the largest, smallest and range with message \nLarge \u2190 0 \nSmall \u2190 1000 \nFOR Count \u2190 1 TO 500 \n  REPEAT \n    OUTPUT \"Enter a whole number between 1 and 999\" \n    INPUT Number \n  UNTIL Number >= 1 AND Number < 1000 AND Number = Number DIV 1 \n  IF Number < Small \n    THEN \n      Small \u2190 Number \n  ENDIF \n  IF Number > Large \n    THEN \n      Large \u2190 Number \n  ENDIF \nNEXT \nRange \u2190 Large \u2013 Small \nOUTPUT \"Largest number is \", Large, \" Smallest number is \", Small, \" Range of numbers is \n\", Range ","key":4.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":9,"Question":"(b) \n Complete the truth table from the given logic expression.\nA\nB\nC\nWorking space \nZ\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"2(b) \nOne mark for action required and one mark for method used \nReduce the amount of numbers entered \nBy decreasing the final value of the loop \nor \nRemove the need to input values \nBy using random numbers \/ a previously populated array ","key":5.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":10,"Question":"(a) \n10 A database table called TVRange shows the main features and prices of a range of televisions. \nTVCode\nScreenSize\nSatellite\nSmartTV\nSoundBar\nPrice$\nTV90SaSmSd\n90\nYES\nYES\nYES\n9750.00\nTV75SaSmSd\n75\nYES\nYES\nYES\n8500.00\nTV75SaSd\n75\nYES\nNO\nYES\n8000.00\nTV65SaSmSd\n65\nYES\nYES\nYES\n6000.00\nTV65SmSd\n65\nNO\nYES\nYES\n5000.00\nTV65SaSd\n65\nYES\nNO\nYES\n5000.00\nTV55SaSmSd\n55\nYES\nYES\nYES\n4000.00\nTV55SaSd\n55\nYES\nNO\nYES\n3500.00\nTV55SmSd\n55\nNO\nYES\nYES\n3500.00\nTV50SaSmSd\n50\nYES\nYES\nYES\n2500.00\nTV50Sa\n50\nYES\nNO\nNO\n1750.00\nTV50Sm\n50\nNO\nYES\nNO\n1750.00\nTV40Sa\n40\nYES\nNO\nNO\n1200.00\nTV40\n40\nNO\nNO\nNO\n950.00\nTV32\n32\nNO\nNO\nNO\n650.00\n Give the name of the field that is most suitable to be the primary key.\nState the reason for this choice.\nField  \nReason  \n","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"3(a) \nPseudocode statement \nFlowchart symbol \nIF Number = 20 \nPRINT Number \nNumber \u2190 Number + 1 ","key":6.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":10,"Question":"(b) \n The database uses the data types:\n\u2022 \ntext\n\u2022 \ncharacter\n\u2022 \nBoolean\n\u2022 \ninteger\n\u2022 \nreal\n\u2022 \ndate\/time.\nComplete the table to show the most appropriate data type for each field. \nEach data type must be different.\nField\nData type\nTVCode\nScreenSize\nSmartTV\nPrice$\n","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"3(b) \nIF Number = 20   \nselection  \nPRINT Number \noutput   \nNumber \u2190 Number + 1  counting  ","key":7.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":10,"Question":"(c) \n Complete the structured query language (SQL) query to return the television (TV) code, \nscreen size and price of all Smart TVs in the database table.\nSELECT TVCode, , \n TVRange\nWHERE SmartTV = ;\n","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"4(a) \nOne mark for each correct column \nPassword \nPasswordRepeat \nOUTPUT \n(Please enter password) \nSecret \nReject \n(Please enter password) \nSecret \nReject \n(Please enter password) \nVerySecret \nVerySecret \nAccept \n(Please enter password) \nPa55word \nPa55word \nAccept \n(Please enter password) \n999 \nReject ","key":8.0},{"Paper_No":"0478_s23_qp_21.pdf","Question_No":11,"Question":"\n11 A one-dimensional (1D) array Days[] contains the names of the days of the week. A \ntwo-dimensional (2D) array Readings[] is used to store 24 temperature readings, taken once \nan hour, for each of the seven days of the week. A 1D array AverageTemp[] is used to store the \naverage temperature for each day of the week.\nThe position of any day\u2019s data is the same in all three arrays. For example, if Wednesday is \nin index 4 of Days[], Wednesday\u2019s temperature readings are in index 4 of Readings[] and \nWednesday\u2019s average temperature is in index 4 of AverageTemp[] \nThe temperature readings are in Celsius to one decimal place. Temperatures can only be from \n\u201320.0 \u00b0C to +50.0 \u00b0C inclusive.\nWrite a program that meets the following requirements:\n\u2022 \ninput and validate the hourly temperatures for one week \n\u2022 \ncalculate and store the average temperature for each day of the week\n\u2022 \ncalculate the average temperature for the whole week\n\u2022 \nconvert all the average temperatures from Celsius to Fahrenheit by using the formula \nFahrenheit = Celsius * 9 \/ 5 + 32\n\u2022 \noutput the average temperature in Celsius and in Fahrenheit for each day \n\u2022 \noutput the overall average temperature in Celsius and in Fahrenheit for the whole week.\nYou must use pseudocode or program code and add comments to explain how your code works.\nYou do not need to declare any arrays, variables or constants; you may assume that this has \nalready been done.\nAll inputs and outputs must contain suitable messages.\nAll data output must be rounded to one decimal place.\nYou will need to initialise and populate the array Days[] at the start of the program.\nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of Cambridge Assessment. Cambridge Assessment is the brand name of the University of Cambridge \nLocal Examinations Syndicate (UCLES), which is a department of the University of Cambridge.\n  ","Marks":"[15]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"4(b) \nAny four from: \n\u2022 \nPosition: before INPUT PasswordRepeat \/\/ at start \n\u2022 \n\u2026use a (variable) counter (for number of tries) or flag \n\u2022 \n\u2026 initialise variable counter or flag \n\u2022 \nPosition after IF Length(Password) >= 8 THEN or after INPUT PasswordRepeat \n\u2022 \n\u2026 insert REPEAT\/WHILE\/(conditional) loop  \n\u2022 \nPosition after OUTPUT \"Reject\" \n\u2022 \n\u2026 add one to counter (for number of tries) \n\u2022 \n\u2026 output a message \"Try again\" \n\u2022 \n\u2026 add INPUT PasswordRepeat  \n\u2022 \nPosition after OUTPUT \"Accept\" \n\u2022 \n\u2026 reset flag to show password matched \n\u2022 \nPosition after ENDIF \n\u2022 \n\u2026 (insert UNTIL\/ENDWHILE)to exit the loop after three tries or if the repeated password matches the original ","key":9.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":1,"Question":"1 \nTick (\u2713) one box to identify the first stage of the program development life cycle.\nA \nAnalysis \nB \nCoding \nC \nDesign \nD \nTesting \n","Marks":"[1]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"5(a) \nOne mark for: \n\u2022 \nUse of FOR loop \n\u2022 \nWorking loop with correct number of Iterations \n\u2022 \nCorrect assignment \nFOR Count \u2190 1 TO 20 \n  dataArray[Count] \u2190 0 \nNEXT (Count) ","key":10.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":2,"Question":"\n2 \nFour logic gates and five standard symbols for logic gates are shown.\nDraw one line to link each logic gate to its standard symbol. Not all standard symbols will be used.\nAND\nOR\nNAND\nNOT\nLogic gate\nStandard symbol\n","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"5(b) \n(A FOR loop has) a fixed number of repetitions \/\/  \nNo need to manage the loop counter \/\/  \nno need to use another variable for the array index ","key":11.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":3,"Question":"\n3 \nIdentify three different ways that the design of a solution to a problem can be presented.\n1  \n2  \n3  \n","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_22.pdf","Answer":"6 \nAny three from: \n\u2022 \nTABLE row not completed \n\u2022 \nPOSITION column not required \/\/ POSITION criteria not required \n\u2022 \nNo criteria set in the size column \n\u2022 \nNo criteria set in the flower column \nField: \nSIZE \nPRICE \nFLOWER \nNUMBERSOLD \nNAME \nTable: \nPLANT \nPLANT \nPLANT \nPLANT \nPLANT \nSort: \nShow: \n\uf06f \n\uf0fe \n\uf06f \n\uf0fe \n\uf0fe \nCriteria: \n=\"small\" \nFalse \nor: \nOR \nField: \nSIZE \nPRICE \nFLOWER \nNUMBERSOLD \nNAME \nPOSITION \nTable: \nPLANT \nPLANT \nPLANT \nPLANT \nPLANT \nPLANT \nSort: \nShow: \n\uf06f \n\uf0fe \n\uf06f \n\uf0fe \n\uf0fe \n\uf06f \nCriteria: \n=\"small\" \n= False \nor: \nOne mark for correct rows Field, Table and Show \nOne mark for correct Criteria row \n5 ","key":12.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nA program needs to make sure the value input for a measurement meets the following rules:\n\u2022 \nthe value is a positive number\n\u2022 \na value is always input\n\u2022 \nthe value is less than 1000.\n Describe the validation checks that the programmer would need to use.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a MP has ellipsis at the beginning, but there is no ellipsis on the MP before it, then this is just a follow-on sentence and \ncan be awarded without the previous mark point. \nSection A \n1(a)(i) \nOne mark per bullet point \n\u2022 \nConstant \nNumberofOptions \n\u2022 \nValue  ","key":0.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":4,"Question":"(b) \n The program needs editing to include a double entry check for the value input.\n(i) State why this check needs to be included.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"\u2022 \nUse  \nStoring the maximum number of options (for the referendum) ","key":1.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":4,"Question":"(ii) \n The input value needs to be stored in the variable Measurement\n Write pseudocode to perform the double entry check until a successful input is made.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"1(a)(ii) \nOne mark per bullet point \n\u2022 \nVariable \nUniqueNumber \n\u2022 \nUse  \nStoring\/inputting the voter\u2019s unique identification number ","key":2.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":5,"Question":"\n5 \nCircle five file-handling operations.\ncalculate    close    count    create    input    open\noutput    print    read    sort    search\ntest    total    write\n","Marks":"[5]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"1(a)(iii) \nOne mark for each valid mark point (Max 4) \n\u2022 \nSuitable name e.g. IdNumber \n\u2022 \nSuitable data type e.g. Integer \n\u2022 \nSuitable array length e.g. 170 (elements) \n\u2022 \nSuitable sample data e.g. 100 \n\u2022 \nSuitable use e.g. to store the unique numbers ","key":3.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":6,"Question":"\n6 \nState three different features of a high-level programming language that a programmer could use \nto make sure that their program will be easier to understand by another programmer.\nGive an example for each feature.\nFeature 1  \nExample  \nFeature 2  \nExample  \nFeature 3  \nExample  \n","Marks":"[6]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"1(b) \nAny six from: \nMP1 \nInitialisation of totalling variables \nMP2 \nLoop to cycle through all the data  \nMP3 \nTotalling the votes for at least one of the options \nMP4 \nTotalling the votes for all five options \nMP5 \nSeparate totals for students and staff \nMP6 \nOutput to show one set of results \nMP7 \nOutput to show more than one set of results with messages \nMP8 \nComprehensive output to show student, staff and combined results, with messages  \nExample answers  \nVersion 1 \nTotalAS \u2190 0; TotalBS \u2190 0; TotalCS \u2190 0; TotalDS \u2190 0; TotalsES \u2190 0; TotalAF \u2190 0;  \nTotalBF \u2190 0; TotalCF \u2190 0; TotalDF \u2190 0; TotalEF \u2190 0 \nFOR Count \u2190 0 TO 150 \n  TotalAS \u2190 TotalAS + StudentA[Count] \n  TotalBS \u2190 TotalBS + StudentB[Count] \n  TotalCS \u2190 TotalCS + StudentC[Count] \n  TotalDS \u2190 TotalDS + StudentD[Count] \n  TotalES \u2190 TotalES + StudentE[Count] \nNEXT Count \nFOR Count = 0 TO 20 \n  TotalAF \u2190 TotalAF + StaffA [Count] \n  TotalBF \u2190 TotalBF + StaffA [Count] \n  TotalCF \u2190 TotalCF + StaffA [Count] \n  TotalDF \u2190 TotalDF + StaffA [Count] \n  TotalEF \u2190 TotalEF + StaffA [Count] \nNEXT Count \nOUTPUT \"Option    Students    Staff    Total\" \nOUTPUT \"A \", TotalAS, TotalAF, (TotalAS + TotalAF) \nOUTPUT \"B \", TotalBS, TotalBF, (TotalBS + TotalBF) \nOUTPUT \"C \", TotalCS, TotalCF, (TotalCS + TotalCF) \nOUTPUT \"D \", TotalDS, TotalDF, (TotalDS + TotalDF) \nOUTPUT \"E \", TotalES, TotalEF, (TotalES + TotalEF) ","key":4.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":7,"Question":"\n7 \nAn algorithm has been written in pseudocode to calculate a check digit for a four-digit number. \nThe algorithm then outputs the five-digit number including the check digit.\nThe algorithm stops when \u20131 is input as the fourth digit.\n01 Flag \n FALSE\n02 REPEAT\n03     Total \n 0\n04     FOR Counter \n 1 TO 4\n05       OUTPUT \"Enter a digit \", Counter\n06       INPUT Number[Counter]\n07       Total \n Total + Number * Counter\n08       IF Number[Counter] = 0\n09         THEN\n10           Flag \n TRUE\n11       ENDIF\n12     NEXT Counter\n13     IF NOT Flag\n14       THEN\n15         Number","Marks":"[5]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"1(b) \nVersion 2 \nTotalAS \u2190 0; TotalBS \u2190 0; TotalCS \u2190 0; TotalDS \u2190 0; TotalsES \u2190 0; TotalAF \u2190 0;  \nTotalBF \u2190 0; TotalCF \u2190 0; TotalDF \u2190 0; TotalEF \u2190 0 \nOUTPUT \"Are you a student? (Y or N)\" \nINPUT Student \nIF Student = \"Y\" THEN \n  OUTPUT \"Enter your number\" \n  INPUT Number \n  IF Students[Number] = 0 THEN \n    REPEAT \n      OUTPUT \"Enter preference for A\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalAS \u2190 TotalAS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for B\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalBS \u2190 TotalBS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for C\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalCS \u2190 TotalCS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for D\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalDS \u2190 TotalDS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for E\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalES \u2190 TotalES + Vote \n1(b) \n    Student[Number] \u2190 1 \nELSE \n  OUTPUT \"Enter your number\" \n  INPUT Number \n  IF staff[number] = 0 THEN \n    REPEAT \n      OUTPUT \"Enter preference for A\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalAS \u2190 TotalAS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for B\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalBS \u2190 TotalBS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for C\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalCS \u2190 TotalCS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for D\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalDS \u2190 TotalDS + Vote \n    REPEAT \n      OUTPUT \"Enter preference for E\" \n      INPUT Vote \n    UNTIL Vote >= 1 and Vote <= 5 \n    TotalES \u2190 TotalES + Vote \n  Staff[Number] \u2190 1 \nENDIF \n1(b) \nOUTPUT \"Option    Students    Staff    Total\" \nOUTPUT \"A \", TotalAS, TotalAF, (TotalAS + TotalAF) \nOUTPUT \"B \", TotalBS, TotalBF, (TotalBS + TotalBF) \nOUTPUT \"C \", TotalCS, TotalCF, (TotalCS + TotalCF) \nOUTPUT \"D \", TotalDS, TotalDF, (TotalDS + TotalDF) \nOUTPUT \"E \", TotalES, TotalEF, (TotalES + TotalEF) \n1(c) \nAny two from: \nMP1 \nChange the maximum preferences constant to 6 \nMP2 \nChange the input prompt to show six options \nMP3 \nChange the loop counter \nMP4 \nChange the number of inputs for each person to six \nMP5 \nAdd another array\/variable to store\/total the new option votes ","key":5.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":8,"Question":"(a)  \n MOD(Total, 10)\n16         FOR Counter \n 0 TO 5\n17             OUTPUT Number[Counter]\n18         NEXT\n19     ENDIF\n20 UNTIL Flag\n Give the line number(s) for the statements showing:\nTotalling  \nCount-controlled loop  \nPost-condition loop  \n","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"1(d) \nExplanation \nAny three from: \nMP1 \nInitialise count variables\/array for each option \nMP2 \nUsing a conditional statement to identify preference 1 in at least one option (in the input\/stored data) \nMP3 \n\u2026 identify preference 1 in all options \nMP4 \n... and adding 1 to the appropriate option count in at least one option \nMP5 \n\u2026 for students only \nMP6 \n\u2026 using a loop to cycle through the whole array\/set of inputs for each option ","key":6.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":8,"Question":"(b) \n Identify the three errors in the pseudocode and suggest a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \n","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"Section B ","key":7.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":8,"Question":"(c) \n The algorithm does not check that each input is a single digit.\nIdentify the place in the algorithm where this check should occur.\nWrite pseudocode for this check.\nYour pseudocode must make sure that the input is a single digit and checks for \u20131\nPlace in algorithm  \nPseudocode  \n","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"Three marks for three or four correct \nTwo marks for two correct  \nOne mark for one correct \nData Type  \nDescription ","key":8.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":9,"Question":"\n8 \nConsider this logic expression.\nX = (A OR B) AND (NOT B AND C)\nComplete the truth table for this logic expression.\nA\nB\nC\nWorking space\nX\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"Real \nString \nMust be a whole number \nMust be one of two values \nMay be any number \nInteger \nMay contain any combination of \ncharacters \nBoolean ","key":9.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":10,"Question":"(a) \n9 \nThis flowchart represents an algorithm.\nNo\nNo\nNo\nYes\nYes\nYes\nIS X[C] <\nX[C + 1]?\nF   0\nC   1\nT   X[C]\nX[C]   X[C + 1]\nX[C + 1]   T\nF   1\nC   C + 1\nSTART\nSTOP\nIS C = 5?\nIS F = 0?\n The array X[1:5] used in the flowchart contains this data:\nX","Marks":"[1]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"One mark per mark point for each piece of test data (3 \u00d7 two marks) \n\u2022 \nCorrect validation check name \n\u2022 \nCorrect use identified \nExample answers \nId27@cambridgeuniversity.com \n\u2022 \nValidation check name  \nLength (check)  \n\u2022 \nUse  \nCounts the number of characters in the data to make sure it isn\u2019t too long (max length 320 \ncharacters). \n2021 \n\u2022 \nValidation check name  \nRange (check)  \n\u2022 \nUse  \nChecks that the number entered fits within given parameters \nEricson-Bower \n\u2022 \nValidation check name  \nType (check)  \n\u2022 \nUse  \nChecks the type of data entered (in this case) to make sure no numbers are present ","key":10.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":11,"Question":"\nX","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"4(a) \nOne mark for error identified and suggested correction \nLine 3 \u2013 should be FullScore \u2190 0 \nLine 7 \u2013 should be FullScore \u2190 FullScore + Score \nLine 8 \u2013 should be NEXT Allow ENDFOR \/\/ alternatively Line 5 could be REPEAT with StoreLoop \u2190 0 just above \nit and StoreLoop \u2190 StoreLoop + 1 between lines 7 and 8. \nLine 11 \u2013 should be INPUT Another \nCorrect Algorithm 1 \n1 Count \u2190 0 \n2 REPEAT  \n3   FullScore \u2190 0 \n4   INPUT Number \n5   FOR StoreLoop \u2190 1 TO Number \n6     INPUT Score  \n7     FullScore \u2190 FullScore + Score \n8   NEXT \n9   OUTPUT \"The full score is \", FullScore \n10   OUTPUT \"Another set of scores (Y or N)?\" \n11   INPUT Another \n12   IF Another = \"N\" \n13     THEN \n14       Count \u2190 1 \n15   ENDIF \n16 UNTIL Count = 1 ","key":11.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":12,"Question":"\nX","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"4(a) \nCorrect Algorithm 2 \n1 Count \u2190 0 \n2 REPEAT  \n3   FullScore \u2190 0 \n4   INPUT Number \n        StoreLoop \u2190 0 \n5   REPEAT \n6     INPUT Score  \n7     FullScore \u2190 FullScore + Score \n          StoreLoop \u2190 StoreLoop + 1 \n8   UNTIL StoreLoop = Number \n9   OUTPUT \"The full score is \", FullScore \n10   OUTPUT \"Another set of scores (Y or N)?\" \n11   INPUT Another \n12   IF Another = \"N\" \n13     THEN \n14       Count \u2190 1 \n15   ENDIF \n16 UNTIL Count = 1 \n4(b) \nOne mark per mark point (Max 4) \nMP1 \nAfter line 6 \/\/ replace line 6 \nMP2 \nScoreArray[StoreLoop] \u2190 Score \/\/  \nINPUT ScoreArray[StoreLoop] \nMP3 \nbetween lines 8 and 10 \nMP4 \nAverageScore \u2190 FullScore\/Number \nMP5 \nOUTPUT \"The average score is \", AverageScore \nExample correct algorithm for reference from part 4(a) \n1 Count \u2190 0 \n2 REPEAT  \n3   FullScore \u2190 0 \n4   INPUT Number \n5   FOR StoreLoop \u2190 1 TO Number \n6     INPUT Score  \n7     FullScore \u2190 FullScore + Score \n8   NEXT \n9   OUTPUT \"The full score is \", FullScore \n10   OUTPUT \"Another set of scores (Y or N)?\" \n11   INPUT Another \n12   IF Another = \"N\" \n13     THEN \n14       Count \u2190 1 \n15   ENDIF \n16 UNTIL Count = 1 ","key":12.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":13,"Question":"\nX","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"5(a) \nOne mark for each correct column \nOp \nValue1 Value2 \nAns \nOUTPUT ","key":13.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":14,"Question":"\nX","Marks":"[5]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"87 ","key":14.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":15,"Question":"\n10\n1\n5\n7\n11\nComplete the trace table by using the data given in the array.\nF\nC\nX","Marks":"[1]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"101 ","key":15.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":16,"Question":"\nX","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"2 \n30 \n60 ","key":16.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":17,"Question":"\nX","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"10 ","key":17.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":18,"Question":"\nX","Marks":"[4]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"Input Error ","key":18.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":19,"Question":"\nX","Marks":"[5]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"10 ","key":19.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":20,"Question":"\nT\n10\n1\n5\n7\n11\n","Marks":"[5]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"5 \n0 ","key":20.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":20,"Question":"(b) \n Describe what the algorithm represented by the flowchart is doing.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"5(b) \nTo work as a calculator \/\/ to add, subtract, multiply or divide a pair of numbers ","key":21.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":20,"Question":"(s) \n10 A music streaming service has a new database table named Songs to store details of songs \navailable for streaming. The table contains the fields:\n\u2022 \nSongNumber \u2013 the catalogue number, for example AG123\n\u2022 \nTitle \u2013 the title of the song\n\u2022 \nAuthor \u2013 the name of the song writer\n\u2022 \nSinger \u2013 the name of the singer\n\u2022 \nGenre \u2013 the type of music, for example rock\n\u2022 \nMinutes \u2013 the length of the song in minutes, for example 3.75\n\u2022 \nRecorded \u2013 the date the song was recorded.\n(a) Identify the field that will be the most appropriate primary key for this table.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"5(c) \nTo output\/store the result\/the value of Ans \/\/ Adding prompts for data entry. ","key":22.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":20,"Question":"(b) \n Complete the table to identify the most appropriate data type for the fields in Songs\nField\nData type\nSongNumber\nTitle\nRecorded\nMinutes\n","Marks":"[2]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"6(a) \nTwo marks for six correct field names \nOne mark for at least three correct field names \nField name \nLicenceNo \nMileage \nTyreFLft \nTyreFRgt \nTyreRLft \nTyreRRgt ","key":23.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":20,"Question":"(c) \n Explain the purpose of the structured query language (SQL) statements.\nSUM (Minutes) FROM Songs WHERE Genre = \"rock\";\nCOUNT (Title) FROM Songs WHERE Genre = \"rock\";\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s21_ms_23.pdf","Answer":"6(b) \nOne mark for correct fieldnames \nOne mark for correct table names and show fields \nOne mark for correct sort  \nOne mark for correct search criteria in all columns \nField: LicenceNo \nMileage \nTyreFLft \nTyreFRgt \nTyreRLft \nTyreRRgt \nTable: TREAD \nTREAD \nTREAD \nTREAD \nTREAD \nTREAD \nSort: Ascending \nShow: \n\uf0fe \n\uf0fe \n\uf0fe \n\uf0fe \n\uf0fe \n\uf0fe \nCriteria:  \n<2 \n<2 \n<2 \n<2 \nor:  \n4 ","key":24.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":21,"Question":"(a) \n11 The variables P and Q are used to store data in a program. P stores a string. Q stores a character.\n Write pseudocode statements to declare the variables P and Q, store \"The world\" in P and \nstore 'W' in Q\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. \nSection A \n1(a) \nOne mark per mark point, max five \nData Structure(s), max two  \nMP1 \narrays  \nMP2 \nvariable(s) \/ constant(s)  \nFurther description, max three \nMP3 \nname(s) one or more \nMP4 \nsample data for appropriate arrays or variables \nMP5 \nuse(s) one or more  \nAdditional data structure description using the same data structure type, max one \nMP6 \ntwo or more full descriptions of the data structure including name, sample data and use \nFor example: \nAn array (1) named FirstName (1) to store the first names of the members (1) such as James (1).  A variable (1) could also \nbe used to enter whether or not they wish to volunteer. (5 marks) \nA variable (1) named FirstName (1) to input the first names of the members (1) such as James (1).  A variable could also be \nused to enter whether or not they wish to volunteer, with sample data of \u2018yes\u2019 (1). (5 marks) \nTask 1 \u2013 becoming a member of Friends of Seaview Pier \nSet up a system to enable people to become members of Friends of Seaview Pier and for each new member enter: \n\uf0b7 \ntheir first name and last name \n\uf0b7 \nwhether or not they wish to work as a volunteer \n\u2013 \nif they choose to volunteer, identify the area from: \no \nthe pier entrance gate \no \nthe gift shop \no \npainting and decorating \n\uf0b7 \nthe date of joining \n\uf0b7 \nwhether or not they have paid the $75 fee. \nAll of this information needs to be stored using suitable data structures. ","key":0.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":21,"Question":"(b) \n Write a pseudocode algorithm to:\n\u2022 \nconvert P to upper case\n\u2022 \nfind the position of Q in the string P (the first character in this string is in position 1)\n\u2022 \nstore the position of Q in the variable Position\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"1(b) \nExplanation of how each was done.  Code is allowed, but must be fully explained. \nOne mark per mark point, max three \nMP1 \nadd\/use a (new) variable\/array to total the membership fee money \/\/ total number of members who have paid \nMP2 \ninitialise the totalling variable to 0 at the start of the program \nMP3 \ncheck whether the new member has paid the $75 fee using a conditional statement \nMP4 \n\u2026if they have paid, and the amount paid is being totalled, add 75 to the current running total of the membership \nfee total  \nMP5 \n\u2026if they have paid, and the number of paid members is being totalled, add 1 to the total number of members who \nhave paid  \nMP6 \n\u2026if they have paid, and the number of paid members is being totalled, multiply total by 75, to give total paid. ","key":1.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":21,"Question":"(c) \n Give the value of Position after the algorithm has been executed with the data in \nquestion 11(a).\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"1(c) \nAny code must include a description of what it is for. \nOne mark per mark point, max three \nMax two for just naming different appropriate validation checks \nMP1 \napply a presence check \/\/ to ensure that data has been entered (to the question do you want to work as a \nvolunteer?) \nMP2 \napply a type check \/\/ to ensure that data has been entered of the correct data type e.g. integer if the response \nrequired is 1 or 0 \nMP3 \nchecking the valid inputs would be either yes or no \/\/ apply a check to ensure that the data matches the expected \ninput  \nMP4 \nthe valid inputs would be to choose in which area the new member wishes to volunteer e.g. a list of areas  \nMP5 \nif input is not valid, an error message is output (and a new input is requested) \nMP6 \nif input is valid, the program continues ","key":2.0},{"Paper_No":"0478_s23_qp_22.pdf","Question_No":22,"Question":"\n12 A two-dimensional (2D) array Account[] contains account holders\u2019 names and passwords for a \nbanking program.\nA 2D array AccDetails[] has three columns containing the following details:\n\u2022 \ncolumn one stores the balance \u2013 the amount of money in the account, for example 250.00\n\u2022 \ncolumn two stores the overdraft limit \u2013 the maximum total amount an account holder can \nborrow from the bank after the account balance reaches 0.00, for example 100.00\n\u2022 \ncolumn three stores the withdrawal limit \u2013 the amount of money that can be withdrawn at one \ntime, for example 200.00\nThe amount of money in a bank account can be negative (overdrawn) but not by more than the \noverdraft limit. \nFor example, an account with an overdraft limit of 100.00 must have a balance that is greater than \nor equal to \u2013100.00\nSuitable error messages must be displayed if a withdrawal cannot take place, for example if the \noverdraft limit or the size of withdrawal is exceeded.\nThe bank account ID gives the index of each account holder\u2019s data held in the two arrays.  \nFor example, account ID 20\u2019s details would be held in:\nAccount[20,1] and Account[20,2]\nAccDetails[20,1] AccDetails[20,2] and AccDetails[20,3]\nThe variable Size contains the number of accounts.\nThe arrays and variable Size have already been set up and the data stored.\nWrite a program that meets the following requirements:\n\u2022 \nchecks the account ID exists and the name and password entered by the account holder \nmatch the name and password stored in Account[] before any action can take place\n\u2022 \ndisplays a menu showing the four actions available for the account holder to choose from:\n1. \ndisplay balance\n2. \nwithdraw money\n3. \ndeposit money\n4. \nexit\n\u2022 \nallows an action to be chosen and completed. Each action is completed by a procedure \nwith a parameter of the account ID.\nYou must use pseudocode or program code and add comments to explain how your code works. \nAll inputs and outputs must contain suitable messages.\nYou only need to declare any local arrays and local variables that you use.\nYou do not need to declare and initialise the data in the global arrays Account[] and \nAccDetails[] and the variable Size\n  ","Marks":"[15]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"1(d) \nOne mark per mark point, max five \nMP1 \ninput for sponsor\u2019s name \/ name taken from previous data \/\/ input for message on plaque \nMP2 \nboth inputs correct with appropriate prompts \/\/ input for message on plaque correct with appropriate prompt and \nname taken from previous data \nMP3 \noutput of input(s) for confirmation \u2026  \nMP4 \n\u2026 method for sponsor to confirm that the input(s) are correct \nMP5 \nmethod to enable re-entry of message on plaque if errors made \nMP6 \ncharge of $200 acknowledged \/ charged \/ confirmed \/ displayed \nMP7 \n(name and) message stored in arrays \nMP8 \narray index incremented for next sponsor \nTask 3 \u2013 sponsoring a wooden plank \nAdd an additional option to the program in Task 1 to enable the pier\u2019s wooden planks to be sponsored. Separate data \nstructures should be used to store the names of the individuals and the short messages they would like to have written on \ntheir brass plaque. An output would display everything that was input for the sponsor to confirm. If errors are found, the \nprogram should allow data to be re-entered. Once complete, the data is stored and the sponsor is charged $200. \nExample answer \nArrayIndex \uf0ac 0 \/\/initial array's index \nCheck \uf0ac \"N\" \nWHILE Check <> \"Y\"     \n  OUTPUT \"Enter your name\" \n  INPUT Name \n  OUTPUT \"Enter the message you would like on your brass plaque\" \n  INPUT Message \n  OUTPUT \"The data you have entered is, name: \", Name, \" and your \n         message for the plaque is: \", Message \n  OUTPUT \"Is this correct (Y or N)\" \n  INPUT Check \n  IF Check <> \"Y\" \n    THEN \n      OUTPUT \"The data entered is incorrect, please re-enter\" \n  ENDIF \nENDWHILE ","key":3.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":1,"Question":"1 \nTick (3) one box to complete the sentence. \nA constant \nA \nstores a value that can change at any time during the execution of a program. \nB \nstores a value that cannot change during the execution of a program. \nC \nstores values of multiple data types. \nD \nstores values that must be of the same data type. \n","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"1(d) \nPlankName[ArrayIndex] \uf0ac Name \nMessage[ArrayIndex] \uf0ac Message \nArrayIndex \uf0ac ArrayIndex + 1 \nOUTPUT \"The fee for this service is $200\"  \n\/\/some method of paying the fee or acknowledgement of the fee \n1(e) \nExplanation of how each was done.  Code is allowed, but must be fully explained. \nOne mark per mark point, max four \nMP1 \na menu is provided\/options are displayed so that the user can choose which of the lists they wish to see \nMP2 \nthe user inputs a number\/code as shown on the menu corresponding to their menu choice \nMP3 \nattempt to validate input \nMP4 \n\u2026 if it does not match an option, give an error message and ask for re-input \nMP5 \n\u2026 if it matches an option, a range of IF statements\/conditional statements\/CASE statement are\/is used to \ncompare the input with the available options \nMP6 \n\u2026 output the chosen list e.g. using a loop to output the contents of the appropriate first and second name arrays \ncorresponding to the user input  \nMP7 \nidentification of empty list and appropriate action \nTask 2 \u2013 using the membership data \nExtend the program in Task 1 so that a list of the first and last names of members can be output in any of the following \ncategories: \n\uf0b7 \nMembers who have chosen to work as volunteers. \n\uf0b7 \nVolunteers who would like to work at the pier entrance gate. \n\uf0b7 \nVolunteers who would like to work in the gift shop. \n\uf0b7 \nVolunteers who would like to help with painting and decorating tasks. \n\uf0b7 \nMembers whose membership has expired (they have not re-joined this year). \n\uf0b7 \nMembers who have not yet paid their $75 fee. ","key":4.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":2,"Question":"\n2 \nExplain the purpose of the library routines MOD and RANDOM\nMOD  \nRANDOM  \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"Section B ","key":5.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":3,"Question":"\n3 \nDescribe what happens when a function is called during the execution of a program.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"Four marks for five correct rows \nThree marks for four correct rows \nTwo marks for three correct rows \nOne marks for two correct rows \nDescription \nData type \nBoolean \nChar \nInteger \nReal \nString \na single character from the keyboard \n\uf0fc \nmultiple characters from the keyboard \n\uf0fc \nonly one of two possible values \n\uf0fc \nonly whole numbers \n\uf0fc \nany number \n\uf0fc ","key":6.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":4,"Question":"(a) \n4 \n Explain why verification checks are used when data is input. \n  ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"3 \nOne mark per mark point, max four \n\uf0b7 \nNormal test data \ncomputerscience@cambridge.org.uk \n\uf0b7 \nReason  \nthis is a valid email address (containing the @ symbol) and should be accepted  \n\uf0b7 \nErroneous test data computerscienceisgreat \n\uf0b7 \nReason  \nthis is just a string, and should be rejected (as an email address needs a single \u2019@\u2019)  ","key":7.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":4,"Question":"(b) \n Give two types of verification check and state how each one can be used.\nVerification check 1  \nUse  \nVerification check 2  \nUse  \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"4(a) \nOne mark per mark point, max six \nMP1 \ninput box \nMP2 \ncorrect check of Score \nMP3 \nassign Score to Pass correctly \nMP4 \nassign Score to Fail correctly \nMP5 \nincrement both array counters \nMP6 \ncorrect check of number of scores ","key":8.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":5,"Question":"(a) \n5 \n Four descriptions of validation checks are shown.\nDraw one line to link each description to the most appropriate check.\nNot all checks will be used.\nDescription \nCheck\n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"IS Count = \n60? \nEND \nYes \nNo \nNo \nFail[FailCount] \uf0ac Score \nFailCount \uf0ac FailCount + 1 \nPass[PassCount] \uf0ac Score \nPassCount \uf0ac PassCount + 1 \nCount \uf0ac Count + 1 \nIS Score >= \n50? \nCount \uf0ac 0 \nINPUT \nScore  \nFailCount \uf0ac 0 \nSTART \nPassCount \uf0ac 0 \nYes \n4(b) \nOne mark per mark point, max four \nMP1 \nappropriate conditional loop structure  \nMP2 \ncorrect identification of invalid input  \nMP3 \nappropriate error message  \nMP4 \nrepeated input of score until correct  \nWHILE Score < 0 OR Score > 100 (DO) \n  OUTPUT \"Your entry must be between 0 and 100, inclusive, please try again \"  \n  INPUT Score \nENDWHILE \nOr: \nREPEAT \n  IF Score < 0 OR Score > 100 \n    THEN \n      OUTPUT \"Your entry must be between 0 and 100, inclusive, please try again \"  \n      INPUT Score \n  ENDIF \nUNTIL Score >= 0 AND Score <= 100 ","key":9.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":5,"Question":"(b) \n Write an algorithm in pseudocode to make sure that an input for the variable Length is \nbetween 15 and 35 inclusive. The code must iterate until a valid input has been made and the \ncode must include appropriate messages.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"5(a) \nOne mark per mark point, max five \nMP1 \ncorrect Counter and Limit columns \nMP2 \ncorrect Value column \nMP3 \ncorrect First column \nMP4 \ncorrect Last column \nMP5 \ncorrect OUTPUT \nCounter \nValue \nFirst \nLast \nLimit \nOUTPUT \n0 \n0 ","key":10.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":6,"Question":"(a) \n6 \nAn algorithm has been written in pseudocode to allow 100 positive numbers to be input. The total \nand the average of the numbers are output.\n01 Counter \n 100\n02 Total \n 0\n03 WHILE Counter > 100 DO\n04    INPUT Number\n05    IF Number > 0\n06       THEN\n07         Total \n Total + Counter\n08         Counter \n Counter + 1\n09    ENDCASE\n10 ENDWHILE\n11 OUTPUT \"The total value of your numbers is \", Total\n12 OUTPUT \"The average value of your numbers is \", Total \/ 100\nto check that the data entered is an integer\ncheck digit\nformat check\nlength check\npresence check\ntype check\nto check that some data has been entered\nto check that the data entered has an appropriate \nnumber of characters\nto check that an identification number contains  \nno errors\n Identify the four errors in the pseudocode and suggest corrections.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"1 \n66 ","key":11.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":6,"Question":"(b) \n Describe the changes you should make to the corrected algorithm so that a count-controlled \nloop is used to allow 100 positive numbers to be input.\nYou do not need to rewrite the algorithm.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"606 ","key":12.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":7,"Question":"(a) \n7 \nThe flowchart represents an algorithm.\nAn input of \u20131 will terminate the algorithm.\nSTART\nTotal\nINPUT\nValue\n0\nSTOP\nFive1\nIS\nValue =\n \u20131 ?\nValue DIV 5\nValue \/ 5\nNo\nOUTPUT\n\"Rejected\"\nOUTPUT\nTotal\nIS\nFive1 =\nFive2 ?\nIS\nTen1 =\nTen2 ?\nNo\nNo\nYes\nYes\nYes\nFive2\nValue DIV 10\nTen1\nTotal + Value\nTotal\nValue \/ 10\nTen2\n Complete the trace table for the input data:\n5, 50, 52, 555, 57, 500, \u20131, 5500, 55\nTotal\nValue\nFive1\nFive2\nTen1\nTen2\nOUTPUT\n","Marks":"[6]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"6 \n606 ","key":13.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":7,"Question":"(b) \n Describe the purpose of the algorithm. \n  ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"6226 ","key":14.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":8,"Question":"(a) \n8 \nConsider the logic expression:\nZ is 1 if (A = 1 AND C = NOT 1) AND (B = 1 NOR C = 1)\n Draw a logic circuit for this logic expression.\nEach logic gate must have a maximum of two inputs.\nDo not simplify this logic expression.\nA\nB\nZ\nC\n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"8448 ","key":15.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":8,"Question":"(b) \n Complete the truth table from the given logic expression.\nA\nB\nC\nWorking space \nZ\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"642 ","key":16.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":9,"Question":"(a) \n9 \nThe variable Saying is used to store string data in a program.\n Write the pseudocode statement to declare the variable Saying \n  ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"2 ","key":17.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":9,"Question":"(b) \n Write the pseudocode statements to:\n\u2022 \nallow a string to be input to the variable Saying\n\u2022 \nstore the content of the variable Saying in a text file named \"Quotations.txt\"\n\u2022 \nmake sure the text file is closed at the end of the algorithm.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"747 ","key":18.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":10,"Question":"(a) \n10 A database table called Site1 stores details of some holiday homes at a holiday park. The \ndatabase shows the type of home, number of guests, whether it is privately owned and the weekly \nrate to hire it.\nName\nType\nPrivate\nRate$\nNumberGuest \nBay Lodge\nLodge\nNO\n1000\n10\nBay View\nCabin\nNO\n400\n4\nBlue Skies\nCabin\nNO\n350\n4\nCliff View\nCabin\nNO\n650\n6\nCoppice Lodge\nLodge\nNO\n1200\n12\nGreen Lodge\nLodge\nNO\n1000\n8\nHenry\nCabin\nYES\n300\n2\nHikers\u2019 Rest\nRetreat\nNO\n750\n6\nPoppy\nCabin\nNO\n300\n2\nSummer Joy\nRetreat\nYES\n750\n6\nValley View\nCabin\nNO\n600\n6\nWest Lodge\nLodge\nYES\n1200\n12\n State the number of fields and the number of records in this database table.\nFields  \nRecords  \n","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"7 \n747 ","key":19.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":10,"Question":"(b) \n Describe the purpose of a primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"77 ","key":20.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":10,"Question":"(c) \n The database uses the data types:\n\u2022 \nalphanumeric\n\u2022 \ncharacter\n\u2022 \nBoolean\n\u2022 \ninteger\n\u2022 \nreal\n\u2022 \ndate\/time.\nComplete the table to show the most appropriate data type for each field.\nField\nData type\nType\nPrivate\nRate$\nNumberGuest\n","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"121 ","key":21.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":10,"Question":"(d) \n Give the output that would be produced by the structured query language (SQL) statement:\nSELECT Name, NumberGuest, Rate$\nFROM Site1 \nWHERE NumberGuest >= 10;\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"1 \n121 ","key":22.0},{"Paper_No":"0478_s23_qp_23.pdf","Question_No":11,"Question":"\n11 A two-dimensional (2D) array Contacts[] is used to store names and telephone numbers. All \nthe data is stored as strings. The array must have the capacity to store 100 contacts in the form of:\n\u2022 \ncolumn 1 \u2013  contact names as: last name, first name  \nfor example: Smith, John\n\u2022 \ncolumn 2 \u2013 telephone numbers.\nThe variable CurrentSize shows how many contacts are in the array.\nWrite a program that meets the following requirements:\n\u2022 \ndisplay a menu of choices:\n\u25cb \nenter new contact details\n\u25cb \ndisplay all the contact details\n\u25cb \ndelete all the contact details\n\u2022 \nvalidate the menu input \n\u2022 \nallow up to a maximum of five new contacts to be added to the array at any one time\n\u2022 \ndo not allow more than 100 contacts in total\n\u2022 \nafter new contacts have been added, sort the array by contact name, as long as there are at \nleast two contacts in the array\n\u2022 \noutput the whole of the array\n\u2022 \ndelete the contents of the array.\nYou must use pseudocode or program code and add comments to explain how your code works.\nYou do not need to declare any arrays, variables or constants; you may assume that this has \nalready been done.\nAll inputs and outputs must contain suitable messages.\nYou do not need to initialise the data in the array Contacts[] and the variable CurrentSize\n  ","Marks":"[15]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"5(b) \nOne mark per mark point, max two \n\uf0b7 \nchecks for \/ outputs 3-digit numbers  \n\uf0b7 \n\u2026 where the first and last digit are the same  ","key":23.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nYou have been asked to write a program to calculate the area of a patio and the cost of the stone slabs \nneeded to cover it. The program should work for any patio that can be represented as a rectangle, or \ngroup of rectangles that are joined together, and only one type of stone slab may be used.\nType of stone slab\nPrice per square metre\nDover\n$30.00\nExeter\n$35.00\nLondon\n$42.00\nPortland\n$49.50\nShaftesbury\n$55.00\nYork\n$62.75\nWrite and test a program or programs to calculate the cost of the stone slabs for a patio.\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Setting up the system for a simple rectangular patio.\nSet up your program to:\n\u2022 \nStore the type and price per square metre of the stone slabs using a suitable programming technique.\n\u2022 \nPrompt and allow the user to input the length and width of their patio and the type of stone slab they \nwould like. \n\u2022 \nCalculate and display the number of square metres of stone slabs required, rounded up to the next \nwhole square metre, and the total cost of the stone slabs.\nTask 2 \u2013 Working on more complex shapes.\nAssuming that a patio can be made up of a group of rectangles, extend your program to:\n\u2022 \nEnter the number of rectangles making up the patio and the type of stone slab to be used. \n\u2022 \nAllow the dimensions for each rectangle to be entered.\n\u2022 \nCalculate and display the total area of the patio rounded up to the next whole square metre.\n\u2022 \nCalculate and display the total cost of the stone slabs.\nTask 3 \u2013 Allowing for waste.\nIt is likely that some of the stone will not be useable, so it is sensible to allow a percentage for wastage, \nfor example, 10%. Alter your program to allow the user to input a percentage to calculate wastage and \nadd this to the number of square metres of stone slabs to be purchased, rounded up to the next whole \nsquare metre. Display the revised total area and cost.\n1 \n All variables, constants and other identifiers must have meaningful names.\nName two variables that you could have used for Task 1. State the data type and purpose of \neach variable.\nVariable 1 name  \nData type  \nPurpose  \nVariable 2 name  \nData type  \nPurpose  \n","Marks":"[6]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"6(a) ","key":24.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":1,"Question":"(b) \n Describe how arrays could be used to store the data about the types and price per square \nmetre of the stone slabs for Task 1.\n ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"1 \n6(b) \nThe primary key field must be unique\/different for each record in the table ","key":25.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":1,"Question":"(c) \n Write an algorithm to complete Task 2, using either pseudocode, programming statements \nor a flowchart. Assume Task 1 has been completed.\n ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_21.pdf","Answer":"6(c) \nOne mark per mark point, max three \n\uf0b7 \ncorrect fields and table named correctly \n\uf0b7 \ncorrect sort and show box rows \n\uf0b7 \ncorrect search criteria \nField: GameID \nGameName GamePrice \nNumberStock OnOrder \nTable: GAMES \nGAMES \nGAMES \nGAMES \nGAMES \nSort: \nAscending \nShow: \n\uf0fe \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria: \n=0 \n=\"Y\" \nor: \n3 ","key":26.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":1,"Question":"(d) \n Explain how your program completes Task 3. Any programming statements you use in your \nanswer must be fully explained.\n ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. \nSection A \n1(a)(i) \nMany correct answers, the name used must be meaningful.  The name given is an example only. \nOne mark per mark point, max three  \nConstant \nAdultCostOneDay \nValue  \n20.00 \nUse  \nStoring the cost of an adult ticket for one day ","key":0.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":1,"Question":"(e) \n Name two validation checks that could be used when entering patio dimensions in Task 1 or \nTask 2 and describe their purpose.\nValidation check 1  \nPurpose  \nValidation check 2  \nPurpose  \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1(a)(ii) \nMany correct answers, the name used must be meaningful.  The name given is an example only. \nOne mark per mark point, max three  \nVariable \nNumberOfTickets \/\/ NumberOfAdultTickets \nData type  \nInteger \nUse  \nInputting the number of tickets purchased \/\/ Inputting the number of adult tickets purchased ","key":1.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":2,"Question":"\nSection B\n2 \nFor each of the four descriptions in the table, place a tick in the correct column to show whether it \ndescribes a Structure diagram, a Flowchart or Library routines.\nDescription\nStructure \ndiagram\nFlowchart\nLibrary \nroutines\nA modelling tool used to show the hierarchy of a \nsystem.\nA collection of standard programs available for \nimmediate use.\nA graphical representation used to represent an \nalgorithm.\nA graphical representation to show how a system is \nbroken into sub-systems.\n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1(b) \nOne mark per mark point, max three  \nMP1 \nusing an array or variables \/\/ lookup \/\/ input today\u2019s date  \nMP2 \nuse a loop \/ FOR \/ REPEAT \/ WHILE statement  \nMP3 \n\u2026 to output \/ display today\u2019s date \/ today using a suitable message          \nMP4 \n\u2026 and the 6\/7 following dates\/days \/\/ loop 6\/7 times \nor \nMP5 \nusing an array or variables \/\/ lookup \/\/ input today\u2019s date  \nMP6 \narray\/ variables contains all the days of the week \/ the next seven days or dates \nMP7 \nattempt to output \/ display available days using a suitable message(s) ","key":2.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":3,"Question":"(a) \n3 \nExamine the following pseudocode:\nINPUT A\nINPUT B\nINPUT C\nINPUT D\nINPUT E\nINPUT F\nINPUT G\nINPUT H\nINPUT I\nINPUT J\nINPUT K\nINPUT L\nT \n A + B + C + D + E + F + G + H + I + J + K + L\nOUTPUT \"The average equals \", T \/ 12\n Describe what happens in this pseudocode.\n ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1(c) \nOne mark per mark point, max two  \nMP1 \nmethod used to allocate a new number, e.g. initialise a variable or counter \/\/ select a random number \nMP2 \nhow it ensured uniqueness, e.g. every booking number is one larger than the previous number  \n\/\/ check existing bookings to ensure it hasn\u2019t been used before ","key":3.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":3,"Question":"(b) \n Describe how this pseudocode could be altered to allow any number of values to be input. \n ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1(d) \nOne mark per mark point, max six \nMP1 \ninitialise a running total for the cost of the booking \nMP2 \ninput (with prompt) the number of tickets \nMP3 \n\u2026 attempt to identify type of ticket \nMP4 \n\u2026 add the cost of tickets to the running total \nMP5 \n ability to book several types of ticket \nMP6 \nattempt to check that the number of children booked is less than or equal to twice the number of adults \nMP7 \nattempt to identify type of attraction \nMP8 \ninput with prompt the number of selected attractions required \nMP9 \n\u2026 check that this number is not greater than the total number of tickets booked  \nMP10 \n\u2026 add the cost of the attractions to the (running) total \nExample answer \nTotalCost \uf0ac 0 \nTotalPeople \uf0ac 0 \nOUTPUT \"Do you want single tickets? Y\/N\" \nINPUT Single \nIF Single = \"Y\" \n  THEN \n  FOR Type \uf0ac 1 TO 3  \/\/ adults, children and seniors  \n    REPEAT \n      Flag \uf0ac True \n      OUTPUT \"How many \",TicketDecription[Type], \" tickets\" \n      INPUT NumberOfTickets[Type] \n      IF Type = 2  \n        THEN \n          IF NumberOfTickets[2] > 2 * NumberOfTickets[1] \n            THEN \n              Flag \uf0ac FALSE \n              OUTPUT \"Too many children\" \n              ENDIF \n      ENDIF \n    UNTIL NumberOfTickets[Type] >= 0 AND Flag \n    TotalCost \uf0ac TotalCost + TicketPrice[Type] * NumberOfTickets[Type] ","key":4.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":3,"Question":"(c) \n Re-write the given pseudocode to allow any number of values to be input.\n ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1(d) \n    TotalPeople \uf0ac TotalPeople + NumberOfTickets[Type] \n  NEXT Type \nENDIF \nOUTPUT \"Do you want a family ticket? Y\/N\" \nINPUT Family \nIF Family = \"Y\" \n  THEN \n    OUTPUT \"How many?\" \n    INPUT NumberOfTickets[4] \n    TotalCost \uf0ac TotalCost + TicketPrice[4] * NumberOfTickets[4] \n    TotalPeople \uf0ac TotalPeople + NumberOfTickets[4] * 5 \nENDIF \nOUTPUT \"Do you want a group ticket? Y\/N\" \nINPUT Group \nIF Group = \"Y\" \n  THEN \n    OUTPUT \"How many people in the group?\" \n    INPUT NumberOfTickets[5] \n    TotalCost \uf0ac TotalCost + TicketPrice[5] * NumberOfTickets[5] \n    TotalPeople \uf0ac TotalPeople + NumberOfTickets[5] \nENDIF \nREPEAT \n  OUTPUT \"How many people would like to see the lion feeding?\" \n  INPUT LionFeedingNumber \n  IF TotalPeople >= LionFeedingNumber  \n    THEN TotalCost \uf0ac TotalCost + LionFeedingNumber * LionfeedingPrice  \n  ENDIF \n  OUTUT \"How many people would like to see the penguin feeding?\" \n  INPUT PenguinFeedingNumber \n   IF TotalPeople >= PenguinFeedingNumber  \n    THEN TotalCost \uf0ac TotalCost + PenguinFeedingNumber * PenguinfeedingPrice \n  ENDIF \nUNTIL TotalPeople >= PenguinFeedingNumber AND TotalPeople >= LionFeedingNumber \n1(e) \nExplanation \nOne mark per mark point, max three  \nMP1 \nuse of selection (or any other method) to identify bookings with 2 or more adults and\/or seniors and 2 (allow 3) or \nmore children  \nMP2 \ncalculating new price including family ticket(s) for booking \/ tickets sold \nMP3 \n\u2026 use of condition to compare price of family ticket(s) to price of ordinary tickets \/ group ticket(s) \u2026 \nMP4 \n\u2026 identifying best value \/ lowest cost ","key":5.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":4,"Question":"(a) \n4 \n Complete the trace table for this algorithm using the given input data. \nIndex \n 0\nFOR Count \n 0 TO 7\n  INPUT Value\n  IF Value > 50\n    THEN\n      PassMarks[Index] \n Value\n      Index \n Index + 1\n  ENDIF\nNEXT Count\nPRINT \"Number passed \", Index\nInput data: 58, 40, 67, 85, 12, 13, 75, 82\nIndex Count Value\nPassMarks\nOUTPUT\n","Marks":"[0]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"Section B \n2(a) \nOne mark per mark point, max three  \n\uf0b7 \nline 8 \/ PassCheck \uf0ac TRUE \ncorrection PassCheck \uf0ac FALSE \n\uf0b7 \nline 12 \/ IF Password <> Password \ncorrection IF Password2 <> Password \/\/ IF Password <> Password2 \n\uf0b7 \nline 18 \/ UNTIL PassCheck OR Attempt <> 3  \ncorrection UNTIL PassCheck OR Attempt = 3 \/ UNTIL PassCheck OR Attempt >= 3  ","key":6.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":5,"Question":" ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"2(b) \nOne mark check, one mark matching description, max four  \nCheck: \nvalidation \n\/\/ length check  \nDescription length check  \/\/ checks number of characters in password  \nCheck: \nverification  \/\/ double entry \nDescription double entry \/\/ comparison that two inputs are the same  ","key":7.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":6,"Question":" ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"2(c) \nOne mark per set, one mark matching reason, max four  \nSet 1 \u2013 \nany appropriate example e.g. \u201csmall\u201d \nReason \nmust follow through from the password given e.g. abnormal data will be rejected \nSet 2 \u2013 \nany different appropriate example e.g. \u201cpassword\u201d and \u201cpassword\u201d \nReason \nmust be different and follow through from the password given e.g. normal data will be accepted ","key":8.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":7,"Question":" ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"3(a) \nOne mark per mark point, max two  \n\uf0b7 \na list \/ one column of items  \n\uf0b7 \n\u2026 of the same data type  \n\uf0b7 \n\u2026 stored under a single identifier  \n\uf0b7 \n\u2026 with a single index to identify each element \nOne mark for an example of a declaration \n\uf0b7 \nexample e.g.  DECLARE MyArray[1:10] OF INTEGER ","key":9.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":8,"Question":" ","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"3(b) \nOne mark per mark point, max two  \n\uf0b7 \nusing a counter to index the array \n\uf0b7 \nso that the same code can be repeatedly used to check every element \/\/ every element can be checked in a loop  ","key":10.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":9,"Question":" ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"4(a) \nOne mark for each correct column \nCounter \nHot \nCold \nServe \nTemp \nError \nOUTPUT \n0 \n0 \n0 \n0 ","key":11.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":10,"Question":" ","Marks":"[6]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1 \n75 ","key":12.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":11,"Question":" ","Marks":"[7]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"2 \n78 ","key":13.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":12,"Question":"\n","Marks":"[6]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"3 \n84 ","key":14.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":12,"Question":"(b) \n Give the purpose of the algorithm shown in part (a).\n ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1 \n87 \nToo Hot ","key":15.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":13,"Question":"(a) \n5 \nA car manufacturer makes a range of car models named Pegasus, Apollo and Cupid. It keeps a \ndatabase to store the records of its range and the different options for each car model. Within the \ntable CAR_RANGE, the following data needs to be stored:\n1. \nCar model\n2. \nBody style \u2013 saloon, hatchback or estate\n3. \nHow many doors it has\n4. \nWhether it uses petrol, diesel or batteries as fuel\n5. \nAn identifier for a specific car.\n Complete the table to show suitable field names and an example of appropriate data for each \nfield in the database table CAR_RANGE.\nField name\nExample of data\n","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"2 \n91 \nToo Hot ","key":16.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":13,"Question":"(b) \n State which of your fields would be most appropriate for a primary key and give a reason for \nyour choice.\n ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"4 \n80 ","key":17.0},{"Paper_No":"0478_w19_qp_21.pdf","Question_No":13,"Question":"(c) \n Complete the query-by-example grid to provide a list of car models using petrol and the \nnumber of doors these cars have, in alphabetical order of car model. Display only the car \nmodels and the number of doors.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"5 \n75 ","key":18.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA company supplies concrete slabs for paving. The slabs are made to order in batches of 20; \nall slabs in a batch are identical. Customers can order from a small range of standard sizes and \ncolours. All measurements are given in millimetres. The price is calculated at $0.05 for a volume of \n100 000 mm3 of grey concrete; red and green concrete are charged at 10% more. Customers can \nchoose their own colours; a custom colour has an initial set up cost of $5 then 15% more than the \nprice for grey. \nColour of \nslab\nDepth of \nslab\nShapes\nSizes for each shape\nGrey\n38\nSquare\n600 \u00d7 600 or 450 \u00d7 450\nRed\n45\nRectangular\n600 \u00d7 700 or 600 \u00d7 450\nGreen\nRound\nDiameter 300 or 450\nCustom\nWrite and test a program or programs for the concrete slab company.\n\u2022 \n Your program or programs must include appropriate prompts for the entry of data; data must \nbe validated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Price for a batch of 20 slabs\nUsing the information above set up a routine that allows a customer to choose the concrete slab \nthey require and calculate a price for a batch of 20 slabs. The details of the slab chosen and the \nprice for a batch of 20 should be displayed on the screen.\nTask 2 \u2013 Customer places an order\nUsing the information from TASK 1, the customer places an order for the number of slabs they \nrequire. Orders for fewer than 20 slabs or more than 100 slabs are not accepted; orders that are \nnot a multiple of 20 are rounded up to the next multiple of 20 slabs. Display the order price and the \nnumber of slabs to be produced.\nTask 3 \u2013 Flexible pricing\nThe cost of concrete is variable. The cost for 100 000 mm3 of grey concrete can be input and two \ngrades are available; basic at the cost input and best at 7% more. Use a copy of your program for \nTASK 1 to develop TASK 3 to input the cost and grade of concrete before calculating the price for \n20 slabs.\n1  \n All variables, constants and other identifiers must have meaningful names.\n(i)  Describe the data structures that you have used to store the data for the concrete slabs \nin Task 1, include the name, data type and use for each data structure. \n  ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"6 \n70 ","key":19.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":1,"Question":"(ii) \n State one variable that you have used in Task 3.\n Give the data type for the variable. State what it is used for.\nVariable name  \nData type  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"7 \n65 ","key":20.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":1,"Question":"(b) \n Explain how you calculated the volume of a concrete slab in Task 1.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"1 \n62 \nToo Cold \n-1 \n30 \n30 ","key":21.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for Task 2, using either pseudocode, programming statements or a \nflowchart. Assume that Task 1 has been completed. \n  ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"4(b)  \n\uf0b7 \ninclude a message to explain the value output \/ e. g. \u201cThe percentage of meals not served\u201d \/\/  \n  outputting Hot, Cold and Serve ","key":22.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how you changed your program for Task 1 to meet the requirements for Task 3. \nInclude and fully explain any altered or additional programming statements.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"4(c) \n\uf0b7 \nupdating the Serve variable \/\/ Serve \uf0ac Serve + 1 ","key":23.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":1,"Question":"(n) \nSection B\n2 \nAn algorithm has been written in pseudocode to select a random number using the function \nRandInt, which returns a whole number between 1 and the argument n. The algorithm then \nallows the user to guess the number.\nNumber  RandInt(100)\nTotalTry  1\nREPEAT\n  PRINT \"Enter your guess now, it must be a whole number\"\n  INPUT Guess\n  IF TotalTry > Number \n    THEN \n      PRINT \"Too large try again\" \n  ENDIF\n  IF Guess > Number \n    THEN \n      PRINT \"Too small try again\" \n  ENDIF\n  TotalTry  Guess + 1\nUNTIL Guess <> Number\nTotalTry  TotalTry - 1\nPRINT \"Number of guesses \", TotalTry\nFind the four errors in the pseudocode and suggest a correction to remove each error.\nError 1  \nCorrection \nError 2  \nCorrection \nError 3  \nCorrection \nError 4  \nCorrection \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"5(a) \nOne mark per mark point, max four  \n\uf0b7 \ncorrect rows Field and Table \n\uf0b7 \ncorrect row Show \n\uf0b7 \ncorrect Criteria for SingleUse or\/and Uses \n\uf0b7 \ncorrect Criteria for StockLevel less than ReorderLevel  \nField: ItemNumber \nDescription \nSingleUse \nStockLevel \nTable: NURSE \nNURSE \nNURSE \nNURSE \nSort:  \nShow: \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria:  \nTrue \n<[ReorderLevel] \nor:  \nOr \nField: ItemNumber \nDescription \nUses \nStockLevel \nTable: NURSE \nNURSE \nNURSE \nNURSE \nSort:  \nShow: \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria:  \n= 1 \n<[ReorderLevel] \nor:  ","key":24.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":2,"Question":"(a)  \n3  \n The flowchart checks the lengths of a batch of 10 ropes. For the batch to be accepted 90% of \nthe lengths need to be between 24.9 and 25.1 metres. \nSTART\nEND\nIs Count =\n10 ?\nIs Reject\n<= 1 ?\nIs Length <\n25.1 AND\nLength > 24.9 ?\nINPUT Length\nReject    0\nCount    0\nOUTPUT \"Batch\naccepted\"\nOUTPUT \"Batch\nrejected\"\nNo\nNo\nNo\nYes\nYes\nYes\nCount   Count + 1\nReject   Reject + 1\nComplete the trace table for the input data:\n24.88, 25.01, 24.98, 25.00, 25.05, 24.99, 24.97, 25.04, 25.19, 25.07\nReject\nCount\nLength\nOUTPUT\n ","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_22.pdf","Answer":"5(b) \nthe field Uses already shows this information  \/\/  duplication of data  \/\/  redundant data \n1 ","key":25.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":2,"Question":"(b) \n (i) It has been decided to only reject batches of rope that contain ropes that are too short.\n State the change required to the algorithm.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. \nSection A \n1(a) \nMany correct answers, the names used must be meaningful. The names given are examples only. \nOne mark per mark point, max four \n\uf0b7 \nVariable ClientName \n\uf0b7 \nUse  \nStoring the name of the person making the booking \n\uf0b7 \nArray \nBookingsLarge[ ] \n\uf0b7 \nUse  \nStoring the bookings for the large meeting room \nTask 1 \u2013 setting up a booking system structure for the meeting rooms \nSet up suitable data structures for each of the three meeting rooms to store: \n\uf0b7 \nwhen it is booked during a fixed eight-week period \n\uf0b7 \nthe client\u2019s name (the person making the booking) \n\uf0b7 \na unique booking code \n\uf0b7 \nthe cost of the booking. \nTask 2 \u2013 booking a meeting room \nExtend the program in Task 1 to enable bookings to be made so that the client enters their name, the meeting room \nrequired and the day of the booking. After the data has been entered, the program should check if the requested day is \navailable for the required meeting room and if not, the client should be allowed to enter an alternative day or exit the \nprogram. \nIf the requested day is available, the booking details and cost of the booking should be output for the client to confirm. \nOnce confirmed, a unique booking code should be generated and stored in both the appropriate meeting room data \nstructure and the unique booking code data structure. The client\u2019s name and cost of the booking should be stored in the \nappropriate data structures set up in Task 1. \nBookings of more than one day must be entered as separate single day bookings. ","key":0.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":2,"Question":"(ii) \n Explain how the algorithm to reject batches could be improved to make it more effective.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"1(b) \nOne mark per mark point, max two \nMP1 \ninput a piece of normal test data that should be accepted \/\/ use Large, Small1 or Small2 to check that these data \nare accepted \/\/ use a menu and check the input matches the available options \nMP2 \nInput a piece of erroneous test data that should be rejected \/\/ entry of anything that is not Large, Small1 or Small2 \nshould be rejected \/\/ anything not on the menu should be rejected \nExplanation Task 2 ","key":1.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":3,"Question":"\n4 \nFour validation checks and four descriptions are shown.\nDraw a line to connect each validation check to the correct description.\nValidation Check \nDescription\nRange check\nChecks that some data is entered.\nPresence check\nChecks for a maximum number of characters \nin the data entered.\nLength check\nChecks that the characters entered are all \nnumbers.\nType check\nChecks that the value entered is between an \nupper value and a lower value.\n","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"1(c) \nOne mark per mark point, max four \nMP1 \nintroduce a (new) variable\/array for the number of days for the booking \/\/ introduce a (new) variable\/array for the \nnumber of days for booking the same room \/\/ identify the number of days the same room has been booked by the \nsame client \nMP2 \nuse a conditional\/IF statement to check if the length of the booking is 2 to 6 inclusive \/ 2, 3, 4, 5, or 6 \/\/Use a \nCASE statement \nMP3 \n\u2026 if it is, get the daily rate for the room booking \nMP4 \n\u2026 multiply the number of days for the booking by the room rate \nMP5 \n\u2026 multiply the total cost of the booking by 70%\/.7\/\/ reduce the total cost by 30% \nExplanation Task 2 ","key":2.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":4,"Question":"\n5 \nA programmer writes a program to weigh baskets of fruit in grams, keeping a total of the weight \nand counting the number of baskets. The total weight is stored in a variable Total and the number \nof baskets is stored in a variable BasketCount. \nExplain, including examples of programming statements, how totalling and counting could be used \nin this program.\nTotalling \nCounting  \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"1(d) \nOne mark per mark point, max six \nMP1 \noutput all relevant input data using suitable variables for client name, meeting room choice, the booking day and \nthe booking cost \nMP2 \nattempt to provide appropriate messages to accompany given output \nMP3 \ninput with messages to confirm booking \nMP4 \nconditional statement or WHILE to check for a positive confirmation input \nMP5 \nattempt at generation of booking code \nMP6 \nfully unique booking code generated \nMP7 \nidentification of meeting room using CASE or IF statements \nMP8 \nstorage of booking code in both meeting room and booking code arrays\/lists \nMP9 \nstorage of client name and booking cost in appropriate arrays\/lists \nRelevant parts of Task 2 for this question: \n\uf0b7 \noutput the booking details and cost of the booking \n\uf0b7 \ntake confirmation from client \n\uf0b7 \ngenerate a unique booking code \n\uf0b7 \nstore the booking details.  \nAssume the booking is for a single day and the requested booking day is available. \nExample answer \n\/\/Assume variables representing the current index position for the client \/\/related \narrays, ClientIndex, and index for date related arrays, \/\/DateIndex, have been used \nOUTPUT \"Your name is \", ClientName, Meeting Room \", MeetingRoom, \n       \" starting on \", StartDay, \" cost of booking \", BookingCost \nOUTPUT \"Is this correct (Y or N)\" \nINPUT Confirm \nIF Confirm = \"Y\" \n  THEN \n    BookingCode \uf0ac BookingCode + 1 \n    CASE OF MeetingRoom \n      'Lg': MeetingLarge[DayIndex] \uf0ac BookingCode \n      'S1': MeetingSmall1[DayIndex] \uf0ac BookingCode \n      'S2': MeetingSmall2[DayIndex] \uf0ac BookingCode ","key":3.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":5,"Question":"\n6 \nExplain why constants, variables and arrays are used in programming.\nConstants  \nVariables  \nArrays  \n","Marks":"[6]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"1(d) \n    ENDCASE \n    BookingCode[ClientIndex] \uf0ac BookingCode \n    ClientName[ClientIndex] \uf0ac ClientName \n    BookingCost[ClientIndex] \uf0ac BookingCost \n    \/\/No ELSE clause is specified in the task or the question \n    \/\/so, ignore it if one is given  \nENDIF \n1(e) \nOne mark per mark point, max four \nMP1 \nselect the room whose records are to be searched \/\/ input the room whose records are to be searched \nMP2 \nuse a suitable loop (to search through the array that stores the bookings data for that room) \nMP3 \nuse an IF statement\/conditional statement to check if the current array element has a booking \nMP4 \n\u2026 if not, use the array index to output the day represented \nMP5 \ncheck each element in the array until all array elements have been checked \nTask 3 \u2013 using the booking data \nExtend the program in Task 1 and Task 2 to make use of the data that is available, to: \n\uf0b7 \nselect a meeting room and output the days when it is free \n\uf0b7 \ntotal and output the amount of money currently taken for all three meeting rooms \n\uf0b7 \ncheck the bookings for a specific client. \nOnly the first bullet point required for this question. ","key":4.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":6,"Question":"(a) \n7 \nA database table, SALES, is used to keep a record of items made and sold by a furniture maker.\nItem number\nOrder number\nNotes\nAmount\nStatus\nCH001\n1921\nSmith \u2013 six dining chairs\n6\nDelivered\nTB003\n1921\nSmith \u2013 large table\n1\nIn progress\nCH001\n1924\nHue \u2013 extra chairs\n4\nIn progress\nCH003\n1925\nFor stock\n2\nCancelled\nBN001\n1927\nPatel \u2013 replacement bench\n1\nNot started\nST002\n1931\nSola \u2013 small table\n1\nDelivered\nCH003\n1927\nPatel \u2013 eight dining chairs with arms\n8\nNot started\nTB003\n1927\nPatel \u2013 large table\n1\nNot started\n Explain why the field Item number could not be used as a primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"Section B ","key":5.0},{"Paper_No":"0478_w19_qp_22.pdf","Question_No":6,"Question":"(b) \n A query-by-example has been written to display only the order number and item numbers of \nany items in progress or not started.\nField:\nItem number\nOrder number\nAmount\nStatus\nTable:\nSALES\nSALES\nSALES\nSALES\nSort:\nShow:\n3\n3\nCriteria:\nNot Like \"Delivered\"\nor:\nExplain why the query-by-example is incorrect, and write a correct query-by-example. \nExplanation  \nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"One mark per row, max four \nDescription \nTypes of test data \nBoundary \nErroneous \/ \nAbnormal \nExtreme \nNormal \ntest data that is always on the limit of \nacceptability \n\uf0fc \ntest data that is either on the limit of \nacceptability or test data that is just \noutside the limit of acceptability \n\uf0fc \ntest data that will always be rejected \n\uf0fc \ntest data that is within the limits of \nacceptability \n\uf0fc \n\uf0fc ","key":6.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nYou have been asked to write a program to calculate the area of a wall and the cost of the tiles \nneeded to cover it. The program should work for any room with up to four walls being tiled. Tiles are \nsold in boxes; each box covers one square metre.\nTile description\nPrice per box\nSmall black granite\n$19.50\nSmall grey marble\n$25.95\nSmall powder blue\n$35.75\nMedium sunset yellow\n$12.50\nMedium berry red\n$11.00\nMedium glitter purple\n$52.95\nLarge oak wood effect\n$65.00\nLarge black granite\n$58.98\nLarge bamboo effect\n$85.00\nExtra-large white marble\n$62.75\nWrite and test a program or programs to calculate the area of the walls and the cost of tiles needed \nto tile a room.\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll arrays, variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Setting up and using the system for a single wall.\nSet up your program to:\n\u2022 \nStore the tile description, price per box and an identification code using a suitable programming \ntechnique.\n\u2022 \nDisplay the list of tiles including the identification code, description and price per box.\n\u2022 \nPrompt the user to input the height and width of the wall, and the identification code of the tiles \nthey would like.\n\u2022 \nCalculate and display the area of the wall, the number of boxes of tiles required (tiles are sold in \nboxes of complete square metres) and the total cost of the tiles.\nTask 2 \u2013 Adding additional walls.\nExtend your program to:\n\u2022 \nEnter the number of walls to be tiled and the identification code of the tiles to be used. Only one \nidentification code to be used for all walls.\n\u2022 \nEnter the dimensions for each wall to be tiled.\n\u2022 \nCalculate and display the total area of all walls, the number of boxes of tiles required (tiles are \nsold in boxes of complete square metres) and the total cost of the tiles.\nTask 3 \u2013 Allowing for waste.\nIt is likely that some of the tiles will not be useable so it is sensible to allow a percentage for wastage, \nfor example 10%. Alter your program to allow the user to input a percentage to calculate wastage \nand add this to the total area to be tiled. Calculate and display the revised number of boxes of tiles \nto be purchased (tiles are sold in boxes of complete square metres) and the total cost of the tiles.\n1 \n All variables, constants and other identifiers must have meaningful names.\nName two arrays you could use for Task 1. State the data type and purpose of each one.\nArray 1  \nData type 1  \nPurpose  \nArray 2  \nData type 2  \nPurpose  \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"3 \nOne mark per mark point, max four \n\uf0b7 \nvariables are used to represent values that can change during the execution of a program \/\/ variables can be used to \nstore the results of calculations \/ counting \/ totalling \/\/ can store values entered by the user \n\uf0b7 \nvariable example \u2013 any data that is input into a program such as a date \n\uf0b7 \nconstants represent values that must stay the same throughout the execution of a program \n\uf0b7 \nconstant example \u2013 any value that does not change, such as Pi in mathematical formulae ","key":7.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":1,"Question":"(b) \n Name a variable that you used for Task 2. State the data type and purpose of this variable. \nExplain why you chose to use a variable rather than a constant.\nVariable  \nData type  \nPurpose  \nReason for use of a variable  \n","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"4(a) \nOne mark per mark point, max seven \nMP1 \ncorrect In column \nMP2 \ncorrect Logic column \nMP3 \ncorrect Test column \nMP4 \ncorrect Number column \nMP5 \ncorrect Store[Count] column \nMP6 \ncorrect Count and Limit columns \nMP7 \ncorrect Out and OUTPUT columns \nIn \nLogic \nTest \nNumber \nStore \n[Count] \nCount \nLimit \nOut \nOUTPUT \n0 ","key":8.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for Task 1, using either pseudocode, programming statements or a \nflowchart. Assume that the first part of Task 1, the storage and display of tile descriptions, \nprices per box and identification codes has already been done.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"1 \nTRUE ","key":9.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":1,"Question":"(d) \n Explain how you extended your program to complete Task 2. Any programming statements \nyou use in your answer must be fully explained.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"9 ","key":10.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":1,"Question":"(e) \n Explain how you could validate the input for percentage waste allowance in Task 3.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"FALSE ","key":11.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":2,"Question":"\nSection B\n2 \nDescribe the use of a subroutine in a program.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"TRUE ","key":12.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":3,"Question":"\n3 \nName the three types of loop structure used in pseudocode.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"5 ","key":13.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":4,"Question":"(a) \n4 \nThe following pseudocode algorithm uses nested IF statements.\nIF Response = 1\n  THEN \n    X \n X + Y\n  ELSE\n    IF Response = 2\n      THEN \n        X \n X \u2013 Y\n      ELSE\n        IF Response = 3\n          THEN \n            X \n X * Y\n          ELSE\n            IF Response = 4\n              THEN\n                X \n X \/ Y\n              ELSE\n                OUTPUT \"No response\"\n            ENDIF\n        ENDIF\n    ENDIF\nENDIF\n Name the type of statement demonstrated by the use of IF \u2026 THEN \u2026 ELSE \u2026 ENDIF\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"5 ","key":14.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":4,"Question":"(b) \n Re-write the pseudocode algorithm using a CASE statement.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"3 \nTRUE ","key":15.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":5,"Question":"\n5 \nThe algorithm performs an operation on the array named MyData\nDIV means integer division, so only the whole number part of the result is returned\ne.g. 7 DIV 2 returns a value of 3\nFirst \n 0\nLast \n 16\nFound \n FALSE\nINPUT UserIn\nWHILE (First <= Last) AND (Found = FALSE) DO\n  Middle \n (First + Last) DIV 2\n  IF MyData[Middle] = UserIn\n    THEN\n      Found \n TRUE\n    ELSE\n      IF UserIn < MyData[Middle]\n        THEN\n          Last \n Middle - 1\n        ELSE\n          First \n Middle + 1\n      ENDIF\n  ENDIF\nENDWHILE\nOUTPUT Found\nThis table shows the contents of the array: MyData e.g. MyData","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"8 \nFALSE ","key":16.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":6,"Question":" stores the value 5\nMyData\nIndex\n","Marks":"[0]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"TRUE ","key":17.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":7,"Question":" ","Marks":"[1]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"10 \nFALSE ","key":18.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":8,"Question":" ","Marks":"[2]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"TRUE ","key":19.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":9,"Question":" ","Marks":"[3]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"7 ","key":20.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":10,"Question":" ","Marks":"[4]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"7 ","key":21.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":11,"Question":" ","Marks":"[5]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"0 ","key":22.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":12,"Question":" ","Marks":"[6]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"1 ","key":23.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":13,"Question":" ","Marks":"[7]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"7 \n4(b) \nOne mark per mark point, max two \n\uf0b7 \nto find \/ output prime numbers \n\uf0b7 \n\u2026 store prime numbers in an array  ","key":24.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":14,"Question":" ","Marks":"[8]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"4(c) \nOne mark per mark point, max three \nMP1 \ninsert a WHILE loop \u2026 \/\/ pre-condition loop \nMP2 \n\u2026 after Input Number \nMP3 \n\u2026 with a condition to enter the loop Number < 3 \nMP4 \nan error message included within the loop to ask for a re-entry of Number \nMP5 \n\u2026with another input prompt for Number \nMP6 \nENDWHILE closes the loop and the program carries on from REPEAT in the original algorithm \nOR \nOne mark per mark point, max three \nMP1 \ninsert a REPEAT loop \u2026 \/\/ post-condition loop \nMP2 \n\u2026 before Input Number \nMP3 \na conditional statement should be placed after Input Number  \nMP4 \n\u2026to check if Number < 3 \nMP5 \nif the number entered is <3, an error message included within the loop to ask for a re-entry of Number \nMP6 \nUNTIL Number >= 3 closes the loop and the program carries on from REPEAT in the original algorithm ","key":25.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":15,"Question":" ","Marks":"[9]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"5 \nOne mark per mark point, max six \nMP1 \ninput box \nMP2 \ncorrect totalling using Total \nMP3 \ncorrect counting using Counter \nMP4 \ncorrect conditional statement for Counter \nMP5 \ncorrect calculation of Average \nMP6 \ncorrect outputs of Total and Average ","key":26.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":16,"Question":" ","Marks":"[10]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"Total \uf0ac Total + Number \nEND \nYes \nNo \nCounter \uf0ac Counter + 1 \nIS Counter = \n100? \nINPUT Number \nCounter \uf0ac 0 \nSTART \nTotal \uf0ac 0 \nOUTPUT Average \nOUTPUT Total \nAverage \uf0ac Total \/ Counter \n6(a) \nLarger ","key":27.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":17,"Question":" ","Marks":"[11]","Paper_No_Dropped":"0478_s22_ms_23.pdf","Answer":"6(b) \nOne mark per mark point, max three \n\uf0b7 \ncorrect fields correctly named and table names \n\uf0b7 \ncorrect sort and show box rows \n\uf0b7 \ncorrect search criteria \nField: PlanetName \nLarger \nYearLength \nTable: PLANETS \nPLANETS \nPLANETS \nSort: \nAscending \nShow: \n\uf0fe \n\uf06f \n\uf06f \n\uf06f \n\uf06f \nCriteria: \nYes \n>365 \nor: \n3 ","key":28.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":18,"Question":" ","Marks":"[12]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"1(a) \nOne mark for each correct line. \nProgram development life cycle description \n     Program development life cycle stage ","key":0.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":19,"Question":" ","Marks":"[13]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"1(b) \nOne mark for naming or describing each component part, max three \nFor example: \ninputs \/\/ what is put into the system \nprocesses \/\/ actions taken to achieve a result \noutputs \/\/ what is taken out of the system \nstorage \/\/ what needs to be kept for future use ","key":1.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":20,"Question":" ","Marks":"[14]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"identify the problem and its \nrequirements \ndevelop an algorithm to solve the \nproblem using structure diagrams, \nflowcharts or pseudocode \ndetect and fix the errors in the \nprogram \nwrite and implement the \ninstructions to solve the problem \nanalysis \ndesign \ntesting \nevaluation \ncoding ","key":2.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":21,"Question":" ","Marks":"[15]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"A ","key":3.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":22,"Question":" ","Marks":"[16]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"3(a) \nOne mark per mark point, max two \n\uf0b7 \nValidation is an automated check carried out by a computer \n\uf0b7 \n\u2026 to make sure the data entered is sensible\/acceptable\/reasonable ","key":4.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":23,"Question":"(a) \nValue\n2\n3\n5\n6\n8\n10\n12\n13\n14\n16\n18\n20\n25\n27\n29\n34\n36\n Complete the trace table for the input data: 10\nFirst\nLast\nUserIn\nMiddle\nFound\nOUTPUT\n","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"3(b) \nOne mark for each appropriate test data, max three \nOne mark for each correct accompanying reason, max three \nFor example: \nNormal \u2013 75 \nReason \u2013 the data lies within the required range and should be accepted \nAbnormal \u2013 Sixty \nReason \u2013 this is the wrong data type and should be rejected \nExtreme \u2013 200 \nReason \u2013 the highest value in the required range that should be accepted ","key":5.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":23,"Question":"(b) \n Describe the function being performed by the algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"4 \nOne mark per mark point, max four \nDIV, max two \n\uf0b7 To perform integer division \n\uf0b7 Meaning only the whole number part of the answer is retained \n\uf0b7 Example of DIV For example DIV(9,4) = 2 \nROUND, max two \n\uf0b7 To return a value rounded to a specified number of digits \/ decimal places \n\uf0b7 The result will either be rounded to the next highest or the next lowest value  \n\uf0b7 \u2026 depending on whether the value of the preceding digit is >=5 or <5 \n\uf0b7 Example of ROUND for example, ROUND(4.56, 1) = 4.6 ","key":6.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":24,"Question":"\n6 \nDraw four different flowchart symbols and describe how they are used in a program flowchart.\nFlowchart symbol\nDescription of use \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"5(a) \nOne mark per mark point, max four \n\uf0b7 \nLine 04 \/ IF Number < 0 \nshould be IF Number > 0 \n\uf0b7 \nLine 10 \/ Exit \uf0ac 1 \/\/ Line 01\/ Exit \uf0ac 1 and Line 02 \/ WHILE Exit <> 0 \nshould be Exit \uf0ac 0 \/\/ should be Exit \uf0ac 0 and WHILE Exit = 0 \n\uf0b7 \nLine 13 \/ ENDIF \nshould be ENDWHILE \n\uf0b7 \nLine 14 \/ OUTPUT \"The total value of your numbers is \", Number \nshould be OUTPUT \"The total value of your numbers is \", Total \nCorrect algorithm: \n01 Exit \uf0ac 1 \n02 WHILE Exit <> 0 DO \n03     INPUT Number \n04     IF Number > 0 \n05       THEN \n06         Total \uf0ac Total + Number \n07       ELSE \n08         IF Number = 0 \n09           THEN \n10             Exit \uf0ac 0 \n11         ENDIF \n12     ENDIF \n13 ENDWHILE \n14 OUTPUT \"The total value of your numbers is \", Total ","key":7.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":25,"Question":"(a) \nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of the Cambridge Assessment Group. Cambridge Assessment is the brand name of the University of \nCambridge Local Examinations Syndicate (UCLES), which itself is a department of the University of Cambridge.\n7 \nA teacher has decided to use a database table as her mark book for her Computer Science class, \nwhich she has called MARKBOOK. For each student, the following data will be recorded: first \nname, last name, their year 10 test score and their year 11 test score. The class has 32 students.\n State the number of fields and records required for this database.\nNumber of Fields  \nNumber of Records  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"5(b) \nOne mark per mark point, max four \n\uf0b7 Initialise a new (counting) variable \n\uf0b7 \n\u2026 Count \uf0ac 0 \/\/ to count the acceptable numbers  \n\uf0b7 \nInsert a counting statement between lines 05 and 07  \n\uf0b7 \n\u2026 Count \uf0ac Count + 1   \n\uf0b7 \nAdd a new output after the loop\/after line 13 \/ at the end (of the program) \n\uf0b7 \n\u2026 OUTPUT Count ","key":8.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":25,"Question":"(b) \n The data in MARKBOOK is stored under category headings: LastName, FirstName, \nY10TestScore and Y11TestScore.\nState, with a reason, whether any of these headings would be suitable as a primary key.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"6 \nOne mark for each correct feature, max two \nOne mark for each correct accompanying reason, max two \nFor example: \nMeaningful identifiers \u2013 to enable the programmer (or future programmers) to easily recognize the purpose of a variable \/ \narray \/ constant \/\/ to enable easy tracking of a variable \/ constant \/ array through the program  \nUse of comments \u2013 to annotate each section of a program so that a programmer can find specific sections \/ so that the \nprogrammer knows the purpose of that section of code \nProcedures and functions \u2013 to make programs modular and easier to update \/ add functionality ","key":9.0},{"Paper_No":"0478_w19_qp_23.pdf","Question_No":25,"Question":"(c) \n Complete the query-by-example grid to only display the first name, last name and year 10 \ntest score of each student who achieved 50 or more in their year 10 test. The output should \nbe in test score order with the highest marks at the top of the list.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"7(a) \nOne mark per correct column, max four \nPointer \nLetter \nChoice \nOUTPUT ","key":10.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA car insurance system allows customers to check how much it would cost to buy insurance for a car for \ntwelve months. The starting price of the car insurance is $500. The actual price a customer pays for the car \ninsurance changes depending upon this information:\n\u2022 \nengine size of car\n\u2022 \nvalue of car\n\u2022 \nwhere car is kept overnight\n\u2022 \nnumber of kilometres (km) driven a year\n\u2022 \nage of driver\n\u2022 \nyears insured without an insurance claim\nEngine \nsize in \nlitres\nPrice \nchange\nValue in \n$1000\nPrice \nchange\nKept \nover-\nnight\nPrice \nchange\n1000 km \ndriven a \nyear\nPrice \nchange\nAge of \ndriver\nPrice \nchange\nYears \nwithout \nclaim\nPrice \nchange\n<=0.5\n\u20135%\n<0.5\n\u20135%\nGarage\n\u20135%\n<5\n\u20135%\n18\u201320\n+100%\n1\n\u201310%\n>0.5 to 1.0 \n0%\n0.5 to 2\n0%\nDrive\n0%\n5 to 20\n0%\n21\u201325\n+50%\n2\n\u201320%\n>1.0 to 2.5\n+5%\n>2 to 10\n+5%\nStreet\n+5%\n>20\n+5%\n26\u201330\n+25%\n3\n\u201330%\n>2.5\n+10%\n>10 to 20\n+10%\n31\u201370\n0%\n4\n\u201340%\n>20\n+15%\n71\u201380\n+10%\n5\n\u201350%\n>80\n+20%\n6\n\u201360%\n>6\n\u201370%\nTable 1\nTable 2\nThe actual price is calculated by:\n\u2022 \nfinding the total of the percentage changes for the customer using Table 1\n\u2022 \napplying this total percentage change to the starting price of the car insurance\n\u2022 \napplying the years without claim discount percentage for the customer using Table 2.\nWrite and test a program or programs to calculate the price for a customer to insure a car.\n\u2022 \n Your program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Calculate the price to insure a car.\nWrite a program to obtain the required information from a customer and calculate the price to insure the car. \nDisplay the price to insure the car. Display the total percentage change calculated from Table 1, and the \nyears without claim discount percentage from Table 2 separately.\nTask 2 \u2013 New customer discount.\nExtend Task 1 to include an additional discount of 10% off the price to any new customer who is aged \nbetween 26 and 70 inclusive, who also has 2 or more years without a claim. Display the amount of money \nthis would save and the new price.\nTask 3 \u2013 Adding an extra driver.\nCustomers can add one extra driver. The age of the extra driver may increase the price. The new price is \ncalculated by applying the percentage price change for the age of the extra driver from Table 1 to the price. \nExtend Task 2 to calculate and display the new price including an extra driver if required.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n Identify one array that you could have used for Task 1. Give the data type and state the use \nof the array.\nArray  \nData type  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"F ","key":11.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":1,"Question":"(b) \n Data entered by a customer includes the age of the driver in Task 1.\nIdentify two different validation checks you could use for the age of the driver. \nJustify your choice for each one.\nValidation check 1  \nJustification  \nValidation check 2  \nJustification  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"3 ","key":12.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for Task 2, using either pseudocode, programming statements or a \nflowchart. Assume that Task 1 has been completed.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"5 ","key":13.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":1,"Question":"(d) \n (i) Explain how your program completed Task 3. Assume that Task 2 has been completed.\n Any programming statements used in your answer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"Letter F is represented by Foxtrot \nAnother Letter? (Y or N) \nY ","key":14.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":1,"Question":"(ii) \n The car insurance system needs updating to record the percentage of customers who \nbought car insurance after obtaining a price to insure a car. Describe the changes \nrequired to your program.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"D ","key":15.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":2,"Question":"\nSection B\n2 \nDescribe the purpose of variables and constants. Use an example of each in your answer.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"3 ","key":16.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":3,"Question":"(a) \n3 \nThis pseudocode algorithm calculates the weight and number of bags in a load of firewood. The \nweight in kilograms of each bag is input. The algorithm finishes when either 50 bags have been \nweighed, or as soon as the total weight exceeds 1000 kilograms. Only then are the total weight \nand the number of bags in the load output.\n01  TotalWeight \u2190 1000\n02  BagCount \u2190 0\n03  MaxBag \u2190 50\n04  MaxWeight \u2190 1000\n05  REPEAT\n06      OUTPUT \"Please Enter weight of bag\"\n07      INPUT Weight\n08      TotalWeight \u2190 TotalWeight + Weight\n09      BagCount \u2190 BagCount + 1\n10      OUTPUT \"Number of bags in the load is \", BagCount\n11  UNTIL TotalWeight > MaxWeight AND BagCount >= MaxBag\n12  OUTPUT \"Total weight of the load is \", MaxWeight\n Give the line number(s) from the algorithm of:\nan assignment statement  \na loop  \na counting statement  \na totalling statement  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"Letter D is represented by Delta \nAnother Letter? (Y or N) \nN ","key":17.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":3,"Question":"(b) \n Give the line numbers of the four errors in this pseudocode. Suggest a correction for each \nerror.\nError 1 line number  \nCorrection  \nError 2 line number  \nCorrection  \nError 3 line number  \nCorrection  \nError 4 line number  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"7(b) \n(Linear) search ","key":18.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":3,"Question":"(c) \n Explain how you could extend the algorithm to calculate and display the average weight of a \nbag of firewood in the load.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"7(c) \nOne mark per mark point, max two \n\uf0b7 \nThe algorithm would not stop \n\uf0b7 \n\u2026 because it would not have found the item it was seeking  \nOr \n\uf0b7 \nThe array would run out of values after the pointer reached 13 \n\uf0b7 \nthe algorithm will crash ","key":19.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":4,"Question":"(a) \n4 \nThis flowchart inputs five numbers and performs a calculation.\nThe predefined function MOD finds the remainder from integer division for example\nR \u2190 25 MOD 11 gives R a value of 3\nSTART\nEND\nIS\nV = 0 ?\nIS\nB = Z ?\nA \u2190 V*2 + W*3 + X*4 + Y*5\nINPUT\nV,W,X,Y,Z\nOUTPUT\n\"Invalid\"\nOUTPUT\n\"Valid\"\nNo\nNo\nYes\nYes\nB \u2190 A MOD 11\n Complete the trace table for this set of input data:\n5, 4, 6, 2, 1, 9, 3, 2, 1, 6, 7, 6, 1, 5, 1, 0, 0, 0, 0, 0\nV\nW\nX\nY\nZ\nA\nB\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"8(a) \nOne mark per mark point, max three \n\uf0b7 Storing string in Phrase \n\uf0b7 Correct use of LENGTH function \n\uf0b7 Correct use of UCASE function  \n\uf0b7 Correct outputs of LENGTH and UCASE \nFor example: \nPhrase \uf0ac \"The beginning is the most important part\" \nOUTPUT LENGTH(Phrase) \nOUTPUT UCASE(Phrase) ","key":20.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":4,"Question":"(b) \n Describe the purpose of this flowchart.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"8(b) \nOne mark for each correct line, max two \n40 \nTHE BEGINNING IS THE MOST IMPORTANT PART ","key":21.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nA database table, AIRLINE, stores data used to compare airlines.\nCode\nAirline name\nNumber of \nemployees\nNumber of \ncountries\nHead office\nShare price\nFJ\nFastJet\n60000\n30\nEurope\n514.50\nMA\nMurphyAir\n35000\n8\nEurope\n152.67\nJS\nJetSeven\n45000\n22\nAsia\n257.44\nK3\nKoala3\n22000\n11\nAustralia\n501.21\nNS\nNorthState\n30000\n4\nAmerica\n108.22\nSS\nSouthState\n30000\n4\nAmerica\n126.35\nBJ\nBlueJet\n15000\n7\nAfrica\n215.45\nSK\nSkyKing\n32000\n27\nEurope\n506.12\nPF\nPandaFly\n50000\n35\nAsia\n317.88\n State how many fields and how many records are shown in the AIRLINE table.\nNumber of Fields  \nNumber of Records  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"9(a) \nOne mark for each correct gate, with the correct input(s) as shown. ","key":22.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":5,"Question":"(b) \n Show the output that would be given by this query-by-example.\nField: Airline name\nNumber of employees\nHead office\nShare price\nTable: AIRLINE\nAIRLINE\nAIRLINE\nAIRLINE\nSort:\nShow:\n3\n3\nCriteria:\n< 35000\n> 500.00\nor:\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"9(b) \nFour marks for eight correct outputs. \nThree marks for six or seven correct outputs. \nTwo marks for four or five correct outputs. \nOne mark for two or three correct outputs \nA \nB \nC \nZ \n0 \n0 \n0 \n0 \n0 \n0 ","key":23.0},{"Paper_No":"0478_w20_qp_21.pdf","Question_No":5,"Question":"(c) \n Complete the query-by-example grid to find every airline with a head office in Asia or Africa, \nand number of countries greater than 4. Only show the airline name and number of countries.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"1 \n0 ","key":24.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":1,"Question":"(s) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nAn online computer shop sells customised personal computers. Every computer sold includes a basic set of \ncomponents costing $200 and additional items can be added from the table:\nCategory\nItem code\nDescription\nPrice ($)\nCase\nA1\nCompact\n75.00\nCase\nA2\nTower\n150.00\nRAM\nB1\n8 GB\n79.99\nRAM\nB2\n16 GB\n149.99\nRAM\nB3\n32 GB\n299.99\nMain Hard Disk Drive\nC1\n1 TB HDD\n49.99\nMain Hard Disk Drive\nC2\n2 TB HDD\n89.99\nMain Hard Disk Drive\nC3\n4 TB HDD\n129.99\nSolid State Drive\nD1\n240 GB SSD\n59.99\nSolid State Drive\nD2\n480 GB SSD\n119.99\nSecond Hard Disk Drive\nE1\n1 TB HDD\n49.99\nSecond Hard Disk Drive\nE2\n2 TB HDD\n89.99\nSecond Hard Disk Drive\nE3\n4 TB HDD\n129.99\nOptical Drive\nF1\nDVD\/Blu-Ray Player\n50.00\nOptical Drive\nF2\nDVD\/Blu-Ray Re-writer\n100.00\nOperating System\nG1\nStandard Version\n100.00\nOperating System\nG2\nProfessional Version\n175.00\nAs well as the basic set of components every computer must include one case, one RAM and one Main Hard \nDisk Drive from the table.\nA computer is supplied with or without an Operating System.\nWrite and test a program or programs for the online computer shop.\n\u2022 \n Your program or programs must include appropriate prompts for the entry of data; data must be validated \non entry.\n\u2022 \n Error messages and other output need to be set out clearly and understandably.\n\u2022 \nAll arrays, variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Setting up the system and ordering the main items.\nWrite a program to:\n\u2022 \nuse arrays to store the item code, description and price\n\u2022 \nallow a customer to choose one case, one RAM and one Main Hard Disk Drive\n\u2022 \ncalculate the price of the computer using the cost of the chosen items and the basic set of components\n\u2022 \nstore and output the chosen items and the price of the computer.\nTask 2 \u2013 Ordering additional items.\nExtend TASK 1 to:\n\u2022 \n allow a customer to choose whether to purchase any items from the other categories \u2013 if so, which \nitem\n\u2022 \nupdate the price of the computer\n\u2022 \nstore and output the additional items and the new price of the computer.\nTask 3 \u2013 Offering discounts.\nExtend TASK 2 to:\n\u2022 \napply a 5% discount to the price of the computer if the customer has bought only one additional item\n\u2022 \n apply a 10% discount to the price of the computer if the customer has bought two or more additional \nitems\n\u2022 \noutput the amount of money saved and the new price of the computer after the discount.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n(a) (i) Identify one array you could have used for Task 1 and state its purpose.\nArray  \nPurpose  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"0 ","key":25.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":1,"Question":"(ii) \n Identify one variable you could have used for Task 2 and state its purpose.\nVariable  \nPurpose  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"0 ","key":26.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":1,"Question":"(iii) \n Identify one constant you could have used for Task 3 and state its purpose.\nConstant  \nPurpose  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"1 \n0 ","key":27.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":1,"Question":"(b) \n  Explain the benefits of storing Price as a real data type.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"0 \n0 \n0 ","key":28.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":1,"Question":"(c) \n  Write an algorithm to show how you completed Task 1, using either pseudocode, \nprogramming statements or a flowchart. It is not necessary to show initialisation or setting up \nof arrays in your answer.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"0 ","key":29.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how your program completes Task 3. Any programming statements used in your \nanswer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"0 ","key":30.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":1,"Question":"(e) \n Describe how you could alter your program to allow more than one computer to be bought.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"1 \n0 ","key":31.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":2,"Question":"\nSection B\n2 \nTick (3) one box in each row to identify if the statement about subroutines is true or false.\nStatement\ntrue\n(3)\nfalse\n(3)\nA subroutine is called from within a program.\nA subroutine is not a complete program.\nA subroutine is a self-contained piece of code.\nA subroutine must return a value to the code from which it was called.\n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"1 ","key":32.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":3,"Question":"\n3 \nThis pseudocode algorithm is used as a validation check.\nPRINT \"Input a number from 1 to 5000\"\nREPEAT\n  INPUT Number\n  IF Number < 1 OR Number > 5000\n    THEN\n      PRINT \"Invalid number, please try again\"\n  ENDIF\nUNTIL Number >= 1 AND Number <= 5000\nPRINT Number, \" is within the correct range\"\nIdentify three different types of test data. For each type, give an example of the test data you \nwould use to test this algorithm and state a reason for your choice of test.\nType of test data 1  \nTest data \nReason  \nType of test data 2  \nTest data \nReason  \nType of test data 3  \nTest data \nReason  \n","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"1 \n0 ","key":33.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":4,"Question":"\n4 \nThis pseudocode algorithm allows 5000 numbers to be entered and stored in an array called \nNumber.\nFOR Count \n 1 TO 5000\n  INPUT Number[Count]\nNEXT Count\nExtend and re-write the algorithm using pseudocode to also count and output how many of the \nnumbers stored in the array are greater than 500, using the variable Higher. Only output Higher \nonce with an appropriate message.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"10(a) \nOne mark for the correct field name \nOne mark for the correct reason \nFor example: \nTVCode \nEach entry in this field is a unique identifier ","key":34.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":5,"Question":"(a) \n5 \nThis pseudocode represents an algorithm.\nREPEAT\n  Flag \n 0\n  FOR Count \n 0 to 3\n    IF Num[Count] < Num[Count + 1]\n      THEN\n        Store \n Num[Count]\n        Num[Count] \n Num[Count + 1]\n        Num[Count + 1] \n Store\n        Flag \n 1\n    ENDIF\n  NEXT Count\nUNTIL Flag = 0\n The contents of the array at the start of the algorithm are:\nNum","Marks":"[0]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"10(b) \nTwo marks for four correct answers. \nOne mark for two or three correct answers. \nField \nData type \nTVCode \nText  \nScreenSize Integer  \nSmartTV \nBoolean  \nPrice$ \nReal  ","key":35.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":6,"Question":"\nNum","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"10(c) \nOne mark for each correct answer \nScreenSize \nPrice$ \nFROM \nYES \nCorrect code: \nSELECT TVCode, ScreenSize, Price$ \nFROM TVRange \nWHERE SmartTV = YES; ","key":36.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":7,"Question":"\nNum","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"11 \nRead the whole answer: \nCheck if each requirement listed below has been met. Requirements may be met using a suitable built-in function from the \nprogramming language used (Python, VB.NET or Java). \nOn place a SEEN mark if requirement met, cross if no attempt seen, omission mark and\/or comment if partially met (see \nmarked scripts). \nUse the tables for AO2 and AO3 below to award a mark in a suitable band using a best fit approach, then add up the total: \n\uf0b7 AO2 (maximum 9 marks) \n\uf0b7 AO3 (maximum 6 marks) \nData structures required: \nThe names underlined must match those given in the scenario: \nArrays or lists Days[], Readings[], AverageTemp[]  \nVariables \nWeekLoop, DayLoop, InTemp, TotalDayTemp, TotalWeekTemp, AverageWeekTemp \nRequirements (techniques): \nR1 Input and store hourly temperatures and validation of input temperatures for each day (with prompts, range check and \n(nested)iteration) \nR2 Calculate, round to one decimal place and store daily average temperatures and calculate the weekly average \ntemperature rounded to one decimal place (iteration, totalling and rounding) \nR3 Convert all average temperatures to Fahrenheit (to one decimal place) and output the average temperatures in both \nCelsius and Fahrenheit. Output with appropriate messages. (output and rounding) ","key":37.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":8,"Question":"\nNum","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"11 \nExample 15 mark answer in pseudocode \n\/\/ meaningful identifiers and appropriate data structures for  \n\/\/ all data required \nDECLARE Days : ARRAY[1:7] OF STRING \nDECLARE Readings : ARRAY[1:7, 1:24] OF REAL \nDECLARE AverageTemp : ARRAY[1:7] OF REAL \nDECLARE WeekLoop : INTEGER \nDECLARE DayLoop : INTEGER \nDECLARE InTemp : REAL \nDECLARE TotalDayTemp : REAL \nDECLARE TotalWeekTemp : REAL \nDECLARE AverageWeekTemp : REAL \n\/\/ initial population of Days[] array \n\/\/ input and a loop are also acceptable \nDays[1] \uf0ac \"Sunday\" \nDays[2] \uf0ac \"Monday\" \nDays[3] \uf0ac \"Tuesday\" \nDays[4] \uf0ac \"Wednesday\" \nDays[5] \uf0ac \"Thursday\" \nDays[6] \uf0ac \"Friday\" \nDays[7] \uf0ac \"Saturday\" \n\/\/ input temperatures inside nested loop \nFOR WeekLoop \uf0ac 1 TO 7 \n    TotalDayTemp \uf0ac 0 \n    FOR DayLoop \uf0ac 1 TO 24 \n        OUTPUT \"Enter temperature \", DayLoop, \" for \", Days[WeekLoop] ","key":38.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":9,"Question":"\nNum","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_21.pdf","Answer":"        INPUT InTemp \n\/\/ validation of input for between -20 and +50 inclusive \n        WHILE InTemp < -20.0 OR InTemp > 50.0 DO \n            OUTPUT \"Your temperature must be between -20.0 and +50.0 inclusive. Please try \n                    again\" \n            INPUT InTemp \n        ENDWHILE \n        Readings[WeekLoop, DayLoop] \uf0ac InTemp \n\/\/ totalling of temperatures during the day \n        TotalDayTemp \uf0ac TotalDayTemp + ROUND(InTemp, 1) \n    NEXT DayLoop \n\/\/ average temperature for the day \n    AverageTemp[WeekLoop] \uf0ac ROUND(TotalDayTemp \/ 24,1) \nNEXT WeekLoop \n\/\/ calculate the average temperature for the week \nTotalWeekTemp \uf0ac 0 \nFOR WeekLoop \uf0ac 1 TO 7 \n    TotalWeekTemp \uf0ac TotalWeekTemp + AverageTemp[WeekLoop] \nNEXT WeekLoop \nAverageWeekTemp \uf0ac ROUND(TotalWeekTemp \/ 7,1) \n\/\/ outputs in Celsius and Fahrenheit \nFOR WeekLoop \uf0ac 1 TO 7 \n    OUTPUT \"The average temperature on \", Days[WeekLoop], \" was \", AverageTemp[WeekLoop], \" \n            Celsius and \",  \n           ROUND(AverageWeekTemp * 9 \/ 5 + 32), 1, \" Fahrenheit\" \nNEXT WeekLoop \nOUTPUT \"The average temperature for the week was \",  \n       AverageWeekTemp,\" Celsius and \", ROUND(AverageWeekTemp * 9 \/ 5 + 32, 1),\" \nFahrenheit\" \nMarking Instructions in italics \nAO2:  Apply knowledge and understanding of the principles and concepts of computer science to a given context, including the \nanalysis and design of computational or programming problems \n0 \n1\u20133 \n4\u20136 \n7\u20139 \nNo creditable \nresponse. \nAt least one programming technique has \nbeen used. \nAny use of selection, iteration, counting, \ntotalling, input and output. \nSome programming techniques used are \nappropriate to the problem. \nMore than one technique seen applied \nto the scenario, check the list of \ntechniques needed. \nThe range of programming techniques \nused is appropriate to the problem.   \nAll criteria stated for the scenario have \nbeen covered by the use of appropriate \nprogramming techniques, check the list \nof techniques needed. \nSome data has been stored but not \nappropriately. \nAny use of variables or arrays or other \nlanguage dependent data structures e.g. \nPython lists. \nSome of the data structures chosen are \nappropriate and store some of the data \nrequired.   \nMore than one data structure used to \nstore data required by the scenario.  \nThe data structures chosen are \nappropriate and store all the data \nrequired. \nThe data structures used store all the \ndata required by the scenario. \nMarking Instructions in italics \nAO3:  Provide solutions to problems by:  \n\uf0b7 \nevaluating computer systems \n\uf0b7 \nmaking reasoned judgements \n\uf0b7 \npresenting conclusions \n0 \n1\u20132 \n3\u20134 \n5\u20136 \nNo creditable \nresponse. \nProgram seen without relevant \ncomments. \nProgram seen with some relevant \ncomment(s). \nThe program has been fully commented. \nSome identifier names used are \nappropriate. \nSome of the data structures used have \nmeaningful names. \nThe majority of identifiers used are \nappropriately named. \nMost of the data structures used have \nmeaningful names. \nSuitable identifiers with names \nmeaningful to their purpose have been \nused throughout. \nAll of the data structures used have \nmeaningful names. \nThe solution is illogical. \nThe solution contains parts that may be \nillogical. \nThe program is in a logical order. \nThe solution is inaccurate in many \nplaces. \nSolution contains few lines of code with \nerrors that attempt to perform a task \ngiven in the scenario. \nThe solution contains parts that are \ninaccurate. \nSolution contains lines of code with \nsome errors that logically perform tasks \ngiven in the scenario. Ignore minor \nsyntax errors. \nThe solution is accurate. \nSolution logically performs all the tasks \ngiven in the scenario. Ignore minor \nsyntax errors. \nThe solution attempts at least one of the \nrequirements. \nSolution contains lines of code that \nattempt at least one task given in the \nscenario. \nThe solution meets most of the \nrequirements. \nSolution contains lines of code that \nperform most tasks given in the \nscenario. \nThe solution meets all the requirements \ngiven in the question. \nSolution performs all the tasks given in \nthe scenario. ","key":39.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":10,"Question":"\n45\n56\n30\n12\n15\nComplete the trace table for the algorithm using the data given in the array.\nFlag\nCount\nNum","Marks":"[0]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. ","key":0.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":11,"Question":"\nNum","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"A ","key":1.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":12,"Question":"\nNum","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"2 \nOne mark for each correct line \n               Logic gate   \n                          Standard symbol ","key":2.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":13,"Question":"\nNum","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"3 \nOne mark for each correct answer \n\uf0b7 \nstructure diagram \/ chart  \n\uf0b7 \nflowchart \n\uf0b7 \npseudocode ","key":3.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":14,"Question":"\nNum","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"OR \nNAND \nNOT \nAND \n4(a) \nOne mark for each point (max three). \n\uf0b7 \nrange check with acceptable values is (greater than) zero and less than 1000  \n\uf0b7 \npresence check to ensure the program will not continue until a value has been entered \n\uf0b7 \ntype\/character check to ensure that a number is entered \n\uf0b7 \nlength check to ensure there are no more than 3 digits entered ","key":4.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":15,"Question":"\nStore\n45\n56\n30\n12\n15\n","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"4(b)(i) \nTo verify the data \/ for verification \/ as a verification check \/\/ to make sure that no changes are made to the data on entry ","key":5.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":15,"Question":"(b) \n Describe the purpose of the algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"4(b)(ii) \nOne mark for each point (max three). \n\uf0b7 \nuse of iteration  \n\uf0b7 \nuse of two inputs  \n\uf0b7 \nto check that the two inputs are the same \/ different \n\uf0b7 \nuse of the given variable Measurement  \nFor example \nREPEAT \n    OUTPUT \"Please enter measurement \" \n    INPUT Measurement \n    OUTPUT \"Please re-enter measurement \" \n    INPUT MeasurementCheck \nUNTIL Measurement = MeasurementCheck ","key":6.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":16,"Question":"\n6 \nDraw a flowchart symbol to represent each of the following:\nInput\/Output\nDecision\n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"5 \nDue to an issue with Question 5, the question has been removed from the question paper. ","key":7.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":17,"Question":"(a) \nQuestion 7 starts on Page 12.\nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of the Cambridge Assessment Group. Cambridge Assessment is the brand name of the University of \nCambridge Local Examinations Syndicate (UCLES), which itself is a department of the University of Cambridge.\n7 \nThe table AUDIOPARTS stores the part number, description, cost and quantity in stock of the \nitems sold by a music shop.\nPartNum\nDescription\nCost\nQuantity\nA01\nCompact Amplifier Case\n50.00\n15\nA02\nDeluxe Amplifier Case\n75.00\n1\nA03\nAmplifier Standard\n79.99\n48\nA04\nAmplifier Midrange\n149.99\n50\nA05\nAmplifier Megablaster\n299.99\n48\nS01\nTweeter\n59.99\n10\nS02\nMidrange Woofer\n99.99\n0\nS03\nSubwoofer\n139.99\n16\nS04\nTower Speaker Basic\n159.99\n25\nS05\nTower Speaker Skyscraper\n219.99\n9\nS06\nCentre Speaker\n149.99\n25\nS07\nSoundbar \n89.99\n2\nS20\nSoundbar \n129.99\n0\nS21\nCeiling Surround Speaker\n75.00\n15\nS22\nCeiling Full Range Speaker\n100.00\n1\nS25\nSurround Speaker\n100.00\n60\nT19\nSpeaker Stands (Pair)\n75.00\n60\n State the number of records in the table AUDIOPARTS\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"One mark for each feature and one mark for corresponding example (max six) \n\uf0b7 \nensuring that all identifiers have meaningful names \u2026 \n\uf0b7 \n\u2026 example using Total to store a running total \n\uf0b7 \nusing comments to explain how the program works \u2026 \n\uf0b7 \n\u2026 example \/\/ all values are zeroed before the next calculation \n\uf0b7 \nusing procedures and functions for the tasks within a program \u2026 \n\uf0b7 \n\u2026 example CalculateInterest(Deposit, Rate) ","key":8.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":17,"Question":"(b) \n Identify the field that is most suitable to be a primary key and give a reason for your choice.\nFieldname  \nReason  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"7(a) \n\uf0b7 \n07 \n\uf0b7 \n04\/12 or 16\/18  \n\uf0b7 \n02\/20 ","key":9.0},{"Paper_No":"0478_w20_qp_22.pdf","Question_No":17,"Question":"(c) \n Complete the query-by-example grid to show the items where the quantity in stock is fewer \nthan 10. Show all the fields from the database table in descending order of cost.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"7(b) \nOne mark for each error identified and correction \n\uf0b7 \nLine 07 Total \uf0ac Total + Number * Counter  \nshould be Total \uf0ac Total + Number[Counter] * Counter  \n\uf0b7 \nLine 08 IF Number[Counter] = 0  \nshould be IF Number[Counter] = -1 \/\/ should be IF Number[Counter] < 0 \n\uf0b7 \nLine 16 FOR Counter \uf0ac 0 TO 5  \nshould be FOR Counter \uf0ac 1 TO 5 ","key":10.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the tasks before the examination to \nanswer Question 1.\nPre-release material\nA baguette ordering service allows customers to order filled baguettes. There are two sizes of \nbaguette: 30 cm and 15 cm. Baguettes are available as white, brown or seeded bread. Baguettes \nhave one filling and can have up to three salad items added.\nFilling and salad choices are:\nFilling\nSalad\nBeef\nChicken\nCheese\nEgg\nTuna\nTurkey\nLettuce\nTomato\nSweetcorn\nCucumber\nPeppers\nCustomers choose their baguette options. They then confirm their order, alter their choices or choose \nnot to proceed.\nEach day the ordering service calculates the number of each:\n\u2022 \nsize of baguette sold\n\u2022 \ntype of bread (white, brown or seeded) sold\n\u2022 \nfilling sold.\nWrite and test a program or programs for the baguette ordering service.\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 Ordering.\nCustomers are given choices on size, type of bread, filling and salad items as shown. Only valid \nchoices can be accepted. The customer is asked to confirm their order, alter their choices or choose \nnot to proceed. If the customer confirms their order they are given a unique order number. Display \nthe baguette ordered and the order number.\nTask 2 \u2013 Recording the choices.\nExtend TASK 1 to record totals for the size, types of bread and fillings sold that day and calculate \nthe total number of baguettes sold that day.\nTask 3 \u2013 Finding the most and least popular baguette fillings.\nUsing your results from TASK 2, display the most popular and least popular fillings as a percentage \nof the total number of baguettes sold that day.\n1  \nAll variables, constants and other identifiers must have meaningful names.\n Identify one constant and identify one variable that you could have used for Task 1. Give the \nvalue that would be assigned to the constant. Give the data type for the variable. State what \neach one could be used for.\nConstant  \nValue  \nUse  \nVariable  \nData type  \nUse  \n","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"7(c) \nOne mark for place in algorithm (max one) \n\uf0b7 \naround lines 05 and 06  \n\uf0b7 \nline 07  \n\uf0b7 \n(immediately) after the input of the number \nThree marks pseudocode \nOne mark for each point (max three) \n\uf0b7 \nUse of REPEAT \u2026 UNTIL \/\/ any working loop structure \n\uf0b7 \ncheck for >0 \/\/ >=0 \n\uf0b7 \ncheck for <10 \/\/ >9  \n\uf0b7 \ncheck for whole number \n\uf0b7 \ncheck for -1 \n\uf0b7 \ncheck for length of digit <> 1 \nExample \nREPEAT \n    OUTPUT \"Enter a digit \" \n    INPUT Number[Counter] \nUNTIL Number[Counter] = Round(Number[Counter],0) AND ((Number[Counter] = -1) OR  \n     (Number[Counter] > 0 AND Number[Counter] < 10)) ","key":11.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":1,"Question":"(b) \n (i) Write an algorithm to allow a customer to choose the filling and salad items for their \nbaguette (part of Task 1), using either pseudocode, programming statements or a \nflowchart. Your algorithm must only include this part of Task 1.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"8 \n4 marks for 8 correct outputs \n3 marks for 6\/7 correct outputs \n2 marks for 4\/5 correct outputs \n1 mark for 2\/3 correct outputs   \nA \nB \nC \nX \n0 \n0 \n0 \n0 \n0 \n0 ","key":12.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":1,"Question":"(ii) \n Explain how your algorithm in part (b)(i) ensured that only valid choices were accepted \nfor the filling.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"0 \n0 ","key":13.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":1,"Question":"(c) \n Explain how you would need to change your program for Task 1 if there were three sizes of \nbaguette to choose from (15 cm, 20 cm and 30 cm).\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"0 \n0 \n0 ","key":14.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":1,"Question":"(d) \n Explain how your program completed Task 3. Assume that Task 2 has been completed.\nAny programming statements used in your answer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"1 \n0 ","key":15.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":2,"Question":"(a) \nSection B starts on Page 8.\nSection B\n2  \nAn algorithm has been written in pseudocode to check the temperature readings taken from a \nfreezer are within the range \u201318 degrees to \u201325 degrees inclusive.\nThe algorithm counts the number of times that the temperature reading is below \u201325 degrees and \nthe number of times that the temperature reading is above \u201318 degrees. \nAn engineer is called if there are more than 10 temperature readings below \u201325 degrees.\nAn alarm sounds if there are more than 5 temperature readings above \u201318 degrees.\n01  TooHot \n 0\n02  TooCold \n 1000\n03  REPEAT\n04      OUTPUT \"Please enter temperature\"\n05      INPUT Temperature\n06      IF Temperature < -25\n07        THEN\n08          TooCold \n TooCold \u2013 1\n09      ENDIF\n10      IF Temperature > -18\n11        THEN\n12          TooHot \n TooHot + 1\n13      ENDIF\n14  UNTIL TooHot > 5 OR TooCold > 10\n15  IF TooHot < 5\n16    THEN\n17      INPUT \"Alarm!!\"\n18  ENDIF\n19  IF TooCold > 10\n20    THEN\n21      OUTPUT \"Call the Engineer\"\n22  ENDIF\n Give the line number(s) from the algorithm of:\nan assignment statement  \na loop  \na counting statement  \na selection statement  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"0 \n0 \n0 ","key":16.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":2,"Question":"(b) \n Give line numbers where the four errors are to be found in the pseudocode. Suggest a \ncorrection for each error.\nError 1 line number  \nCorrection  \nError 2 line number  \nCorrection  \nError 3 line number  \nCorrection  \nError 4 line number  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"0 ","key":17.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":2,"Question":"(c) \n Explain how you could extend the algorithm to count the number of times the temperature \nreadings are within the range \u201318 degrees to \u201325 degrees inclusive.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"1 ","key":18.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":3,"Question":"\n3 \nFour programming concepts and five descriptions are shown.\nDraw a line to connect each Programming concept to its correct Description. Not all Descriptions \nwill be connected to a Programming concept.\nProgramming concept \nDescription\nValidation\nA subroutine that does not have to \nreturn a value\nAn automatic check to ensure that data \ninput is reasonable and sensible\nA subroutine that always returns \na value\nAn overview of a program or subroutine\nA check to ensure that data input \nmatches the original\nVerification\nProcedure \nFunction\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"1 \n0 \n0 ","key":19.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":4,"Question":"(a) \nQuestion 4 starts on Page 12.\n4 \nThis flowchart represents an algorithm that allows the input of two numbers and performs a \ncalculation. \nThe predefined function MOD finds the remainder from integer division for example X \n 8 MOD 5 \ngives X a value of 3.\nSTART\nA   Y MOD Z\nEND\nIS\nY = 0 ?\nIS\nY > Z ?\nIS\nA = 0 ?\nA   Z MOD Y\nINPUT\nY,Z\nOUTPUT\n\"Invalid\"\nOUTPUT\n\"Valid\"\nNo\nNo\nNo\nYes\nYes\nYes\n Complete a trace table for this set of input data:\n11, 4, 6, 2, 3, 9, 3, 2, 2, 6, 0, 0, 1, 1\nY\nZ\nA\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"1 ","key":20.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":4,"Question":"(b) \n Explain the purpose of this algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"0 ","key":21.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":5,"Question":"(a) \n5 \nA marine wildlife rescue centre uses a database table, MARINE, to keep records of its creatures.\nCreature\nClass\nQuantity \nReady for release\nOffspring\nManta Ray\nFish\n3\nY\nN\nShort-tailed Albatross\nBird\n4\nY\nN\nEmperor Penguin\nBird\n50\nY\nY\nBluefin Tuna\nFish\n2\nN\nN\nManatee\nMammal\n4\nY\nN\nHawksbill Turtle\nReptile\n10\nY\nY\nHammerhead Shark\nFish\n3\nY\nN\nYellow-eyed Penguin\nBird\n4\nY\nN\nKemp\u2019s Ridley Sea Turtle\nReptile\n1\nY\nN\n State how many fields and how many records are shown in this table.\nNumber of fields  \nNumber of records  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"9(a) \nOne mark for each column F, C and T \nTwo marks for columns X[1] to X[5] all entries correct or \nOne mark for columns X[1] to X[5] with one error \nF \nC \nX[1] \nX[2] \nX[3] \nX[4] \nX[5] \nT ","key":22.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":5,"Question":"(b) \n Show the output that would be given by this query-by-example.\nField: Creature\nClass\nReady for release\nTable: MARINE\nMARINE\nMARINE\nSort:\nShow:\n3\n3\nCriteria:\n=\"Bird\"\nor:\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"1 ","key":23.0},{"Paper_No":"0478_w20_qp_23.pdf","Question_No":5,"Question":"(c) \n Complete the query-by-example grid to display the creatures, in ascending order of quantity, \nthat have no offspring and are ready for release. Display only the creature field.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"7 ","key":24.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":1,"Question":"(s) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release material\nA holiday park has eight squash courts that can be booked for an hour at a time. The first booking \nis from 08:00 to 09:00 and the last booking is from 17:00 to 18:00. All bookings start on the hour \nand bookings can only be made on the same day that the squash court is used. A screen displays \ntoday\u2019s date and how many squash courts are available for each hour.\nWhen a booking is made, the name of the guest is recorded together with their mobile phone number. \nOnce the squash court is booked, the guest is shown the court number together with a unique 4-digit \ncode that can be used to unlock the squash court. Each booking is for one squash court for one \nhour. The 4-digit code must be different for each booking.\nWrite and test a program or programs for a computer system to manage the daily squash court \nbookings.\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must be \nvalidated on entry.\n\u2022 \nError messages and other output need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 at the start of the day\nWrite a program to set up arrays to record the following for each hour:\n\u2022 \nwhether a squash court is booked or available\n\u2022 \nthe name of the guest\n\u2022 \nthe mobile phone number of the guest\n\u2022 \nthe unique 4-digit code for the booking.\nSet up a screen to display the court availability at the start of the day.\nTask 2 \u2013 making a squash court booking\nCheck if there is a squash court available at the time requested. If a squash court is available, \nrecord the guest\u2019s name and mobile phone number. Mark the squash court as booked for that hour. \nGenerate and record the unique 4-digit code for the booking. Display the mobile phone number for \nthe guest to check, display the court number and the 4-digit code for the guest to remember. Display \nthe updated court availability, showing an hour as fully booked if all the squash courts are now \nbooked for that hour.\nTask 3 \u2013 at the end of the day\nCalculate the total number of squash court bookings. Find the hour and court with the most \nbookings. Display this information.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n(a) Identify one constant that you could have used for Task 1. Give the value that would be \nassigned to this constant. State the use of this constant.\nConstant  \nValue  \nUse  \n","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"0 ","key":25.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":1,"Question":"(b) \n Describe the arrays that you have set up in Task 1 to record today\u2019s data about the squash \ncourts.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"10 ","key":26.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":1,"Question":"(c) \n Explain how your program generates a unique 4-digit code for each booking.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"2 ","key":27.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":1,"Question":"(d) \n Write an algorithm for Task 2. You do not need to display updated court availability. Use \neither pseudocode, programming statements or a flowchart. Assume that Task 1 has been \ncompleted.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"10 ","key":28.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":1,"Question":"(e) \n Explain how your program completed the part of Task 3 which calculates the total number of \nsquash court bookings, finds the court(s) with the most bookings and displays this information. \nInclude any programming statements that you have used and fully explain the purpose of \neach statement.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"1 ","key":29.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":2,"Question":"(a) \nSection B starts on Page 8\nSection B\n2 \nAn algorithm has been written in pseudocode to generate 50 positive random integers with values \nless than or equal to 100. These random integers are stored in the array RandNum[ ]\nThe function Rand(X, Y) generates a random integer greater than or equal to X and less than Y. \nFor example, Rand(1, 4) generates 1 or 2 or 3.\n1 Count \n 0\n2 REPEAT\n3     RandNum[Counter] \n Rand(1, 100)\n4     Count \n Count + 2\n5 UNTIL Count <= 50\n Find the four errors in the pseudocode and write a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"5 ","key":30.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":2,"Question":"(b) \n The pseudocode for this algorithm could be shortened by the use of a FOR \u2026 NEXT loop.\nRewrite the algorithm using a FOR \u2026 NEXT loop.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"10 ","key":31.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":2,"Question":"(c) \n Identify another loop structure available in pseudocode.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"4 ","key":32.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":3,"Question":"(a) \n3 \nA program has been written to check the value of a measurement. The measurement must be a \npositive number and given to three decimal places, for example, 3.982\n (i) State suitable examples of normal and erroneous test data that could be used to test this \nprogram. For each example give the reason for your choice of test data.\nNormal test data example  \nReason  \nErroneous test data example  \nReason  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"10 ","key":33.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":3,"Question":"(ii) \n Explain why two pieces of boundary test data are required for this program.\n Give an example of each piece of boundary test data.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"0 ","key":34.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":3,"Question":"(b) \n Explain why verification is needed and how verification could be performed by this program.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"2 ","key":35.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":4,"Question":"\nQuestion 4 starts on Page 12\n4 \nThe algorithm shown by this flowchart allows the input of examination marks for a class of students. \nA mark of \u20131 ends the process. If a mark is 80 or over then a distinction grade is awarded. The \nnumber of distinctions for the whole class is calculated. If this is over 50% of the class, the class is \nawarded a highly commended certificate.\nSTART\nEND\nYes\nIS\nMark = \u20131?\nINPUT\nMark\nCounter \u2190 0\nDistinction \u2190 0\nCounter \u2190 Counter + 1\nOUTPUT\n\"Highly\nCommended\"\nIS\nMark >= 80?\nIS\nAward > 0.5?\nDistinction \u2190 Distinction + 1\nNo\nNo\nNo\nYes\nYes\nAward \u2190 Distinction\/Counter\nComplete a trace table for the algorithm using this input data:\n88, 74, 60, 90, 84, 87, 95, 72, 84, 66, \u20131\nCounter\nDistinction\nMark\nAward\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"4 ","key":36.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nA database table, APPLIANCE, is used to keep a record of kitchen appliances available for sale.\nThe following data is stored for each appliance:\n\u2022 \nCATEGORY \u2013 washer, dishwasher, fridge or freezer\n\u2022 \nECONOMYRATING \u2013 A, B, C or D\n\u2022 \nMANUFACTURER \u2013 Baku or ABC\n\u2022 \nPRICE \u2013 price in $\n\u2022 \nCODE \u2013 a unique code allocated by the manufacturer e.g. B982\n\u2022 \nSTOCK \u2013 number in stock.\nThe database management system uses these data types:\nText        Number        Currency        Boolean\nThe ECONOMYRATING field and MANUFACTURER field have a data type of text.\n Identify the most appropriate data type for each field from the four types shown. State the \nreason why you chose each data type.\nCATEGORY data type  \nReason  \nPRICE data type  \nReason  \nCODE data type  \nReason  \nSTOCK data type  \nReason  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"5 \n9(b) \nOne mark for each point  \n\uf0b7 \n(bubble) sort data in array \n\uf0b7 \nin ascending order ","key":37.0},{"Paper_No":"0478_w21_qp_21.pdf","Question_No":5,"Question":"(b) \n Complete the query-by-example grid to display only the category, manufacturer and code of \nthe appliances with an economy rating of A.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"10(a) \nSongNumber ","key":38.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release material\nAn integrated transport system has been designed to reduce the need for privately owned vehicles. \nA vehicle is booked to take a passenger from home to a start station, from where they will travel to \nan end station. A vehicle at the end station will take the passenger to their destination. Each stage \nof the journey has a price code to represent the distance travelled. The prices for each stage are \nshown:\nHome to start \nstation\nStart station to end \nstation\nEnd station to \ndestination\nCode\nPrice ($)\nCode\nPrice ($)\nCode\nPrice ($)\nC1\n1.50\nM1\n5.75\nF1\n1.50\nC2\n3.00\nM2\n12.50\nF2\n3.00\nC3\n4.50\nM3\n22.25\nF3\n4.50\nC4\n6.00\nM4\n34.50\nF4\n6.00\nC5\n8.00\nM5\n45.00\nF5\n8.00\nTo book a journey, a passenger will enter a code for each stage and the start time of their journey. \nThe total price is calculated by adding together the price for each of the three stages. The total \nprice will be reduced by 40% when the start time of the journey is after 10:00. \nWrite and test a program or programs for the integrated transport booking system. \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data; data must \nbe validated on entry. \n\u2022 \nError messages and other output need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 setting up the booking system\nWrite a program to set up arrays to record the following:\n\u2022 \ncodes and prices for each of the three stages\n\u2022 \npassenger accounts that include a unique passenger account number and name\n\u2022 \nbookings that include a unique passenger account number, a start time of the journey, a code \nfor each stage of the journey, and a unique booking number for the journey.\nStore the data for the code and price for each stage. \nTask 2 \u2013 using the booking system\nExtend Task 1 to achieve the following:\n\u2022 \nAllow passengers to open an account by generating a unique passenger account number and \nstoring it along with their name in the arrays.\n\u2022 \nAllow passengers to make a booking by first entering their unique passenger account number, \nthe start time of their journey, and a code for each stage of their journey. Check if the passenger \naccount number already exists.\n\u2022 \nGenerate a unique booking number for the journey.\n\u2022 \nCalculate the total price of the journey, without any discount, and store the journey details.\nTask 3 \u2013 applying a discount and checking the entry\nExtend Task 2 to check the start time of the journey and if it is after 10:00, apply a 40% discount to \nthe total price.\nDisplay the total price and booking details for the passenger to check, and allow them to either \nconfirm the details are correct or start again.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n (i) Identify one variable you could have used for Task 2 and state its use.\nVariable  \nUse  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"10(b) \nOne mark for every two correct data types \nField \nData Type \nSongNumber Text\/Alphanumeric \nTitle \nText\/Alphanumeric \nRecorded \nDate\/time  \nMinutes \nReal ","key":39.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":1,"Question":"(ii) \n Describe the arrays you could have used in Task 1. Include the name, data type, use \nand sample data for each array.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"10(c) \nOne mark for each point  \n\uf0b7 \nto find the total number of minutes of music \n\uf0b7 \nto find the total number of songs \n\uf0b7 \navailable for the genre rock ","key":40.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":1,"Question":"(b) \n Describe how you could validate the data entry for the input of the codes for the different \nstages of the journey in Task 2. \n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"11(a) \nOne mark for any two correct lines \nDECLARE P : STRING \nP \uf0ac \"The world\" \nDECLARE Q : CHAR \nQ \uf0ac 'W' ","key":41.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":1,"Question":"(c) \n Write an algorithm to show how your program carries out Task 3, using either pseudocode, \nprogramming statements or a flowchart. Assume Tasks 1 and 2 have already been completed. \n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"11(b) \nOne mark for each point (max four) \n\uf0b7 \nconverting P to upper case  \n\uf0b7 \nfinding the length of P  \n\uf0b7 \nusing a loop to check for position of Q \n\uf0b7 \nusing the string operation substring  \n\uf0b7 \nstoring the loop counter in Position if the value is found \nFor example: \nP \uf0ac UCASE(P) \nCounter \uf0ac 1 \nPosition \uf0ac 0 \nREPEAT \n    IF SUBSTRING(P, Counter, 1) = Q \n       THEN \n         Position \uf0ac Counter \n    ENDIF \n    Counter \uf0ac Counter + 1 \nUNTIL Position <> 0 OR Counter = LENGTH(P) ","key":42.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how your program could be changed to count and store the number of bookings \nmade by each passenger. Then, after ten bookings have been made by a passenger, apply \nan additional 10% discount to every future booking. Any programming statements used in \nyour answer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"11(c) ","key":43.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":2,"Question":"\nSection B\n2 \nTick (3) one box in each row to identify if the statement is about validation, verification or neither.\nStatement\nValidation\n(3)\nVerification\n(3)\nNeither \n(3)\na check where data is re-entered to make sure no \nerrors have been introduced during data entry\nan automatic check to make sure the data entered \nhas the correct number of characters\na check to make sure the data entered is sensible\na check to make sure the data entered is correct\n","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"1 ","key":44.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":3,"Question":"\n3 \nA program checks that the data entered is between 1 and 100 inclusive.\nIdentify one piece of normal, extreme and erroneous test data for this program, and give a reason \nfor each. \nNormal test data  \nReason  \nExtreme test data  \nReason  \nErroneous test data  \nReason  \n","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"Read the whole answer: \nCheck if each requirement listed below has been met.  Requirements may be met using a suitable built-in function from the \nprogramming language used (Python, VB.NET or Java) \nMark SEEN on script if requirement met, cross if no attempt seen, NE if partially met (see marked scripts). \nUse the tables for A02 and A03 below to award a mark in a suitable band using a best fit approach \nThen add up the total.  \nMarks are available for: \n\uf0b7 \nAO2 (maximum 9 marks) \n\uf0b7 \nAO3 (maximum 6 marks) \nData Structures required names shown underlined must be used as given in the scenario \nArrays or lists Account, AccDetails \nVariable Size, AccountNumber \nRequirements (techniques) \nR1 Check account number and password (iteration and validation, selection, input, output) \nR2 Display menu and make a selection (output, input and selection) \nR3 Perform actions selected (use of arrays and procedures with parameters) \nExample 15 mark answer in pseudocode \n\/\/ Procedures to be called \nPROCEDURE CheckDetails(AccID : INTEGER) \n    DECLARE Name, Password : STRING \/\/ local variables \n    Valid \uf0ac FALSE \n    IF AccID <0 OR AccID > Size \n      THEN \n        OUTPUT \"Invalid Account Number\" \n      ELSE \n        OUTPUT \"Please Enter Name \" \n        INPUT Name \n        OUTPUT \"Please Enter Password \" \n        INPUT Password \n        IF Name <> Account[AccID,1] OR Password <> Account[AccID,2] \n          THEN \n            OUTPUT \"Invalid name or password\" \n          ELSE ","key":45.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nThe pseudocode algorithm should work as a calculator and output the result.\n1 \nContinue \n 1\n2 \nWHILE Continue = 0 \n3 \n  OUTPUT \"Enter 1 for +, 2 for -, 3 for * or 4 for \/\"\n4 \n  INPUT Operator\n5 \n  OUTPUT \"Enter the first value\"\n6 \n  INPUT Value1\n7 \n  OUTPUT \"Enter the second value\"\n8 \n  OUTPUT Value2 \n9 \n  IF Operator\n10     1: Answer \n Value1 + Value2\n11     2: Answer \n Value1 - Value2\n12     3: Answer \n Value1 * Value2\n13     4: Answer \n Value1 \/ Value2\n14   ENDCASE\n15   OUTPUT \"The answer is \", Value1\n16   OUTPUT \"Do you wish to enter more values (Yes or No)?\"\n17   INPUT MoreValues\n18   IF MoreValues = \"No\"\n19     THEN\n20       Continue \n 1\n21   ENDIF\n22 UNTIL Continue = 0\n Find the five errors in the pseudocode and suggest a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \nError 5  \nCorrection  \n","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"12 \n            Valid \uf0ac True \n        ENDIF \n    ENDIF \nENDPROCEDURE \nPROCEDURE Balance(AccID : INTEGER) \n    OUTPUT \"Your balance is \", AccDetails[AccID,1] \nENDPROCEDURE \nPROCEDURE WithDrawal(AccID : INTEGER) \n    DECLARE Amount : REAL \/\/ local variable \n    REPEAT \n        OUTPUT \"Please enter amount to withdraw \" \n        INPUT Amount \n        IF Amount > AccDetails[AccID,3] \n          THEN \n            OUTPUT \"Amount greater than withdrawal limit\" \n        ENDIF \n        IF Amount > AccDetails[AccID,2] + AccDetails[AccID,1] \n          THEN \n            OUTPUT \"Amount greater than cash available\" \n        ENDIF \n        IF Amount <= AccDetails[AccID,3] AND Amount < AccDetails[AccID,2] +  \n          AccDetails[AccID,1] \n          THEN \n            AccDetails[AccID,1] \uf0ac AccDetails[AccID,1] - Amount \n        ENDIF \n    UNTIL Amount<= AccDetails[AccID,3] AND Amount > AccDetails[AccID,2] +  \n          AccDetails[AccID,1] AND Amount > 0 \nENDPROCEDURE \nPROCEDURE Deposit(AccID : INTEGER) \n    DECLARE Amount : REAL \/\/ local variable \n    REPEAT \n        OUTPUT \"Please enter a positive amount to deposit \" \n        INPUT Amount \n    UNTIL Amount >0 \n    AccDetails[AccID,1] \uf0ac AccDetails[AccID,1] + Amount ","key":46.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":4,"Question":"(b) \n The algorithm needs changing to allow only the numbers 1, 2, 3, or 4 to be entered for the \ninput variable Operator. \nWrite the pseudocode to perform this task and state where in the algorithm it would be \nlocated.\nPseudocode  \nLocation in algorithm  \n","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_22.pdf","Answer":"ENDPROCEDURE \n\/\/ Declarations of global variables for information \u2013 not required in candidate responses \nDECLARE AccountNumber, Choice : INTEGER \nDECLARE Valid, Exit : BOOLEAN \nOUTPUT \"Please enter your account number \" \nINPUT AccountNumber \nCheckDetails(AccountNumber) \nIF Valid \n  THEN \n    REPEAT \n        OUTPUT \"Menu\" \n        OUTPUT \"1. display balance\" \n        OUTPUT \"2. withdraw money\" \n        OUTPUT \"3. deposit money\" \n        OUTPUT \"4. exit\" \n        OUTPUT \"please choose 1, 2, 3 or 4\" \n        INPUT Choice \n        CASE OF Choice \n          1 : Balance(AccountNumber) \n          2 : Withdrawal(AccountNumber) \n          3 : Deposit(AccountNumber) \n          4 : Exit \uf0ac TRUE \n          OTHERWISE OUTPUT \"Invalid choice\" \n        ENDCASE \n    UNTIL Choice = 4  \n  ELSE \n    OUTPUT \"Invalid account number \" \nENDIF \nMarking Instructions in italics \nAO2: Apply knowledge and understanding of the principles and concepts of computer science to a given context, including the \nanalysis and design of computational or programming problems \n0 \n1\u20133 \n4\u20136 \n7\u20139 \nNo creditable \nresponse. \nAt least one programming technique \nhas been used. \nAny use of selection, iteration, \ncounting, totalling, input and output. \nSome programming techniques used \nare appropriate to the problem. \nMore than one technique seen applied \nto the scenario, check the list of \ntechniques needed. \nThe range of programming techniques \nused is appropriate to the problem.  \nAll criteria stated for the scenario have \nbeen covered by the use of \nappropriate programming techniques, \ncheck the list of techniques needed. \nSome data has been stored but not \nappropriately. \nAny use of variables or arrays or other \nlanguage dependent data structures \ne.g. Python lists. \nSome of the data structures chosen \nare appropriate and store some of the \ndata required.   \nMore than one data structure used to \nstore data required by the scenario.  \nThe data structures chosen are \nappropriate and store all the data \nrequired. \nThe data structures used store all the \ndata required by the scenario. \nMarking Instructions in italics \nAO3: Provide solutions to problems by:  \n\uf0b7 \nevaluating computer systems \n\uf0b7 \nmaking reasoned judgements \n\uf0b7 \npresenting conclusions \n0 \n1\u20132 \n3\u20134 \n5\u20136 \nNo creditable \nresponse. \nProgram seen without relevant \ncomments. \nProgram seen with some relevant \ncomment(s). \nThe program has been fully \ncommented. \nSome identifier names used are \nappropriate. \nSome of the data structures used have \nmeaningful names. \nThe majority of identifiers used are \nappropriately named. \nMost of the data structures used have \nmeaningful names. \nSuitable identifiers with names \nmeaningful to their purpose have been \nused throughout. \nAll of the data structures used have \nmeaningful names. \nThe solution is illogical. \nThe solution contains parts that may \nbe illogical. \nThe program is in a logical order. \nThe solution is inaccurate in many \nplaces. \nSolution contains few lines of code \nwith errors that attempt to perform a \ntask given in the scenario. \nThe solution contains parts that are \ninaccurate. \nSolution contains lines of code with \nsome errors that logically perform \ntasks given in the scenario. Ignore \nminor syntax errors. \nThe solution is accurate. \nSolution logically performs all the tasks \ngiven in the scenario. Ignore minor \nsyntax errors. \nThe solution attempts at least one of \nthe requirements. \nSolution contains lines of code that \nattempt at least one task given in the \nscenario. \nThe solution meets most of the \nrequirements. \nSolution contains lines of code that \nperform most tasks given in the \nscenario. \nThe solution meets all the \nrequirements given in the question. \nSolution performs all the tasks given in \nthe scenario. ","key":47.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":5,"Question":"\n5 \nThe flowchart represents an algorithm.\nThe algorithm will terminate if \u20131 is entered at the List input.\nSTART\nList1 \u2190 0\nList2 \u2190 0\nEND\nINPUT\nList\nYes\nNo\nNo\nNo\nNo\nYes\nYes\nYes\nINPUT\nValue\nOUTPUT\n\"Input Error\"\nOUTPUT\n\"List 1 = \", List1\nOUTPUT\n\"List 2 = \", List2\nIS\nList = \u20131 ?\nIS\nList = 1 ?\nIS\nList = 2 ?\nOUTPUT\n\"List 2 is greatest\"\nOUTPUT\n\"List 1 is greatest\"\nIS\nList1 > List2 ?\nList2 \u2190 List2 + Value\nList1 \u2190 List1 + Value\nComplete the trace table for the algorithm using this input data:\n2, 77, 2, 16, 1, 35, 2, \u20137, 5, 18, 1, 11, 1, 12, 2, 20, \u20131, 18\nList\nValue\nList1\nList2\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. ","key":0.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":6,"Question":"(a) \nPermission to reproduce items where third-party owned material protected by copyright is included has been sought and cleared where possible. Every \nreasonable effort has been made by the publisher (UCLES) to trace copyright holders, but if any items requiring clearance have unwittingly been included, the \npublisher will be pleased to make amends at the earliest possible opportunity.\nTo avoid the issue of disclosure of answer-related information to candidates, all copyright acknowledgements are reproduced online in the Cambridge \nAssessment International Education Copyright Acknowledgements Booklet. This is produced for each series of examinations and is freely available to download \nat www.cambridgeinternational.org after the live examination series.\nCambridge Assessment International Education is part of the Cambridge Assessment Group. Cambridge Assessment is the brand name of the University of \nCambridge Local Examinations Syndicate (UCLES), which itself is a department of the University of Cambridge.\n6 \nA pet supplier uses the database table, STOCK, to keep records of its products for pets.\nThe fields are:\nField name\nDescription\nProductID\ncode to identify the product\nProductName\nname of product\nProductDescription\ninformation about the product\nAnimal\ntype of animal the product is for, e.g. cat, bird, horse\nProductType\ntype of product, e.g. food, toy, medicine\nInStock\nwhether the product is in stock or not\n (i) Identify the field that could have a Boolean data type.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"B ","key":1.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":6,"Question":"(ii) \n Identify the field that should be used as the primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"2 \nOne mark per mark point, max four \nMOD, max two \n\uf0b7 \nTo perform (integer) division when one number is divided by another \n\uf0b7 \n\u2026 and find the remainder \n\uf0b7 \nAllow example e.g. 7 MOD 2 = 1 \nRANDOM, max two \n\uf0b7 \nTo generate (pseudo) random numbers \n\uf0b7 \n\u2026(usually) within a specified range \n\uf0b7 \nAllow example e.g. RANDOM() * 10 returns a random number between 0 and 10 ","key":2.0},{"Paper_No":"0478_w21_qp_22.pdf","Question_No":6,"Question":"(b) \n Complete the query-by-example grid to output the products intended for a cat that are in \nstock. Display only the primary key and the name of the products. The output should be \nsorted by the primary key.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"3 \nOne mark per mark point, max three \nMP1 A call statement is used in order to make use of a function \/\/ the function is called using its identifier \nMP2 Parameters are \/ may be passed (from the main program) to the function (to be used within the function) \nMP3 The function performs its task \u2026  \nMP4 \u2026 and returns a value \/ values to the main program ","key":3.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release Material\nA program is needed for a swimming club to manage the annual audit of its membership details.\nThe data stored about each member includes name, age, gender, type of membership, whether \na team member or not, annual fee and if the fee has been paid. Team members are allowed a \ndiscount of 10% on their annual membership fee.\nThe types of membership available are:\nMembership\nAge range in years\nAnnual fee\njunior\n>= 2 and < 18\n$10.00\nadult\n>= 18 and < 50 \n$20.00\nsenior\n>= 50 and < 80\n$15.00\ngolden\n80 and over\nfree\nWrite and test a program or programs for the swimming club annual audit:\n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. Data must be \nvalidated on entry.\n\u2022 \nAll outputs, including error messages, need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names.\nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 setting up the system to store the membership details\nSet up your program to:\n\u2022 \nstore the members\u2019 details in arrays\n\u2022 \npopulate the arrays with at least 20 members\u2019 details\n\u2022 \nuse the array index as the annual membership number.\nTask 2 \u2013 providing annual audit statistics\nCount the number of current members by membership type. For each type of membership count the \nnumber of members who did not pay the annual fee. Display these counts as a percentage of the \ntotal number of members for each membership type. Calculate and display the total of the annual \nfees expected and the annual fees received for this year.\nTask 3 \u2013 updating the membership details for the next year\nExtend your program to:\n\u2022 \ncheck if any members have not paid and output a list of all these members\n\u2022 \nremove these members from the system\n\u2022 \nupdate the age of all the members by one year and whether they are in a team\n\u2022 \nupdate the type of membership and the annual fee if required\n\u2022 \nset the fee for every member as not yet paid\n\u2022 \ndisplay lists of current team members grouped by membership type.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n (i) Describe the arrays you have set up in Task 1 to record the members\u2019 details. Include in \nyour description the name, data type and sample data for each array.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"4(a) \nOne mark per mark point, max two \n\uf0b7 \nTo ensure that data has been accurately copied \/\/ to ensure that changes have not been made to the values originally \nintended when data is copied  \n\uf0b7 \n\u2026 from one source to another ","key":4.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":1,"Question":"(ii) \n Explain how your program for Task 1 populated the arrays with the members\u2019 details.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"4(b) \nOne mark for each appropriate verification check, max two \nOne mark for each correct accompanying use, max two \nFor example: \nVerification check 1 \u2013 Visual check \nUse \u2013 the user looks through the data that has been entered and confirms that no changes have been made. \nVerification check 2 \u2013 Double data entry \nUse \u2013 data is entered twice, the two entries are compared and if they do not match, a re-entry is requested. ","key":5.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":1,"Question":"(b) \n Explain how your program removed the members that have not paid their fees from the \nsystem in Task 3.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"5(a) \nOne mark for each correct line. \n                   Description                                                           Check ","key":6.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for the part of Task 3 that checks the age of all the members, and whether \nthey are in a team, then updates the type of membership and the annual fee if required.\nUse pseudocode, programming statements or a flowchart.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"to check that the data entered is an \ninteger \ncheck digit \nto check that the data entered has an \nappropriate number of characters \nto check that some data has been \nentered \nto check that an identification \nnumber contains no errors \nlength check \ntype check \npresence check \nformat check \n5(b) \nOne mark per mark point, max three \n\uf0b7 \nappropriate REPEAT \/ WHILE loop begin and end \n\uf0b7 \ninput of Length \n\uf0b7 \nappropriate input prompt \/ error message \n\uf0b7 \ncorrect loop exit\/entry condition \/ selection \nExample answers: \nWHILE Loop \nOUTPUT \"Enter a number between 15 and 35 inclusive\" \nINPUT Length \nWHILE Length <15 OR Length > 35 (DO) \n    OUTPUT \"Your number must be between 15 and 35 inclusive \n    INPUT Length \nENDWHILE \nREPEAT Loop \n REPEAT  \n    OUTPUT \"Enter a number between 15 and 35 inclusive\" \n    INPUT Length \nUNTIL Length >= 15 AND LENGTH <= 35 ","key":7.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":1,"Question":"(d) \n Explain how your program completes these parts of Task 2:\n\u2022 \nCount the number of members of each membership type who did not pay the annual \nfee.\n\u2022 \nDisplay these counts as a percentage of the total number of members for each \nmembership type.\nAny programming statements that you include in your answer must be fully explained.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"6(a) \nOne mark per mark point, max four \n\uf0b7 \nLine 01 \/ Counter \uf0ac 100 \nshould be Counter \uf0ac 0 \n\uf0b7 \nLine 03 \/ While Counter > 100 DO \nshould be While Counter < 100 DO \n\uf0b7 \nLine 07 \/ Total \uf0ac Total + Counter \nshould be Total \uf0ac Total + Number \n\uf0b7 \nLine 09 \/ ENDCASE \nshould be ENDIF \nCorrect algorithm  \n01 Counter \uf0ac 0 \n02 Total \uf0ac 0 \n03 WHILE Counter < 100 DO \n04     INPUT Number \n05     IF Number > 0 \n06       THEN \n07         Total \uf0ac Total + Number \n08         Counter \uf0ac Counter + 1 \n09     ENDIF \n10 ENDWHILE \n11 OUTPUT \"The total value of your numbers is \", Total \n12 OUTPUT \"The average value of your numbers is \", Total \/ 100 ","key":8.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":2,"Question":"(a) \nSection B starts on page 8.\nSection B\n2 \nAn algorithm has been written to:\n\u2022 \nset 100 elements of the array Reading[1:100] to zero\n\u2022 \ninput integer values between 1 and 100\n\u2022 \nend the process with an input of \u20131\n\u2022 \nreject all other values\n\u2022 \ncount and output the number of times each value is input, starting with the largest value.\n Complete the pseudocode algorithm:\n01  FOR Count \n 1 TO  \nO2    Reading[Count] \n 0\n03  NEXT Count\n04  OUTPUT \"Please enter next reading \"\n05  INPUT Value\n06  WHILE Value <> -1 DO\n07    IF Value <= 0 OR  \n08      THEN\n09        OUTPUT \"Reading out of range\"\n10      ELSE\n11        Reading[Value] \n12    ENDIF\n13    OUTPUT \"Please enter next reading \"\n14     \n15  ENDWHILE\n16  Count \n 100\n17  REPEAT\n18    OUTPUT \"There are \", ,\n             \" readings of \", Count\n19    Count \n20  UNTIL Count = 0\n","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"6(b) \nOne mark per mark point, max five \nMP1 replace line 03 \nMP2 with FOR \nMP3 \u2026 with limits 0 to 99 \/ 1 to 100 \nMP4 replace line 05 to check if Number is not positive  \nMP5 \u2026 (if Number is not positive) insert a validation and re-input routine between lines 06 and 07 \u2026 \nMP6 \u2026 that will repeat until a positive value is entered \nMP7 remove the counter update \/ line 08 \nMP8 replace line 10 \/ ENDWHILE with NEXT ","key":9.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":2,"Question":"(b) \n Describe how the algorithm could be changed so that it does not output any counts of zero.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"7(a) \nOne mark per mark point, max six \n\uf0b7 \ncorrect Total column \n\uf0b7 \ncorrect Value column \n\uf0b7 \ncorrect Five1 column \n\uf0b7 \ncorrect Five2 column \n\uf0b7 \ncorrect Ten1 and Ten2 columns \n\uf0b7 \ncorrect OUTPUT column \nTotal \nValue \nFive1 \nFive2 \nTen1 \nTen2 \nOUTPUT \n0 ","key":10.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":3,"Question":"(a) \n3 \n A PIN (personal identification number) is input into a banking app by the user. Before the PIN \nis accepted, the following validation checks are performed:\n\u2022 \ncheck 1 \u2013 each character must be a digit\n\u2022 \ncheck 2 \u2013 there must be exactly four digits\n\u2022 \ncheck 3 \u2013 the value of the PIN must be between 1000 and 9999 inclusive.\nDescribe each validation check.\nCheck 1  \nCheck 2  \nCheck 3  \n","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"1 ","key":11.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":3,"Question":"(b) \n The PIN can be changed by the user.\nDescribe how the new PIN could be verified before use.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"0 \n0.5 \nRejected \n50 ","key":12.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":4,"Question":"(a) \nQuestion 4 starts on page 12.\n4 \nThis algorithm makes sure that there are enough fresh bread rolls available for customers to buy.\nSTART\nINPUT Sold\nIS Sold =\n\u20131?\nStock   50\nTotal   0\nSTOP\nYes\nNo\nOUTPUT Total\nOUTPUT\n\"Add new stock\"\nIS Stock\n< 20?\nYes\nNo\nStock   Stock \u2013 Sold\nStock   Stock + 50\nTotal   Total + Sold\n Complete the trace table for the algorithm using this input data:\n24, 12, 6, 30, 12, 18, \u20131, 24\nSold\nStock\nTotal\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"10 ","key":13.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":4,"Question":"(b) \n Identify the problem that will occur if the input data starts with a value of 70.\nExplain how you would correct this problem.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"5 \n50 \n52 ","key":14.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nA database table, WAREHOUSE, is used to keep a record of items for sale. The table has these \nfields:\n\u2022 \nItemCode \u2013 code to identify each type of item\n\u2022 \nDescription \u2013 brief description of each item\n\u2022 \nManufacturer \u2013 name of manufacturer\n\u2022 \nLevel \u2013 number in stock\n\u2022 \nPrice \u2013 price in dollars ($).\n State which field you would choose for the primary key. Give a reason for your choice.\nField  \nReason  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"10.4 \nRejected \n555 \n111 \n111 \n55 \n55.5 \nRejected \n57 ","key":15.0},{"Paper_No":"0478_w22_qp_21.pdf","Question_No":5,"Question":"(b) \n Complete the query-by-example grid to display only the item code and the manufacturer \nwhere the number in stock is below 10.\nField:\nTable:\nSort:\nShow:\no\no\no\no\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"11.4 \nRejected \n500 \n100 \n100 \n50 \n50 \n550 \n\u20131 \n550 ","key":16.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release Material\nAn organisation has a visitor car park with 20 car parking spaces numbered 1 to 20. Car park \nspaces can be booked by visitors up to two weeks before the date they are needed, as long as a \nspace is available. Visitors request a car parking space by stating the day in the two-week period in \nwhich it is required. They give the licence number of the car to be parked and their name. The next \navailable space, beginning at space 1, is allocated and the given data and booking are stored. A \nsystem is required to record the car park bookings.\nWrite and test a program or programs for the visitor car park booking system to work for a static \nperiod of two weeks: \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. Data must \nbe validated on entry. \n\u2022 \nAll outputs, including error messages, need to be set out clearly and understandably. \n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 setting up the booking system\nSet up suitable data structures to store the car licence numbers and names of visitors who have \nbooked car parking spaces. The data structures should have sufficient capacity to store data for \neach of the 20 parking spaces for a static period of two weeks. Allow a visitor to request a parking \nspace on any day within the two-week period by entering a number between 1 and 14, inclusive. \nThe system will check that there are spaces available on the day requested, and if so, will ask the \nvisitor to enter their name and car licence number. This data will be stored in the data structures \nrepresenting the first available parking space for the day requested. The visitor will be told the \nnumber of their parking space.  \nAt the end of the two-week period, allow all of the data to be deleted ready for the next two-week \nperiod.\nTask 2 \u2013 adding accessible parking spaces\nThe visitor car park booking system is to be re-designed to offer accessible parking. Spaces 1 to 5 \nare named accessible spaces. Spaces 6 to 20 are named general spaces. \nExtend your program in Task 1 so that:\n\u2022 \nwhen a visitor requests a parking space, they are additionally asked if they need an accessible \nspace\n\u2022 \nif so, they are allocated the first available space beginning at space 1 and finishing at \nspace 20 \n\u2022 \nif not, they are allocated the first available space beginning at space 20 and finishing at \nspace 6.\nThe system must work so that visitors requiring accessible parking may be allocated any of the \n20 spaces, but visitors who do not need accessible parking may only be allocated general spaces.\nTask 3 \u2013 working out car park usage statistics\nExtend the program to enable the following statistics to be counted and output on request:\n\u2022 \nThe number of accessible spaces used on any of the 14 days.\n\u2022 \nThe number of general spaces used on any of the 14 days.\n\u2022 \nThe total number of spaces used on any of the 14 days.\n\u2022 \nThe number of accessible spaces used in the whole 14-day period.\n\u2022 \nThe number of general spaces used in the whole 14-day period.\n\u2022 \nThe total number of spaces used in the whole 14-day period.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n (i) Identify one constant you could have used for Task 1 and state its value.\nConstant  \nValue  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"7(b) \nOne mark per mark point, max two \n\uf0b7 \nto find if an input is divisible by (both 5 and) 10  \n\uf0b7 \n\u2026 add them together and output the total ","key":17.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":1,"Question":"(ii) \n Identify one array you could have used in Task 1 and describe its use.\nArray  \nUse  \n","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"8(a) \nOne mark for each correct gate, with the correct input(s) as shown. ","key":18.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":1,"Question":"(b) \n  Describe how your program could validate the input for the day number within the two-week \nperiod to make sure an appropriate value is entered (part of Task 1). \nYou must include programming statements as part of your answer.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"8(b) \nFour marks for eight correct outputs. \nThree marks for six or seven correct outputs. \nTwo marks for four or five correct outputs. \nOne mark for two or three correct outputs \nA \nB \nC \nZ \n0 \n0 \n0 \n0 \n0 \n0 ","key":19.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":1,"Question":"(c) \n  Write an algorithm to show how your program allocates a parking space if the visitor requires \naccessible parking (part of Task 2), including all relevant input and output, using pseudocode, \nprogramming statements or a flowchart.  \n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"0 \n0 ","key":20.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":1,"Question":"(d) \n Explain how your program in Task 2 could be altered so that bookings can be made for \nany time over a four-week period instead of the current two-week period. Any programming \nstatements used in your answer must be fully explained.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"0 \n0 \n0 ","key":21.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":1,"Question":"(e) \n Explain how your program records and outputs the number of accessible and general parking \nspaces used for the two-week period (part of Task 3). Any programming statements used in \nyour answer must be fully explained.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"1 \n0 ","key":22.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":2,"Question":"\nSection B\n2 \nDraw a line to connect each programming concept to the most appropriate description.\n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"0 \n0 ","key":23.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":3,"Question":"\n3 \nDescribe the use of verification on input of data when entering a list of items in stock into a \ndatabase. Explain why verification is necessary.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"1 \n0 ","key":24.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":4,"Question":"\n4 \nDescribe one type of test data that must be used to test if a program accepts valid input data.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"0 ","key":25.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":5,"Question":"(a) \ncounting\nrepetition\nselection\nsequence\ntotalling\ncarrying out an action multiple times within a loop \nstructure\nadding together the numbers in a list of numbers\ntracking the number of iterations a program has \nperformed in a loop\nbranching off to take a course of action depending  \non the answer to a question\na set of statements to be executed in order\nProgramming concept\nDescription\n5 \nThis pseudocode should allow 500 marks to be entered into the algorithm. If the mark is 80 or \ngreater it is stored in an array for higher marks. If the mark is less than 80, but greater than or \nequal to 50 it is stored in an array for middle marks. The remaining marks are stored in an array \nfor lower marks. The results from the algorithm are displayed at the end.\n01 HighList \n 0\n02 MidList \n 0\n03 LowList \n 0\n04 MarksEntry \n 0\n05 REPEAT \n06   INPUT Mark\n07   IF Mark >= 80\n08     THEN\n09       Higher[HighList] \n MarksEntry\n10       HighList \n HighList + 1\n11     ELSE \n12       IF Mark >= 50\n13         THEN\n14           Middle[MidList] \n Mark\n15           MidList \n MidList\n16         ELSE\n17           Lower[HighList] \n Mark\n18           LowList \n LowList + 1\n19       ENDIF\n20   ENDIF\n21   MarksEntry \n MarksEntry + 1\n22 NEXT MarksEntry = 500\n23 OUTPUT \"You entered \", HighList, \" higher marks\"\n24 OUTPUT \"You entered \", MidList, \" middle marks\"\n25 OUTPUT \"You entered \", LowList, \" lower marks\"\n Identify the four errors in the pseudocode and suggest a correction for each error.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"1 \n0 \n0 ","key":26.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":5,"Question":"(b) \n  The corrected algorithm needs to be changed so that any number of marks may be entered \nand the algorithm runs until the user tells it to stop. \nWrite the new pseudocode statements that would be needed to achieve this and state where \nin the algorithm they would be placed.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"1 ","key":27.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":6,"Question":"\n6 \nThis flowchart represents an algorithm to divide three-digit numbers into hundreds, tens and units.\nThe pre-defined function DIV gives the value of the result of integer division, for example  \nY = 9 DIV 4 gives the value Y = 2 \nThe pre-defined function MOD gives the value of the remainder of integer division, for example  \nR = 9 MOD 4 gives the value R = 1 \nSTART\nIS\nCounter > 7?\nSTOP\nYes\nNo\nINPUT\nNumber\nOUTPUT \"Hundreds: \",\nHundreds, \" Tens: \",\nTens, \" Units: \", Units\nCounter   0\nIS\nNumber < 100?\nYes\nNo\nIS\nNumber > 999?\nYes\nNo\nCounter   Counter + 1\nHundreds   Number DIV 100\nTemp   Number MOD 100\nTens   Temp DIV 10\nUnits   Number MOD 10\nComplete the trace table for the algorithm using this input data:\n97, 876, 4320, 606, 9875, 42, 124\nCounter\nNumber\nHundreds\nTemp\nTens\nUnits\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"0 ","key":28.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":7,"Question":"(a) \n7 \nA school uses a database table, ASSESS, to keep a record of the internal assessments and the \nnumber of candidates for each of the subjects in its curriculum.\nSubjectCode\nSubjectName\nExams\nPracticals\nCandidates\nCOMP\nComputer Science\n2\n1\n200\nINFO\nInformation Technology\n1\n2\n200\nMATH\nMathematics\n3\n0\n350\nPHYS\nPhysics\n2\n1\n120\nCHEM\nChemistry\n2\n1\n120\nBIOL\nBiology\n2\n1\n200\nGEOG\nGeography\n2\n0\n200\nHIST\nHistory\n2\n0\n250\nGEOL\nGeology\n2\n0\n80\nPHED\nPhysical Education\n1\n2\n350\nFREN\nFrench\n2\n2\n120\nENGL\nEnglish\n2\n2\n350\nThis database only allows the data types:\n\u2022 \ntext \n\u2022 \nnumber \n\u2022 \ncurrency \n\u2022 \nBoolean.\n (i) State the most appropriate data type for the fields SubjectCode and Exams.\nSubjectCode  \nExams  \n","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"9(a) \nDECLARE Saying : STRING ","key":29.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":7,"Question":"(ii) \n State one reason why the Candidates field could not be of the Boolean data type.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"9(b) \nOne mark per mark point, max five \nMP1 input a string into Saying \nMP2 correct use of OPENFILE to write data \nMP3 correct use of WRITEFILE to write Saying  \nMP4 correct use of CLOSEFILE  \nMP5 correct use of filename Quotations.txt throughout  \nFor example: \nINPUT Saying \nOPENFILE \"Quotations.txt\" FOR WRITE \nWRITEFILE \"Quotations.txt\", Saying \nCLOSEFILE \"Quotations.txt\" ","key":30.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":7,"Question":"(b) \n Show the output given by the query-by-example grid.\nField:\nSubjectName\nPracticals\nCandidates\nTable:\nASSESS\nASSESS\nASSESS\nSort:\nAscending\nShow:\n3\n3\nCriteria:\n<1\nor:\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"10(a) \nOne mark for each correct answer \nFields 5 \nRecords 12 ","key":31.0},{"Paper_No":"0478_w22_qp_22.pdf","Question_No":7,"Question":"(c) \n  Complete the query-by-example grid to output the subjects with fewer than 150 candidates. \nDisplay only the SubjectCode, SubjectName and Candidates fields in order of the number of \ncandidates from largest to smallest.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"10(b) \nto uniquely identify a record ","key":32.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":1,"Question":"(a) Section A\nYou are advised to spend no longer than 40 minutes answering this section.\nHere is a copy of the pre-release material.\nDO NOT attempt Tasks 1, 2 and 3 now.\nUse the pre-release material and your experience from attempting the following tasks before the \nexamination to answer Question 1.\nPre-release Material\nA program is needed for a window cleaning company to store details of the services provided to their \ncustomers for each cleaning job.\nThe data stored will be used to show the customers exactly what services they are paying for \n(provide an itemised bill). The data will allow the company to find out which services are used most \noften and least often.\nThe services available to customers are:\nService\nCost\nbasic window clean outside, only one floor, up to five windows\n$10.00\nadditional windows up to and including five\n$5.00 \ntwo floors\n10% extra\nthree floors\n15% extra\ninside as well\n25% extra\npolish all windows cleaned\n5% extra\nspecial solar panel clean\n$20.00\nThe total cost of the customer\u2019s bill is calculated in the same order as the rows of the table.\nFor example, a customer who has six windows over three floors is charged $10 + $5 with 15% extra, \ngiving a total bill of $17.25.\nWrite and test a program or programs for the window cleaning company: \n\u2022 \nYour program or programs must include appropriate prompts for the entry of data. Data must be \nvalidated on entry. \n\u2022 \nAll outputs, including error messages, need to be set out clearly and understandably.\n\u2022 \nAll variables, constants and other identifiers must have meaningful names. \nYou will need to complete these three tasks. Each task must be fully tested.\nTask 1 \u2013 setting up the system to store the customer and service details\nSet up your program to:\n\u2022 \nstore a customer name and address in a single dimensional array at the next position\n\u2022 \nuse the array index of this position as the unique number of the itemised bill\n\u2022 \nstore any service required at the same position in the appropriate service array; use an array for \neach service.\nTask 2 \u2013 storing the services for a customer and displaying the itemised bill\nExtend your program to:\n\u2022 \ndisplay the services and the cost of each one\n\u2022 \ninput and store a customer\u2019s details and the services they require\n\u2022 \ncalculate the total cost\n\u2022 \ndisplay the itemised bill including the total cost and the unique number of the bill\n\u2022 \nrepeat as required.\nTask 3 \u2013 providing statistics about the services\nExcluding the basic window clean and the additional windows, find the most popular service and \nthe least popular service. For these two services, display the service name, whether it was the most \nor least popular and the number of times each service was used as a percentage of the total bills \nstored.\n1 \nAll variables, constants and other identifiers must have meaningful names.\n (i) Identify one constant that you could have used for Task 1.\n State the value that would be assigned to the constant.\n Give a reason why a constant was used rather than a variable.\nConstant name  \nValue  \nReason  \n","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"10(c) \nTwo marks for four correct answers. \nOne mark for two or three correct answers. \nField \nData type \nType \nAlphanumeric  \nPrivate \nBoolean   \nRate$ \nInteger  \nNumberGuest Integer  ","key":33.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":1,"Question":"(ii) \n Describe the array that you set up in Task 1 to record the customer details.\n Include the name, data type and sample data for the array in your description.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"10(d) \nOne mark per mark point, max three \n\uf0b7 \ndata correctly extracted in any two rows \n\uf0b7 \ndata correctly extracted in third row \n\uf0b7 \ndata in correct order horizontally and vertically \nExample answer: \nBay Lodge 10 1000 \nCoppice Lodge 12 1200 \nWest Lodge 12 1200 ","key":34.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":1,"Question":"(b) \n Explain how your program allowed only two floors or three floors to be chosen but not both.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"11 \nRead the whole answer: \nCheck if each requirement listed below has been met. Requirements may be met using a suitable built-in function from the \nprogramming language used (Python, VB.NET or Java). \nMark SEEN on script if requirement met, cross if no attempt seen, NE if partially met (see marked scripts). \nUse the tables for A02 and A03 below to award a mark in a suitable band using a best fit approach.  \nThen add up the total.  \nMarks are available for: \n\uf0b7 \nAO2 (maximum 9 marks) \n\uf0b7 \nAO3 (maximum 6 marks) \nData structures required: \nThe names underlined must match those given in the scenario: \nArrays or lists Contacts[] \nVariables \nCurrentSize, Cont, Choice, NewContacts, Count, Count2, Flag \nRequirements (techniques): \nR1 Output menu and input choice, with validation (range check, output with messages, input with prompts). \nR2 Input number of new entries, within limits, update current size of contacts, input new data and sort the array (range \ncheck, totalling, iteration and bubble sort). \nR3 Output array whole contents and delete contents of array (iteration, output with labelling\/messages, array initialisation). ","key":35.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":1,"Question":"(c) \n Write an algorithm for the part of Task 2 that calculates the total cost of the bill. \nAssume that the customer details and services required have already been input.\nUse pseudocode, programming statements or a flowchart.\n  ","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"11 \nExample 15 mark answer in pseudocode \n\/\/ meaningful identifiers and appropriate data structures for  \n\/\/ all data required \nDECLARE Contacts : ARRAY[1:100, 1:2] OF STRING \nDECLARE CurrentSize : INTEGER \nDECLARE Cont : BOOLEAN \nDECLARE Choice : INTEGER \nDECLARE NewContacts : INTEGER \nDECLARE Count : INTEGER \nDECLARE Count2 : INTEGER \nDECLARE Flag : BOOLEAN \nDECLARE Temp1 : STRING \nDECLARE Temp2 : STRING \n\/\/ the number of contacts in the array \nCurrentSize \uf0ac 0 \n\/\/ to allow program to continue indefinitely \nCont \uf0ac TRUE \nWHILE Cont DO \n\/\/ display menu \n    OUTPUT \"Please choose one of the following: \" \n    OUTPUT \"Press 1 to enter new contacts \" \n    OUTPUT \"Press 2 to display your contacts \" \n    OUTPUT \"Press 3 to delete all contacts \" \n    INPUT Choice \n\/\/ validate choice as 1, 2 or 3 \n    WHILE Choice = 1 AND CurrentSize = 100 DO \n        OUTPUT \"Your contacts are full, please enter 2 or 3\" \n        INPUT Choice \n    ENDWHILE \n    WHILE Choice < 1 OR Choice > 3 DO \n        OUTPUT \"Incorrect entry \u2013 please enter 1, 2, or 3\" \n        INPUT Choice \n    ENDWHILE ","key":36.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":1,"Question":"(d) \n Explain how your program completed Task 3.\nAny programming statements that you include in your answer must be fully explained.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"\/\/ enter new contacts \n    IF Choice = 1 \n      THEN \n        OUTPUT \"How many contacts (1 to 5 only)?\" \n        INPUT NewContacts \n\/\/ validates new contacts input \n        WHILE NewContacts < 1 OR NewContacts > 5 DO \n            OUTPUT \"You may only enter between 1 and 5 contacts. Please try again\" \n            INPUT NewContacts \n        ENDWHILE \n\/\/ checks the maximum size is not exceeded \n        WHILE CurrentSize + NewContacts > 100 \n            OUTPUT \"Not enough space in your contacts\" \n            OUTPUT \"The maximum number you may input is \", 100 \u2013 CurrentSize \n            INPUT NewContacts \n        ENDWHILE \n        FOR Count \uf0ac CurrentSize + 1 TO CurrentSize + NewContacts \n            OUTPUT \"Enter the contact name as last name, first name\"  \n            INPUT Contacts[Count, 1] \n            OUTPUT \"Enter the telephone number\"  \n            INPUT Contacts[Count, 2] \n        NEXT Count \n        CurrentSize \uf0ac CurrentSize + NewContacts \n\/\/ bubble sort to sort array if it contains 2 or more contacts \n        IF CurrentSize >= 2 \n          THEN \n            REPEAT \n                Flag \uf0ac FALSE \n                FOR Count \uf0ac 1 TO CurrentSize-1 \n                    IF Contacts[Count + 1, 1] <  \n                      Contacts[Count, 1] \n                        THEN \n                          Flag \uf0ac TRUE \n                          Temp1 \uf0ac Contacts[Count, 1] \n                          Temp2 \uf0ac Contacts[Count, 2] ","key":37.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":2,"Question":"(a) \nSection B starts on page 8.\nSection B\n2  \nAn algorithm has been written to: \n\u2022 \nset all 50 elements of the array Reading[1:50] to zero\n\u2022 \ninput values between 35 and 50 inclusive\n\u2022 \nend the process when an input of \u20131 is made or 50 valid numbers have been entered\n\u2022 \nreject all other values\n\u2022 \ncount the number of times each valid value is input\n\u2022 \noutput the number of times each value has been input, starting with the lowest value.\n Complete the pseudocode algorithm:\n01  FOR Count \n 1 TO  \n02    Reading[Count] \n 0\n03  NEXT Count\n04  Count \n 1\n05  OUTPUT \"Please enter next reading \"\n06  INPUT Value\n07  REPEAT\n08    IF Value < 35 OR  \n09      THEN\n10        OUTPUT \"Reading out of range\"\n11      ELSE\n12        Reading[Value] \n13    Count = Count + 1\n14    ENDIF\n15    IF Count <= 50\n16      THEN \n17        OUTPUT \"Please enter next reading \"\n18       \n19    ENDIF\n20  UNTIL Value = -1 OR Count > 50\n21  Count \n 35 \n22  REPEAT\n23    OUTPUT \"There are \", , \n             \" readings of \", Count\n24    Count \n25  UNTIL Count > 50 \n","Marks":"[6]","Paper_No_Dropped":"0478_s23_ms_23.pdf","Answer":"                          Contacts[Count, 1] \uf0ac Contacts[Count + 1, 1] \n                          Contacts[Count, 2] \uf0ac Contacts[Count + 1, 2] \n                          Contacts[Count + 1, 1] \uf0ac Temp1 \n                          Contacts[Count + 1, 2] \uf0ac Temp2 \n                    ENDIF \n                NEXT Count \n            UNTIL NOT Flag \n        ENDIF \n    ENDIF \n\/\/ display all contacts \n    IF Choice = 2 \n      THEN \n        IF CurrentSize > 0 \n          THEN \n            OUTPUT \"Name and Telephone Number\" \n            FOR Count \uf0ac 1 TO CurrentSize \n                OUTPUT Contacts[Count, 1], \"   \", Contacts[Count, 2] \n                NEXT Count \n        ENDIF \n    ENDIF \n\/\/ delete all contacts \n    IF Choice = 3 \n      THEN \n        FOR Count \uf0ac 1 TO 100 \n            FOR Count2 \uf0ac 1 TO 2 \n                Contacts[Count, Count2] \uf0ac \"\" \n            NEXT Count2 \n        NEXT Count \n    ENDIF \nENDWHILE \nMarking Instructions in italics \nAO2: Apply knowledge and understanding of the principles and concepts of computer science to a given context, including the \nanalysis and design of computational or programming problems \n0 \n1\u20133 \n4\u20136 \n7\u20139 \nNo creditable \nresponse. \nAt least one programming technique \nhas been used. \nAny use of selection, iteration, \ncounting, totalling, input and output. \nSome programming techniques used \nare appropriate to the problem. \nMore than one technique seen applied \nto the scenario, check the list of \ntechniques needed. \nThe range of programming techniques \nused is appropriate to the problem.  \nAll criteria stated for the scenario have \nbeen covered by the use of \nappropriate programming techniques, \ncheck the list of techniques needed. \nSome data has been stored but not \nappropriately. \nAny use of variables or arrays or other \nlanguage dependent data structures \ne.g. Python lists. \nSome of the data structures chosen \nare appropriate and store some of the \ndata required.   \nMore than one data structure used to \nstore data required by the scenario.  \nThe data structures chosen are \nappropriate and store all the data \nrequired. \nThe data structures used store all the \ndata required by the scenario. \nMarking Instructions in italics \nAO3: Provide solutions to problems by:  \n\uf0b7 \nevaluating computer systems \n\uf0b7 \nmaking reasoned judgements \n\uf0b7 \npresenting conclusions \n0 \n1\u20132 \n3\u20134 \n5\u20136 \nNo creditable \nresponse. \nProgram seen without relevant \ncomments. \nProgram seen with some relevant \ncomment(s). \nThe program has been fully \ncommented. \nSome identifier names used are \nappropriate. \nSome of the data structures used have \nmeaningful names. \nThe majority of identifiers used are \nappropriately named. \nMost of the data structures used have \nmeaningful names. \nSuitable identifiers with names \nmeaningful to their purpose have been \nused throughout. \nAll of the data structures used have \nmeaningful names. \nThe solution is illogical. \nThe solution contains parts that may \nbe illogical. \nThe program is in a logical order. \nThe solution is inaccurate in many \nplaces. \nSolution contains few lines of code \nwith errors that attempt to perform a \ntask given in the scenario. \nThe solution contains parts that are \ninaccurate. \nSolution contains lines of code with \nsome errors that logically perform \ntasks given in the scenario. Ignore \nminor syntax errors. \nThe solution is accurate. \nSolution logically performs all the tasks \ngiven in the scenario. Ignore minor \nsyntax errors. \nThe solution attempts at least one of \nthe requirements. \nSolution contains lines of code that \nattempt at least one task given in the \nscenario. \nThe solution meets most of the \nrequirements. \nSolution contains lines of code that \nperform most tasks given in the \nscenario. \nThe solution meets all the \nrequirements given in the question. \nSolution performs all the tasks given in \nthe scenario. ","key":38.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":2,"Question":"(b) \n Describe how the algorithm could be changed to output the number of times each value has \nbeen input, starting with the highest value.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"1(a) \nTwo examples of: \nAny meaningful name for a variable related to Task 1 \u2013 one mark \nCorrect data type related to Task 1 \u2013 one mark \nCorrect purpose related to Task 1 \u2013 one mark \ne.g. \n\u2022 \nLength \/\/ Width \n\u2022 \n\u00ab real  \n\u2022 \n\u00ab to store the length \/\/ width of the patio \n\u2022 \nStoneType \n\u2022 \n\u00ab string  \n\u2022 \n\u00ab to store the type of stone slab chosen by the user \n\u2022 \nPatioArea \n\u2022 \n\u00ab integer \n\u2022 \n\u00ab to store the area of stone needed for the patio \nNote: variable names should not contain spaces or punctuation marks \n6\n1(b) \nTwo from: \n\u2022 \nUse of two one-dimensional arrays \u00ab \n\u2022 \n\u00ab with matching indexes \n\u2022 \n\u00ab each with a specific data types, e.g. string for stone and real for price \n\u2022 \nSize of array \/ number of elements \/ length of each array is 6 \n\u2022 \nMeaningful array names, e.g. Stone and Price  \n2\n1(c) \nFive from: \nMP1 \nPrompt and input for number of rectangles making up the patio \u00ab \nMP2 \n\u00ab and the type of stone to be used \nMP3 \nLoop to input dimensions for rectangles \nMP4 \nPrompt and input for dimensions for each rectangle inside loop \nMP5 \nCalculation of area of a rectangle \nMP6 \nRunning total of area of patio \nMP7 \nLooking up the cost of the stone \nMP8 \nCalculation of cost of stone \u00ab \nMP9 \n\u00abrounded up to the nearest square metre  \nMP10 Output of cost of patio with annotation \nExample \nTotalCost \u2190 0 \nOUTPUT \"Please enter type of stone needed\" \nINPUT StoneType \nOUTPUT \"Please enter the number of rectangles needed\" \nINPUT NumberRectangle \nFOR Counter \u2190 1 TO NumberRectangle \nOUTPUT \"Please enter the length\" \nINPUT Length \nOUTPUT \"Please enter the Width\" \nINPUT Width \nTotalCost \u2190 TotalCost + CostFromTask1(Length, Width, \nStoneType) \n\/\/ use Task 1 to calculate cost \nNEXT Counter \nOUTPUT (\"Total Cost of Patio \" TotalCost \n5\n1(d) \nThree from: \n\u2022 \nExplanation of user input to name the percentage value to be used \n\u2022 \nExplanation of the calculation to add this percentage to the already \ncalculated quantity of stone required \n\u2022 \nExplanation of rounding this value up \n\u2022 \nExplanation of the calculation of the new cost \n\u2022 \nExplanation of the output that will include annotation, quantity of stone to the \nnearest square metre and cost of stone \nIf only program statements given with no explanation, zero marks. \n3\n1(e) \nTwo examples of: \nOne mark for each correct validation check related to patio dimensions in Task 1 \nor Task 2 and one mark for an appropriate related purpose \ne.g. \n\u2022 \nRange check \/\/ Limit check \n\u2022 \n\u00ab to make sure the dimension is entered is greater than zero and less than \nthe maximum size  \n\u2022 \nType check  \n\u2022 \n\u00ab to make sure any dimension entered is a number \n\u2022 \nPresence check  \n\u2022 \n\u00ab to make sure a length\/width has been entered for the area of the patio \n4","key":0.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":3,"Question":"(a) \n3 \nA check digit is to be used to validate an identification number on input. The identification number \ncontains five digits and the check digit. \nThe check digit is calculated by adding up the first five digits, dividing by 10 and taking the \nremainder.\nFor example, 5 + 1 + 2 + 4 + 3 divided by 10 gives a remainder of 5 so the six-digit \nidentification number would be 512435 \n (i) Calculate the check digit for 69321\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":" One mark for each correct row \nDescription \nStructure \ndiagram \nFlowchart \nLibrary \nroutines \nA modelling tool used to show the \nhierarchy of a system ","key":1.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":3,"Question":"(ii) \nWorking space \n State which of these identification numbers have incorrect check digits.\nA 123455\nB 691400\nC 722855\nD 231200\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"A collection of standard programs \navailable for immediate use ","key":2.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":3,"Question":"(b) \nWorking space \n (i) Describe an input error that would not be found using this check digit.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"A graphical representation used to \nrepresent an algorithm ","key":3.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":3,"Question":"(ii) \n Describe a more suitable algorithm to calculate the check digit for this identification \nnumber.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"A graphical representation to show how \na system is broken into sub-systems ","key":4.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":3,"Question":"(c) \n Identify two other validation checks that could be used when inputting this identification \nnumber. \n1  \n2  \n","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"4\n3(a) \n\u2022 \nInputs a series of values  \n\u2022 \nFinds the total \n\u2022 \nPrints out the average  \n3\n3(b) \nThree from: \n\u2022 \nUse of loop structure \n\u2022 \nAllow input to define the limit of the loop \/ use sentinel value \n\u2022 \nKeeping a count of the number of values \n\u2022 \nIt could use a totalling process to keep a running total \n3\n3(c) \nMarks awarded as follows (maximum five marks): \n\u2022 \nInitialise Total \n\u2022 \nEnter limit \n\u2022 \nSuitable loop structure \n\u2022 \nCorrect input \n\u2022 \nCorrect totalling \n\u2022 \nCorrect output \ne.g. \nTotal \u2190 0 \nINPUT CounterLimit \nFOR LoopCounter \u2190 1 To CounterLimit \nINPUT Number \nTotal \u2190 Total + Number \nNEXT LoopCounter \nOUTPUT \u2033The average equals \u2033, Total \/ CounterLimit \n5\n4(a) \nIndex Count Value \nPassMarks \nOUTPUT \n[0] \n[1]\n[2]\n[3]\n[4]\n[5]\n[6]\n[7]  \n0 \n0 \n0 \n58 \n58 ","key":5.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":4,"Question":"(a) \n4 \nThis algorithm makes sure that there are enough wheelbarrows in stock. \nSTART\nINPUT Sale\nIs Sale =\n\"N\"?\nStock   10\nTotal   0\nSTOP\nYes\nNo\nOUTPUT Total\nOUTPUT\n\"Add new stock\"\nIs Stock\n< 5?\nYes\nNo\nStock   Stock \u2013 1\nStock   Stock + 10\nTotal   Total + 1\n Complete the trace table for the algorithm using this input data: \n\u201cY\u201d, \u201cY\u201d, \u201cY\u201d, \u201cY\u201d, \u201cY\u201d, \u201cY\u201d, \u201cN\u201d\nStock\nTotal\nSale\nOUTPUT\n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"1 \n40 ","key":6.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":4,"Question":"(b) \n Explain how you could extend the algorithm to allow for the sale of more than one wheelbarrow \nat a time.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"2 \n67 \n67 ","key":7.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":5,"Question":"(a) \n5 \nA database table, MUSEUM, is used to keep a record of items in the museum. The table has \nthese fields:\n\u2022 \nItemCode \u2013 code for each type of item, for example ART0005\n\u2022 \nDescription \u2013 brief description of each item, for example gold coin\n\u2022 \nInStore \u2013 whether the item is in store or not, for example Y\n\u2022 \nCentury \u2013 century when item made, for example 18\n\u2022 \nCountry \u2013 country of origin, for example China.\n Identify which field you would choose for the primary key.\nState a reason for your choice.\nField  \nReason  \n","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"3 \n85 \n85 ","key":8.0},{"Paper_No":"0478_w22_qp_23.pdf","Question_No":5,"Question":"(b) \n Complete the query-by-example grid to display only the description and the country of origin \nfor those items not in store.\nField:\nTable:\nSort:\nShow:\nCriteria:\nor:\n","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"4 ","key":9.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":1,"Question":"1 \nTick (3) one box to show which operator means less than or equal to.\nA \nOR  \nB \n< \nC \n<=  \nD \n>=  \n","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"3 ","key":10.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":2,"Question":"\n2 \nTick (3) one box to show how a value can be passed to a procedure.\nA \nfunction  \nB \nparameter \nC \nreturn  \nD \nsubroutine \n","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"13 ","key":11.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":3,"Question":"\n3 \nFour descriptions of data and five data types are shown. \nDraw one line to link each description to the most appropriate data type.\nNot all data types will be used.\nDescription \nData type\na whole number\na single letter\na word or phrase\na number with two decimal places\nBOOLEAN\nCHAR\nINTEGER\nREAL\nSTRING\n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"6 \n75 \n75 ","key":12.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":4,"Question":"\n4 \nCircle the three words representing places where data may be stored. \narray    constant    dimension    input\noutput    procedure    variable\n","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"7 \n82 \n82 ","key":13.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":5,"Question":"(a) \n5 \nThe first stage of the program development life cycle is analysis. Two of the tasks in analysis are \nabstraction and decomposition. \n  Describe what is meant by abstraction.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"Number \npassed 5 ","key":14.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":5,"Question":"(b) \n Identify three of the component parts when a problem has been decomposed at the analysis \nstage. \n1  \n2  \n3  \n","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"mark ","key":15.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":5,"Question":"(c) \n  Identify and describe one other stage of the program development life cycle. \n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"mark ","key":16.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":6,"Question":"(a) \n6 \nAn algorithm has been written in pseudocode.\n01 DECLARE A[1:10] : STRING\n02 DECLARE T : STRING\n03 DECLARE C, L : INTEGER\n04 L \n 10\n05 FOR C \n 1 TO L\n06     OUTPUT \"Please enter name \"\n07     INPUT A[C]\n08 NEXT C\n09 FOR C \n 1 TO L\n10     FOR L \n 1 TO 9\n11         IF A[L] > A[L + 1]\n12           THEN\n13             T \n A[L]\n14             A[L] \n A[L + 1]\n15             A[L + 1] \n T\n16         ENDIF\n17     NEXT L\n18 NEXT C\n19 FOR C \n 1 TO L\n20     OUTPUT \"Name \", C, \" is \", A[C]\n21 NEXT C\n State the purpose of this pseudocode algorithm.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"mark ","key":17.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":6,"Question":"(b) \n State four processes in this algorithm.\n1  \n2  \n3  \n4  \n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"mark","key":18.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":6,"Question":"(c) \n Meaningful identifiers have not been used in this algorithm.\nSuggest suitable meaningful identifiers for:\nThe array:\nA \nThe variables:\nT \nC \nL \n","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"mark ","key":19.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":6,"Question":"(d) \n State two other ways the algorithm can be made easier to understand and maintain.\n1  \n2  \n","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_21.pdf","Answer":"mark \n6\n4(b) \nOne from: \n\u2022 \nStores numbers greater than 50 in an array \n\u2022 \nOutputs number of times pass mark has been met \n\u2022 \nFind the number of pass marks \n1\n5(a) \nField name \nExample of data \nCarID \nID07 \nModel \nPegasus \/\/ Apollo \/\/ Cupid \nBodyStyle \nestate \/\/saloon \/\/ hatchback \nDoors \n1 \/\/ 2 \/\/ 3 \/\/ 4 \/\/ 5 \nFuelType \nbatteries \/\/ petrol \/\/ diesel \nOne mark \u2013 1 or 2 suitable names and corresponding examples of data \/\/ 5 \nsuitable field names but all data incorrect \nTwo marks \u2013 3 or 4 suitable names and corresponding examples of data  \nThree marks \u2013 5 suitable names and corresponding examples of data  \nNotes: CarID can be anything that could be used as a unique identifier. e.g. \nNumber Plate \nNumber of doors can be any number of sensible doors for a car \u2013 1, 2, 3, 4, 5.  \nOther data must come from the given text. Allow codes for model and body style.\n3\n5(b) \n\u2022 \nCarID \n\u2022 \nWhich contains unique values to identify each record \n2\n5(c) \nField: \nModel \nFuelType \nDoors \nTable: CAR_RANGE \nCAR_RANGE \nCAR_RANGE \nSort: Ascending \nShow: \n; \n\u0086\n;\n\u0086 \n\u0086 \nCriteria:  \n=\"Petrol\" \nor:  \n1 mark for each completely correct column (maximum three marks) \n3","key":20.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":7,"Question":"(a) \n7 \nConsider this logic circuit.\nA\nB\nX\nC\n Write a logic expression for this logic circuit. Do not attempt to simplify this logic expression. \nX =  \n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"Section A \n1(a)(i) \nData Structure(s) maximum two marks \n\u2022 \nArray  \n\u2022 \nVariable \n\u2022 \nConstant  \nDescription maximum three marks \n\u2022 \nName(s) one or more e.g. Colour \n\u2022 \nData type(s) one or more e.g. String \n\u2022 \nUse(s) one or more e.g. To store the colour of the slab \nAdditional data structure description using the same data structure type \nmaximum one mark \n\u2022 \nTwo or more full descriptions of the data structure including name, data type \nand use \n5\n1(a)(ii) \n\u2022 \nVariable name e.g. ConcretePrice  \n\u2022 \nData type e.g. Real \n\u2022 \nUse e.g. To store the price of the grade of concrete \n3\n1(b) \nThree from: \n\u2022 \nUsing the shape, size and depth \u00ab \n\u2022 \n\u00ab the area of the shape is found \u00ab \n\u2022 \n\u00ab for all except round multiply length by breadth\/show example \u00ab \n\u2022 \n\u00ab for round multiply Pi by half the diameter\/radius squared \u00ab \n\u2022 \n\u00ab multiply the area by the depth to give the volume \n3\n1(c) \nFive from: \nMP1 \nEnter number of slabs to purchase with prompt \nMP2 \nCheck if less than 20 or greater than 100 \u00ab  \nMP3 \n\u00ab if so, reject the number and re-enter a value \nMP4 \nAttempt to round the number of slabs to the next 20 \u00ab  \nMP5 \nAccurate attempt to round up to the next 20 \nMP6 \nCalculate the number of batches \nMP7 \nCalculate price to pay (number of batches \u00d7 price per batch from \nTask 1) \nMP8 \nDisplay price and number of slabs produced \u00ab \nMP9 \n\u00ab Suitable output message(s) \nSample answer \nREPEAT \nPRINT \"Enter Number of slabs to purchase\" \nINPUT Number \nUNTIL Number >= 20 and Number <= 100 \nPurchaseNo \u0004 Number \nIF Number > 20 AND Number <= 40 THEN PurchaseNo \u0004 40 ENDIF \nIF Number > 40 AND Number <= 60 THEN PurchaseNo \u0004 60 ENDIF \nIF Number > 60 AND Number <= 80 THEN PurchaseNo \u0004 80 ENDIF \nIF Number > 80 THEN PurchaseNo \u0004 100 ENDIF \nBatchNo \u0004 PurchaseNo \/ 20 \nPriceToPay \u0004 BatchNo * BatchPrice \/\/BatchPrice calculated \nin Task 1 \nPRINT \"Price for \", PurchaseNo, \" Slabs is $\", PriceToPay \n5\n1 (d) \nFour from explanations: \n\u2022 \nEnter the price of the concrete \n\u2022 \nStore the price of the concrete \n\u2022 \nSet up variable(s) for grades \n\u2022 \nInput the grade \n\u2022 \nThe price that is input is used in the final price calculation instead of 0.05 \n\u2022 \nThe price calculation depends on the grade input e.g. 1.07 \u00d7 price or \nprice + price \u00d7 0.07 for Best \nIf no programming code seen to support at least one explanation maximum of \nthree marks can be awarded. \n4\nSection B \n2  \nOne mark for each error identified and suggested correction: \n\u2022 \nIF TotalTry > Number should be  IF Guess > Number  \n\u2022 \nIF Guess > Number should be IF Guess < Number \n\u2022 \nTotalTry \u2190 Guess + 1 should be TotalTry \u2190 TotalTry + 1 \n\u2022  UNTIL Guess <> Number should be UNTIL Guess = Number \n4\n3(a) \nReject \nCount \nLength \nOUTPUT \n0 \n0 \n0 ","key":0.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":7,"Question":"(b) \n Complete the truth table from the given logic circuit.\nA\nB\nC\nWorking space\nX\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"24.88 ","key":1.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":8,"Question":"(a) \n8 \nA programmer is designing an algorithm to calculate the cost of a length of rope.\nThe program requirements are:\n\u2022 \ninput two values: the length of rope in metres Length and the cost of one metre Cost\n\u2022 \nperform a validation check on the length to ensure that the value is between 0.5 and 6.0 \ninclusive\n\u2022 \ncalculate the price Price\n\u2022 \noutput the price rounded to two decimal places.\nUse the variable names given.\n State the name of the validation check.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"2 \n25.01 ","key":2.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":8,"Question":"(b) \n Complete the flowchart for this algorithm.\nSTART\nSTOP\n","Marks":"[6]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"3 \n24.98 ","key":3.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":8,"Question":"(c) \n Give two different sets of test data for this algorithm and state the purpose of each set.\nSet 1  \nPurpose  \nSet 2  \nPurpose   \n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"4 \n25.00 ","key":4.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":8,"Question":"(d) \n Complete the headings for the trace table to show a dry-run for this algorithm.\nYou do not need to trace the algorithm.\n","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"5 \n25.05 ","key":5.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":8,"Question":"(e) \n Describe an improvement that should be made to the requirements for this algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"6 \n24.99 ","key":6.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":9,"Question":"(a) \n9 \nA model shop wants to set up a database to help with stock control of the model figures available \nfor sale. The shop wants to store this information about the model figures:\nField 1 \u2013 catalogue number, for example MD1234\nField 2 \u2013 description, for example \u2018small white dog\u2019\nField 3 \u2013 number in stock, for example 5\nField 4 \u2013 the price of each model, for example 7.40\nField 5 \u2013 if the model has already been painted, yes or no.\n The shop needs five fields for each record.\nGive a suitable name and data type for each field.\nField 1 name  \nData type  \nField 2 name \nData type  \nField 3 name  \nData type  \nField 4 name  \nData type  \nField 5 name  \nData type  \n","Marks":"[5]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"7 \n24.97 ","key":7.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":9,"Question":"(b) \n (i) Give the name of the field that should be used for the primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"8 \n25.04 ","key":8.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":9,"Question":"(ii) \n State why this field is used as the primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"9 \n25.19 ","key":9.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":9,"Question":"(c) \n Structured query language (SQL) is used to query data stored in this database.\nState what these SQL commands are used for.\nSELECT  \nFROM  \nWHERE  \n","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"10 \n25.07 \nBatch rejected \nOne mark for each correct column max. 4 \n4\n3(b)(i) \n\u2022 Remove Length < 25.1 AND \n1\n3(b)(ii) \nTwo from: \n\u2022 \nCheck the reject counter after each incrementation\/remove reject check \nafter counter = 10 \u00ab \n\u2022 \n\u00ab as soon as Reject = 2 \/ >1 ...  \n\u2022 \n\u00ab reject batch and end  \n2","key":10.0},{"Paper_No":"0478_w23_qp_21.pdf","Question_No":10,"Question":"\n10 Drama students put on a performance of a play for one evening. Seats in a small theatre can be \nbooked for this performance.\nThe theatre has 10 rows of 20 seats. The status of the seat bookings for the evening is held in the \ntwo-dimensional (2D) Boolean array Evening[]\nEach element contains FALSE if the seat is available and TRUE if the seat is booked.\nUp to and including four seats can be booked at one time. Seats are allocated in order from those \navailable. A row or seat number cannot be requested. \nThe array Evening[] has already been set up and some data stored.  \nWrite a program that meets the following requirements:\n\u2022 \ncounts and outputs the number of seats already booked for the evening\n\u2022 \nallows the user to input the number of seats required\n\u2022 \nvalidates the input\n\u2022 \nchecks if enough seats are available:\n\u2013 \nif they are available\n\u25cb \nchanges the status of the seats\n\u25cb \noutputs the row number and seat number for each seat booked\n\u2013 \nif they are not available:\n\u25cb \noutputs a message giving the number of seats left or \u2018House full\u2019 if the theatre is fully \nbooked.\nYou must use pseudocode or program code and add comments to explain how your code works.\nYou do not need to declare any arrays or variables; you may assume that this has already been \ndone.\nYou do not need to initialise the data in the array Evening[]\nAll inputs and outputs must contain suitable messages.\n  ","Marks":"[15]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"One mark for each correct line, up to maximum of three marks. \n3","key":11.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":1,"Question":"1 \nTick (\u2713) one box to complete the sentence.\nVerification is used to make sure that a value entered\nA \nhas not changed during input. \nB \nis an integer. \nC \nis correct. \nD \nis not a string. \n","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"Totalling:  \n\u2022 \nAdding the weight of each basket to the total weight as each weight is \nentered  \n\u2022 \nTotal = Total + Weight  \nCounting:  \n\u2022 \nAdding one to\/incrementing the number of baskets as each weight is \nentered  \n\u2022 \nBasketCount = BasketCount + 1  \n4","key":12.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":2,"Question":"(a) \n2 \nA type of validation check is a length check. Another type of validation check is used to make sure \nthat any date entered is in the dd\/mm\/yyyy style:\ndd means day, mm means month and yyyy means year.\n State the type of validation check used.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w19_ms_22.pdf","Answer":"Constants \nTwo from: \n\u2022 \nThe value cannot be changed accidentally \u00ab \n\u2022 \n\u00ab during the execution of the program \n\u2022 \nValue only needs to be changed once if circumstances change\/during the \ninitialisation process \nVariables \nTwo from: \n\u2022 \nStores a value that can change \u00ab \n\u2022 \n\u00ab during the execution of the program \n\u2022 \nCan use a variable without knowing its value \nArrays \nTwo from: \n\u2022 \nA list of items of the same data type \u00ab  \n\u2022 \n\u00ab stored under a single name  \n\u2022 \nTo reduce the number of variables used \n\u2022 \nAny item can be found using an index number to show its place in the list \n6\n7(a) \n\u2022 \nNumber is repeated\/not unique \n1\n7(b) \n\u2022 \nItem number not displayed\/Amount column not required \n\u2022 \nNot Like \u2018Delivered\u2019 will also show cancelled items \nField: Item number \nOrder number \nStatus \nTable: SALES \nSALES \nSALES \nSort:  \nShow: \n; \n;\n\u0086\n\u0086 \nCriteria:  \nLike \"Not \nstarted\" \nor:  \nLike \"In \nprogress\" \n\u2022 \nCorrect Item number column \n\u2022 \nCorrect Order number column and any additional column not shown \n\u2022 \nCorrect status column \n5","key":13.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":2,"Question":"(b) \n Give one example of normal test data and one example of abnormal test data you should \nuse to make sure the check in part (a) is working properly.\nState a reason for each of your choices of test data.\nNormal  \nReason  \nAbnormal  \nReason  \n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"1(a) \nTwo examples of: \nAny meaningful name for an array related to Task 1 \u2013 one mark, e.g. \n\u2022 \nTileDescription \n\u2022 \nTilePrice \n\u2022 \nTileCode \nCorrect data type and purpose related to Task 1 \u2013 one mark, e.g. \n\u2022 \n\u00ab string to store the name \/ description of the tiles \n\u2022 \n\u00ab real to store the price of the tiles \n\u2022 \n\u00ab string to store the tile codes  \n4\n1(b) \nAny meaningful name for a variable related to Task 2 \u2013 one mark, e.g. \n\u2022 \nNumberOfWalls \n\u2022 \nTotalArea \n\u2022 \nTotalCost \nRelevant data type for the variable related to Task 2 \u2013 one mark, e.g. \n\u2022 \n\u00ab Integer \n\u2022 \n\u00ab Real \nRelevant purpose for the variable related to Task 2 \u2013 one mark, e.g. \n\u2022 \n\u00ab to store the number of walls that need to be tiled \n\u2022 \n\u00ab to store the total area \/ cost \nOne mark for a correct reason, e.g. \n\u2022 \nVariables allow the storage of values within a program that may change as \nthe program runs \/\/ Variables are used to store values that are input or \ncalculated \n4\n1(c) \nSix from: \nMP1 \nInput for height and width of the wall to tile and tile code \nMP2 \nPrompts for all inputs seen \nMP3 \nValidation of height and width \nMP4 \nReasonable attempt at validation of tile code \nMP5 \nCalculation of the area of the wall \nMP6 \nCalculation of the number of boxes rounded up \nMP7 \nLooking up the cost of the tiles \nMP8 \nCalculation of the cost of the boxes of the tiles  \nMP9 \nOutput of area of the wall, the number of boxes and cost of tiles  \nneeded \nMP10 Appropriate message(s) with output \nExample algorithm \nREPEAT \nOUTPUT \"Please enter height of wall \" \nINPUT Height \nUNTIL Height > 0 \nREPEAT \nOUTPUT \"Please enter width of wall \" \nINPUT Width \nUNTIL Width > 0 \nREPEAT \nFound \u2190 FALSE \nCounter \u2190 0 \nREPEAT \nOUTPUT \"Please enter tile identification code \" \nINPUT MyTileId \nIF MyTileId = TileCode(Counter) \nTHEN \nMyCost \u2190 TilePrice(Counter) \nFound \u2190 TRUE \nENDIF \nCounter \u2190 Counter + 1 \nUNTIL Found OR Counter = 10 \nUNTIL Found \nArea \u2190 Height * Width \nNoBoxes \u2190 Int(Round (Area + 0.5))  \n\/\/ Rounds up to nearest Integer \nTotalPrice \u2190 NoBoxes * MyCost \nOUTPUT (\"Area of wall is \", Area, \" metres\") \nOUTPUT (\"Number of boxes of tiles is \", Area, \" NoBoxes) \nOUTPUT (\"Cost of Tiles is \", TotalPrice, \" dollars\" \n6\n1(d) \nThree from: \n\u2022 \nAdding an extra user input for number of walls \u00ab \n\u2022 \n\u00ab using this value as a loop counter \n\u2022 \n\u00ab so that separate inputs of height and width can be made for each wall \n\u2022 \nCalculating a running total for the final area using the results of the area \ncalculation for each wall \n\u2022 \nRounding the final area or using previously rounded areas for the final total \n\u2022 \nDisplaying with a suitable message final area, final number of boxes of tiles \nrequired and final cost \nIf only program statements given with no explanation, zero marks. \n3\n1(e) \nThree from: \n\u2022 \nCheck that only numbers are accepted \/\/ type check \n\u2022 \nCheck that the values are within boundaries \/\/ range check \n\u2022 \nCheck that a value has been entered \/\/ presence check \n\u2022 \nUsing an IF \/ conditional statement \n\u2022 \nIdentification of suitable lower value \/ acceptable value \n\u2022 \nIdentification of suitable upper value \/ unacceptable value \n\u2022 \nAlerting the user with an error message if the input is unacceptable \n3","key":0.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":2,"Question":"(c) \n Describe how a length check could be used with the date entered.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"Two from \n\u2022 \nSub-program \/ system not the whole program \/ system \n\u2022 \nTo perform a frequently used operation within a program \n\u2022 \nThat can be called when needed \n\u2022 \nThat can be reused by another program \n2","key":1.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":3,"Question":"(a) \n3 \nFour pseudocode statements and five pseudocode uses are shown.\n Draw one line to link each pseudocode statement to the most appropriate pseudocode use.\nNot all pseudocode uses will be required.\nPseudocode statement\nCALL Colour(NewColour)\nValue \n (A1 + A2 + A3) \/ 3\nLoop1 \n Loop1 + 1\nIF Count > 7 THEN X1 \n 0\nPseudocode use\ncounting\nfinding an average\ntotalling\nusing a conditional statement \nusing a procedure\n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"\u2022 \nFOR (\u2026 TO \u2026 NEXT)loop  \n\u2022 \nWHILE (\u2026 DO \u2026 ENDWHILE) loop \n\u2022 \nREPEAT (\u2026 UNTIL) loop \n3\n4(a) \n\u2022 \nConditional \/ selection statement \n1\n4(b) \nFour from: \nMP1 \nCASE statement with identifier Response \nMP2 \nCorrect structure used for choices\u00ab \nMP3 \n\u00ab. correct statements used for choices  \nMP4 \nOTHERWISE and correct statement \nMP5 \nSingle ENDCASE included \ne.g. \nCASE OF Response \/\/ CASE Response OF \n1 : X \u2190 X + Y \n2 : X \u2190 X - Y \n3 : X \u2190 X * Y \n4 : X \u2190 X \/ Y \nOTHERWISE OUTPUT \u2033No response\u2033 \nENDCASE \n4\n5(a) \nFirst \nLast \nUserIn \nMiddle \nFound\nOUTPUT \n0 ","key":2.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":3,"Question":"(b) \n A one\u2011dimensional (1D) array called Temperatures[] has 25 elements beginning at \nindex 1. It holds values that range between \u201320 and 100 inclusive.\nWrite a pseudocode algorithm using a single loop to find the lowest value in this array and \noutput the result only once.\nYou do not need to declare or populate this array.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"FALSE \n0 ","key":3.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":4,"Question":"(a) \n4 \nAn algorithm has been written in pseudocode to allow the names of 50 cities and their countries to \nbe entered and stored in a two\u2011dimensional (2D) array. The contents of the array are then output.\n01 DECLARE City ARRAY[1:50, 1:2] OF BOOLEAN\n02 DECLARE Count : INTEGER\n03 DECLARE Out : INTEGER\n04 Count \n 1\n05 IF\n06     OUTPUT \"Enter the name of the city\"\n07     INPUT City[Count, 2]\n08     OUTPUT \"Enter the name of the country\"\n09     INPUT City[Count, 2]\n10     Count \n Count + 1\n11 UNTIL Count = 50\n12 FOR Out \n 1 TO 1\n13     OUTPUT \"The city \", City[Out, 1], \" is in \", City[Out, 2]\n14 NEXT Out\n Identify the four errors in the pseudocode and suggest corrections.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \nError 4  \nCorrection  \n","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"10 ","key":4.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":4,"Question":"(b) \n Describe the changes you should make to the corrected algorithm to allow the name of a \ncountry to be input and to display only the stored cities from that country.\nYou do not need to rewrite the algorithm.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"FALSE \n0 ","key":5.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":5,"Question":"\n5 \nExplain how variables and constants should be used when creating and running a program.\n  ","Marks":"[3]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"10 ","key":6.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":6,"Question":"(a) \n6 \nThe flowchart represents an algorithm that performs a process on groups of values that are input. \nThe algorithm will fail if the first value of any group is 0.\nAn input of \u20131 will terminate the algorithm.\nSTART\nSTOP\nTotal   0\nCount   0\nINPUT\nValue\nIS\nValue = \n0 ?\nIS\nValue = \n\u20131 ?\nNo\nNo\nYes\nYes\nTotal   Total + Value\nCount   Count + 1\nAverage   Total \/ Count\nOUTPUT\n\"Total is \",\nTotal\nOUTPUT\n\"Average is \",\nAverage\n Complete the trace table for the input data:\n25, 35, 3, 0, 57, 20, 25, 18, 0, \u20131, 307, 40, 0\nValue\nAverage\nTotal\nCount\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"FALSE ","key":7.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":6,"Question":"(b) \n Describe the purpose of the algorithm.\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"7 ","key":8.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":7,"Question":"\n7 \nThe string operation SUBSTRING(Quote, Start, Number) returns a string from Quote \nbeginning at position Start that is Number characters long. The first character in Quote is in \nposition 1.\nWrite pseudocode statements to:\n\u2022 \nstore the string \"Learning Never Exhausts The Mind\" in Quote\n\u2022 \nextract and display the words \"The Mind\" from the string\n\u2022 \noutput the original string in lower case.\n  ","Marks":"[5]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"5 \nTRUE \nTRUE \nOne mark per correct column \n6\n5(b) \nTwo from: \n\u2022 \nSearch for the value input \u00ab \n\u2022 \n\u00ab using an array\u00ab \n\u2022 \n\u00ab of sorted data \n2","key":9.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":8,"Question":"\n8 \nExplain why a programmer would use procedures and parameters when writing a program.\n  ","Marks":"[4]","Paper_No_Dropped":"0478_w19_ms_23.pdf","Answer":"One mark for each correct symbol and name \/ description \/ example of use \n(maximum four marks) \nSymbol \nDescription of use \nTerminator \u2013 start \/ end the \nflowchart \nProcess \u2013 to show calculations, \netc. \nInput \/ Output  \nDecision \u2013 to show condition \nContinuation \u2013 to extend the \nflowchart and allow it to join up \n4\n7(a) \n\u2022 \nNumber of Fields: 4  \n\u2022 \nNumber of Records: 32  \n2\n7(b) \n\u2022 \nNo field is suitable as a primary key \u00ab \n\u2022 \n\u00ab because none of the data would be unique \/\/ duplicates could occur \n2\n7(c) \nField: \nFirstName \nLastName \nY10TestScore \nTable: MARKBOOK \nMARKBOOK \nMARKBOOK \nSort:  \nDescending \nShow: \n; \n;\n;\n\u0086 \nCriteria:  \n>=50 \nor:  \nOne mark for each completely correct column down to and including \u2018Show\u2019 row \n(maximum three marks) \nOne mark for correct search criteria rows \n4","key":10.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":9,"Question":"(a) \n9 \nConsider the logic expression:\nZ = (A NAND B) OR NOT (B XOR C)\n Draw a logic circuit for this logic expression.\nEach logic gate must have a maximum of two inputs.\nDo not simplify this logic expression.\nA\nB\nZ\nC\n","Marks":"[4]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"Section A \n1(a) \nFor one array \nOne mark for naming of an array with a suitable data type and one mark for \nits use \nArray \nyearsWithoutClaim \nData type  integer \nUse  \nto store the % discount \nMany correct answers, this is an example only.  ","key":0.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":9,"Question":"(b) \n Complete the truth table from the given logic expression.\nA\nB\nC\nWorking space\nZ\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n1\n1\n1\n0\n0\n1\n0\n1\n1\n1\n0\n1\n1\n1\n","Marks":"[4]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"1(b) \nFor each validation check \nOne mark for identification of a check and one mark for the reason max 4 \nCheck \npresence check \nReason  need to enter age to calculate price \nCheck \ntype check \nReason  need to check age is a positive integer \nMany correct answers, these are examples only.  ","key":1.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":10,"Question":"(a) \n10 A database table called Horses stores details about the horses kept at a horse sanctuary.\nCode\nBreed\nBreedOrigin\nGender\nAge\nArrived\nH002\nArabian\nSaudi Arabia\nM\n5\n28\/09\/2022\nH004\nPercheron\nFrance\nM\n5\n30\/10\/2022\nH010\nFriesian\nNetherlands\nM\n6\n15\/11\/2022\nH011\nFjord\nNorway\nF\n4\n17\/11\/2022\nH012\nClydesdale\nScotland\nM\n10\n18\/11\/2022\nH015\nArabian\nSaudi Arabia\nF\n5\n15\/12\/2022\nH016\nArabian\nSaudi Arabia\nF\n5\n15\/12\/2022\nH017\nClydesdale\nScotland\nF\n4\n16\/01\/2023\nH019\nPercheron\nFrance\nM\n3\n16\/01\/2023\nH025\nPercheron\nFrance\nM\n7\n16\/01\/2023\nH026\nClydesdale\nScotland\nF\n9\n20\/01\/2023\nH030\nClydesdale\nScotland\nM\n12\n20\/01\/2023\nH032\nFjord\nNorway\nM\n3\n24\/03\/2023\nH033\nArabian\nSaudi Arabia\nF\n15\n27\/04\/2023\nH034\nClydesdale\nScotland\nF\n4\n14\/06\/2023\nH035\nFjord\nNorway\nM\n7\n15\/06\/2023\nH036\nFriesian\nNetherlands\nF\n15\n20\/07\/2023\nH037\nFriesian\nNetherlands\nM\n12\n20\/07\/2023\n State the number of records in this database table.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"1(c) \nAny six from: \nMP1 Input with prompt if new customer \nMP2 Check age greater than or equal 26  \nMP3 Check age less than or equal 70 \nMP4 Check number of years without a claim greater than or equal to 2 \u2026 \nMP5 \u2026 discount 10%  \nMP6 Otherwise discount 0% \nMP7 Calculate new price and value of extra discount \nMP8 Output new price and value of extra discount, with suitable message \nSample answer \nPRINT \"Are you a new customer Y\/N?\" \nINPUT new \ndiscount \u2190 0 \nIF new = \"Y\" DO \n  IF age >= 26 AND age <= 70 \n    THEN \n      IF yearsWithoutClaim >=2 \n        THEN \n          discount \u2190 price * 0.1 \n          price \u2190 price * 0.9 \n      ENDIF \n  ENDIF \n  PRINT \"New price\", price \n  PRINT \"Extra discount for new customer\", discount \nENDIF ","key":2.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":10,"Question":"(b) \n Give the name of the field that is most suitable to be the primary key.\nState the reason for this choice.\nField  \nReason  \n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"1(d)(i) \nExplanation \nAny four from: \nMP1 Provide a prompt and input to check if additional driver required \nMP2 Check response with IF\/REPEAT\/WHILE\/CASE statement for yes \nMP3 \u2026 input age of additional driver \nMP4 \u2026 Use of IF \/ REPEAT etc. to validate age \nMP5 \u2026 use the age input to find \/ look up appropriate price increase \nMP6 \u2026 description of how the price to pay now is calculated \nMP7 \u2026 description of how the price to pay now is displayed including the use \nof a suitable message \nFor no \nMP8 \u2026 no output required or suitable message output \nProgramming statements can be used but must be explained. ","key":3.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":10,"Question":"(c) \n The database only allows the data types:\n\u2022 \nBoolean\n\u2022 \ncharacter\n\u2022 \ndate\/time\n\u2022 \ninteger\n\u2022 \nreal\n\u2022 \ntext.\nComplete the table to show the most appropriate data type for each field.\nEach data type must be different.\nField\nData type\nBreed\nGender\nAge\nArrived\n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"1(d)(ii) \nDescription \nAny three from: \nMP1 Use a variable (quotes) to keep a running total of the number of quotes \nprovided \nMP2 Ask, using prompt with input, customers if they are going to purchase \nthe insurance \nMP3 Use another variable (policies) to keep a running total of the number of \ninsurances bought \/ not bought \nMP4 Use these to calculate the percentage policies\/quotes*100 ","key":4.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":10,"Question":"(d) \n Complete the structured query language (SQL) to return the code and breed of all the horses \nwhose breed originated in Scotland.\n Code, Breed,\nFROM \nWHERE  = \"Scotland\";\n","Marks":"[3]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"Section B ","key":5.0},{"Paper_No":"0478_w23_qp_22.pdf","Question_No":11,"Question":"\n11 A wood flooring company stores the names of up to 100 customers in a one\u2011dimensional (1D) array \nCustomers[]. A two\u2011dimensional (2D) array Quotations[] stores details of each customer\u2019s \nquotation:\n\u2022 \nlength of room (one decimal place)\n\u2022 \nwidth of room (one decimal place)\n\u2022 \narea of wood required (rounded up to next whole number)\n\u2022 \nchoice of wood index (whole number)\n\u2022 \nprice of wood required in dollars (two decimal places).\nThe floor measurements (room length and room width) are taken in metres. All floors are rectangles \nand room measurements must be between 1.5 and 10.0 inclusive.\nThe index of any customer\u2019s data is the same in both arrays. For example, a customer named in \nindex 4 of Customers[] corresponds to the data in index 4 of Quotations[]\nThe wood choices available are:\nIndex\nWood type\nPrice per square metre ($)\n1\nLaminate\n29.99\n2\nPine\n39.99\n3\nOak\n54.99\nThe data are stored in two 1D arrays named WoodType[] and Price[]. The index of the wood \ntype and price in their arrays share the same index number.\nWrite a program that meets the following requirements:\n\u2022 \ninput a new customer\u2019s name, room length and room width\n\u2022 \ncheck that each measurement is valid\n\u2022 \noutput an error message and require the measurement to be re\u2011entered until it is valid\n\u2022 \ncalculate the area of the room by multiplying together the length of the room and the width of \nthe room\n\u2022 \ninput the choice of wood and find its price per square metre\n\u2022 \ncalculate the price of the wood needed\n\u2022 \nstore all data in the relevant array\n\u2022 \noutput the customer\u2019s quotation to include: the name of the customer, the choice of wood and \nthe calculated price of the wood required\n\u2022 \ncontinue to accept the next customer.\nYou must use pseudocode or program code and add comments to explain how your code works. \nYou do not need to declare any arrays or variables; you may assume that this has already been \ndone.\nYou will need to initialise WoodType[] and Price[]\nAll inputs and outputs must contain suitable messages.\n  ","Marks":"[15]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"One mark for description of variable \nOne mark for description of constant \nOne mark for inclusion of an example variable \nOne mark for inclusion of an example constant \nExample answer: \nA value that can change during the execution of a program \nA named value that cannot change during the execution of a program \nVariable example - using a counter for example counter \u2190 counter + 1 \nConstant example \u2013 a static value that can be used for checking for example \n< maxAge ","key":6.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":1,"Question":"1  \nTick (3) one box to show which term is an example of a verification check.\nA \nDouble entry check \nB \nFormat check \nC \nLength check \nD \nPresence check \n","Marks":"[1]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"3(a) \nLine 1\/2\/3\/4\/8\/9 \nLines 5\u201311 \nLine 9 \nLine 8 ","key":7.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":2,"Question":"\n2 \nTick (3) one box to show which library routine returns the remainder of a division.\nA \nDIV  \nB \nMOD \nC \nRANDOM \nD \nROUND \n","Marks":"[1]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"3(b) \nOne mark for error and correction \nLine 1 TotalWeight \u2190 0 \nLine 10 move OUTPUT \"Number of bags in the load is \", \nBagCount to end \/ after line 11 \nLine 11 UNTIL TotalWeight > MaxWeight OR BagCount >= MaxBag \nLine 12 OUTPUT \"Total weight of the load is \", TotalWeight ","key":8.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":3,"Question":"(a) \n3 \n Four pseudocode descriptions and five pseudocode keywords are shown. \nDraw one line to link each pseudocode description to the most appropriate pseudocode \nkeyword. Not all pseudocode keywords will be used.\nPseudocode description           Pseudocode keyword\n","Marks":"[4]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"3(c) \nAny four from: \nAfter line 11 \nDivide TotalWeight by  \n\u2026 BagCount \nAssign a new variable AverageWeight \u2190 TotalWeight \/ BagCount  \nOutput the result OUTPUT AverageWeight \nWith a message \"Average weight of a bag of firewood is \" ","key":9.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":3,"Question":"(b)  \n Give two reasons for storing data in a file.\n1  \n2  \n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"4(a) \nOne mark for correct input columns (V, W, X, Y, Z) \nOne mark for correct calculation column A \nOne mark for correct calculation column B  \nOne mark for correct output column \nV \nW \nX \nY \nZ \nA \nB \nOUTPUT ","key":10.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":4,"Question":"(a) \nstores data in a file\nretrieves data from a file\ndisplays data on a screen\nenters data from a keyboard\nOUTPUT\nWRITE\nREAD\nOPEN\nINPUT\n4 \nA programmer is writing a data entry program for booking theatre seats. \nThe programmer needs the program to accept only whole numbers that are greater than or equal \nto one and less than or equal to six.\n Give the names of two validation checks that are required for this program.\n1  \n2  \n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"4 ","key":11.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":4,"Question":"(b) \n Complete this pseudocode to perform your two validation checks, using your answers given \nin (a):\nOUTPUT \"Please enter the number of seats you want to book \"\nINPUT Seats\n ","Marks":"[5]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"2 ","key":12.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":4,"Question":"(c) \n Give one item of test data to use when testing this program.  \nState the reason for your choice of test data.\nTest data  \nReason for choice  \n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"56 ","key":13.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":5,"Question":"(a) \n5 \nAn algorithm has been written in pseudocode to check if a new password is in a list of previously \nused passwords OldList[]  \nIf the password is not found, the new password will be stored at the end of the list to replace \n\"XXXX\" already stored there.\n01 OUTPUT \"Enter your new password \"\n02 INPUT NewPassword\n03 Posn \n 1\n04 Found \n FALSE\n05 REPEAT\n06     IF Password = OldList[Posn]\n07       THEN \n08         Found \n TRUE\n09       ELSE Posn \n Posn + 1\n10     ENDIF\n11 UNTIL Found AND OldList[Posn] = \"XXXX\"\n12 IF Found\n13   THEN\n14     OUTPUT \"Password has been used before\"\n15   ELSE\n16     INPUT \"New password accepted\"\n17     OldList[Posn] \n NewPassword\n18 ENDIF\n Identify the three errors in the pseudocode and suggest corrections.\nError 1  \nCorrection  \nError 2  \nCorrection  \nError 3  \nCorrection  \n","Marks":"[3]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"Valid ","key":14.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":5,"Question":"(b) \n Complete this flowchart for the corrected algorithm:\nSTART\nSTOP\n","Marks":"[6]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"3 ","key":15.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":6,"Question":"(a) \n6 \nThere are three descriptions of logic gates. Each logic gate has two inputs A and B with one \noutput X.\nIdentify each logic gate.\nComplete a truth table for each logic gate.  \n The only time the output is 1 is when both inputs are 1.\nLogic gate \nComplete the truth table for this description.\n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"1 ","key":16.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":6,"Question":"(b) \n The output is 1 when both inputs are different. \nLogic gate \nComplete the truth table for this description.\n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"40 ","key":17.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":6,"Question":"(c) \n The only time the output is 1 is when both inputs are 0. \nLogic gate \nComplete the truth table for this description.\n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"Invalid ","key":18.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":6,"Question":"(d) \nA\nB\nX\n0\n0\n0\n1\n1\n0\n1\n1\nA\nB\nX\n0\n0\n0\n1\n1\n0\n1\n1\nA\nB\nX\n0\n0\n0\n1\n1\n0\n1\n1\n Consider this logic expression:\nX = (NOT A OR NOT B) OR NOT C\nDraw a logic circuit for this logic expression. Each logic gate must have a maximum of two \ninputs. Do not attempt to simplify this logic expression. \nX\nB\nA\nC\n","Marks":"[5]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"6 ","key":19.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":7,"Question":"\n7 \nA program uses both local variables and global variables.\nDescribe two differences between local variables and global variables.\nDifference 1  \nDifference 2  \n","Marks":"[4]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"5 ","key":20.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":8,"Question":"(a) \n8  \nThis is an algorithm to find if a batch of parts has been manufactured successfully. \nAccept\nINPUT PartOK\nIS PartOK\n= 'Y'?\nIS Accept\n= 10 ?\nIS Reject\n> 1 ?\n0\nAccept\nOUTPUT\n\"Too many rejected \",\nError, \"% error\"\nOUTPUT\n\"Success\"\nAccept + 1\nReject\n0\nReject\nReject + 1 \nError\nReject\/Accept * 100\nYes\nYes\nYes\nNo\nNo\nNo\nSTART\nSTOP\n Complete the trace table using this data:\nY, Y, Y, N, Y, Y, Y, Y, N, Y, Y, Y, Y\nAccept\nReject\nPartOK\nError\nOUTPUT\n","Marks":"[5]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"61 ","key":21.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":8,"Question":"(b) \n Describe how the algorithm should be changed to accept \u2018Y\u2019 or \u2018y\u2019 for a successfully \nmanufactured part. \n  ","Marks":"[3]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"Invalid \n0 \n0 \n0 \n0 \n0 ","key":22.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":9,"Question":"(a) \n9 \nA sanctuary for pheasants has set up a new database table called PheasantList to store details \nof the different species of bird at the sanctuary. Part of this table is given, showing: species,  \ndescription, number of birds at the sanctuary, if the birds are breeding or not, and number of \nyoung born this year.\nSpecies\nDescription\nNumberBirds\nBreeding\nYoung\nEdwards\nblue-black with white tail\n5\nYes\n0\nJapanese green\ndark green with pale grey tail\n2\nYes\n2\nReeves\ngolden, white and red scaled plumage\n4\nYes\n1\nCrawfords Kalij\nglossy blue-black plumage\n4\nNo\n0\nCrested fireback\nblue-black with black tail\n3\nNo\n0\nTrue silver\nwhite laced top half and black lower half\n7\nYes\n1\nSiamese fireback\ngrey plumage with crimson legs and feet\n5\nNo\n0\nMikado\niridescent plumage with white striped wings\n3\nYes\n4\nRed junglefowl\nmany colours\n2\nYes\n0\nHimalayan monal\nmany colours with metallic green crest\n3\nYes\n2\nWhite eared\nwhite with ear tufts\n5\nYes\n3\nBrown eared\nbrown with ear tufts\n9\nYes\n1\nRing necked\nlong tail with white ring neck\n2\nYes\n2\nGolden\nrainbow coloured\n3\nYes\n4\n State the number of records and fields in this part of the database table.\nRecords \nFields \n","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"4(b) \n\u2022 \n(Use first four digits input to) calculate a check digit  \n\u2022 \nCheck if the check digit input is valid ","key":23.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":9,"Question":"(b) \n (i) Give the name of a field that could be used for the primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"5(a) \n6 fields \n9 records ","key":24.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":9,"Question":"(ii) \n Explain why the sanctuary might decide not to use the field in (b)(i) as the primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"5(b) \nEither mark by row or by column but not both \nOne each correct row or one mark for each correct column max two \nKoala3  \nAustralia \nSkyKing \nEurope ","key":25.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":9,"Question":"(iii) \n A new field SpeciesID is added to the database table. \n This field contains a six-character code, for example Ph0001.\n Give a reason why this field would be a better primary key.\n  ","Marks":"[1]","Paper_No_Dropped":"0478_w20_ms_21.pdf","Answer":"5(c) \nField: \nAirline name \nNumber of \ncountries \nHead office \nTable: \nAIRLINE \nAIRLINE \nAIRLINE \nSort: \nShow: \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria: \n> 4 \n=\"Asia\" \nor: \n> 4 \n=\"Africa\" \none mark for correct fields and correct table names, must have the three \ncolumns required, ignore another column provided the show row is not ticked \nand there are no criteria set for that column \none mark for correct show row \none mark for correct number of countries criteria \none mark for correct head office criteria \n4 ","key":26.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":9,"Question":"(c) \n Write the output that would be given by this structured query language (SQL) statement:\nSELECT Species, Description\nFROM PheasantList\nWHERE NumberBirds > 6;\n  ","Marks":"[2]","Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1(a)(i) \nAny meaningful name for an array related to Task 1 \u2013 one mark e.g. \nSysStore \nSysPrice \nCorrect purpose related to Task 1 \u2013 one mark e.g. \n\u2026to store the system (components) that have been purchased \n\u2026to store the (total) price of the system (being purchased) ","key":0.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":9,"Question":"(d) \n Complete this SQL statement to display all the species of pheasant where the birds are \nbreeding and there were no young born this year:\nSELECT  \nFROM  \nWHERE  \n   ;\n","Marks":"[4]","Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1(a)(ii) \nAny meaningful name for a variable related to Task 2 \u2013 one mark e.g. \nComponent \nTotalPrice \nCorrect purpose related to Task 2 - one mark e.g. \n\u2026 to allow input of a component code \n\u2026 to store\/calculate the running total price of the system ","key":1.0},{"Paper_No":"0478_w23_qp_23.pdf","Question_No":10,"Question":" \n10 A weather station takes temperature readings once an hour for a week. These temperatures are \nstored in a two-dimensional (2D) array Temperatures[] \nEach column contains 24 readings for a single day. The first temperature is recorded at 00:00 and \nthe final temperature at 23:00. There are seven columns, one for each day of the week, starting \nwith Monday and ending with Sunday.\nThe variables MaxDay, MinDay and AvDay are used to store the maximum, minimum, and \naverage temperatures for a day. The variables MaxWeek, MinWeek and AvWeek are used to store \nthe maximum, minimum, and average temperatures for the week.\nThe array has already been set up and the data stored.  \nWrite a program that meets the following requirements:\n\u2022 \nfinds the maximum and minimum temperatures for each day\n\u2022 \ncalculates the average temperature for each day\n\u2022 \noutputs for each day:\n\u2013 \nname of the day, for example Monday\n\u2013 \nmaximum temperature \n\u2013 \nminimum temperature\n\u2013 \naverage temperature\n\u2022 \nfinds the maximum and minimum temperatures for the week\n\u2022 \ncalculates the average temperature for the week\n\u2022 \noutputs:\n\u2013 \nmaximum temperature for the week\n\u2013 \nminimum temperature for the week\n\u2013 \naverage temperature for the week.\nAll temperatures output must be rounded to two decimal places.\nYou must use pseudocode or program code and add comments to explain how your code works. \nAll inputs and outputs must contain suitable messages.\nYou do not need to declare any arrays or variables; you may assume that this has already been \ndone.\nYou do not need to initialise the data in the array Temperatures[]\n  ","Marks":"[15]","Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1(a)(iii) \nAny meaningful name for a constant related to Task 3 \u2013 one mark e.g. \nOffer5 \nOffer10 \nCorrect purpose related to Task 3 - one mark e.g. \n\u2026 to store the one option discount rate \n\u2026 to store the two-option discount rate ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1(b) \nMark as either: \nTwo distinct different points  \nOR \nOne point and an expansion \nExample answers: \nReal data can be used in calculations directly (which is required of the Price \ndata) (1) \nData can be stored with decimal places (1) \nReal numbers can be used in calculations (1) which is not possible with strings \n(1) ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1(c) \nAny six from: \nMP1 \nAt least one input (case, RAM, HDD) \nMP2 \nAll three inputs fully prompted \nMP3 \nAn attempt at validation of input \nMP4 \nOne complete validation of input with error message \nMP5 \nFinding the price for one chosen item \nMP6 \nFinding the prices of the other two chosen items correctly \nMP7 \nCalculation of price of the chosen items  \nMP8 \n\u2026add the basic components cost to the cost of the chosen items \nMP9 \nStorage of chosen items \nMP10 \nOutput to show chosen items and price of the computer (with \nappropriate message) \nExample answer: \nOUTPUT \"Which type of Case would you like? Input the Item \nCode\" \nComponentFlag \u2190 False \nWHILE ComponentFlag = False \n  INPUT CaseCode \n  Count \u2190 0 \n  WHILE Count<2 DO \n    IF CaseCode = ComponentCode[Count] \n      THEN \n        CaseIndex \u2190 Count \n        ComponentFlag \u2190 True \n        Count \u2190 2 \n    ENDIF \n    Count \u2190 Count + 1 \n  ENDWHILE \n  IF ComponentFlag = False \n    THEN \n      OUTPUT \"Your case Item Code doesn\u2019t exist, please \ntry again\" \n  ENDIF \nENDWHILE \nOUTPUT \"Which type of RAM would you like? Input the Item \nCode\" \nComponentFlag \u2190 False \nWHILE ComponentFlag = False \n  INPUT RAMCode \n  Count \u2190 2 \n  WHILE Count<5 DO \n    IF RAMCode = ComponentCode[Count] \n      THEN \n        RAMIndex \u2190 Count \n        ComponentFlag \u2190 True \n        Count \u2190 5 \n    ENDIF \n    Count \u2190 Count + 1 \n  ENDWHILE ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1(c) \n  IF ComponentFlag = False \n    THEN \n      OUTPUT \"Your RAM Item Code doesn\u2019t exist, please try \nagain\" \n  ENDIF \nENDWHILE \nOUTPUT \"Which type of Primary Hard Disk Drive would you \nlike? Input the Item Code\" \nComponentFlag \u2190 False \nWHILE ComponentFlag = False \n  INPUT PHDDCode \n  Count \u2190 5 \n  WHILE Count<8 DO \n    IF PHDDCode = ComponentCode[Count] \n      THEN \n        HDDIndex \u2190 Count \n        ComponentFlag \u2190 True \n        Count \u2190 8 \n    ENDIF \n    Count \u2190 Count + 1 \n  ENDWHILE \n  IF ComponentFlag = False \n    THEN \n      OUTPUT \"Your Primary HDD Item Code doesn\u2019t exist, \nplease try again\" \n  ENDIF \nENDWHILE \nTotalPrice \u2190 200 + ComponentPrice[CaseIndex] + \nComponentPrice[RAMIndex] + ComponentPrice[HDDIndex] \nOUTPUT \"Your computer consists of \", \nDescription[CaseIndex], \" case, \", Description[RAMIndex], \n\" RAM and \", Description[HDDIndex], \" Primary Hard Disk \nDrive.\" \nOUTPUT \"The total price of your computer is $\", TotalPrice \n1(d) \nAny four from: \nMP1 \nExplanation of how the number of additional parts is stored \nMP2 \nExplanation of counting of additional parts being added to the system \nMP3 \nExplanation of determination of additional parts being 1, or more  \nthan 1 \nMP4 \nExplanation of using the correct percentage discount \nMP5 \nExplanation of calculating the money saved and finding the new price \nMP6 \nExplanation of correct output of money saved and new price ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1(e) \nAny two from: \nMP1 \nPrompt and input to ask buyer how many computers they wish to \npurchase (at the start) \/\/ When the first computer is complete, prompt \nand input to ask if they would like to purchase another computer \nMP2 \nIntroduce an appropriate loop structure \nMP3 \nNew storage for more than one computer \/\/ Enable the ordering of \nmultiple computers of the same specification ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"Section B ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"Statement \ntrue \n(\uf0fc) \nfalse \n(\uf0fc) \nA subroutine is called from within a program. \n\uf0fc \nA subroutine is not a complete program. \n\uf0fc \nA subroutine is a self-contained piece of code. \n\uf0fc \nA subroutine must return a value to the code from \nwhich it was called.  \n\uf0fc \nTwo marks for four correct rows \nOne mark for any two correct rows ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"3 \nOne mark for each correct type of test and one mark for each correct \naccompanying example of test data and reason (max six) e.g. \n\u2022 \nExtreme data \n\u2022 \n5000 \n\u2022 \nto check it is accepted \n\u2022 \nNormal data \n\u2022 \n300 \n\u2022 \nTo check it is accepted \n\u2022 \nAbnormal data \n\u2022 \n10000 \n\u2022 \nTo check it is rejected ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"4 \nAny six from: \nMP1 \nInitialisation of Higher to 0 before the loop  \nMP2 \nUse of IF statement \nMP3 \nCorrect condition in IF statement \nMP4 \nCorrect counting statement inside loop \nMP5 \nOUTPUT\/PRINT statement with correct reference to Higher \nMP6 \nAppropriate message in output \nMP7 \nCorrect location of OUTPUT and IF statements \nHigher \u2190 0 \nFOR Count \u2190 1 TO 5000  \n  INPUT Number[Count] \n  IF Number[Count] > 500 \n    THEN  \n      Higher \u2190 Higher + 1     \n  ENDIF \nNEXT Count \nOUTPUT \"There are \", Higher, \" values that are greater than \n500\"  ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"5(a) \nFlag \nCount \nNum \n[0] \nNum \n[1] \nNum \n[2] \nNum \n[3] \nNum \n[4] \nStore \n45 \n56 \n30 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"15 \n0 \n0 \n45 \n56 ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"45 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"2 ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"12 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"12 \n0 \n0 ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"2 ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"One mark \u2013 Flag column \nOne mark \u2013 Count column \nOne mark \u2013 Num[0] and Num[1] columns \nOne mark \u2013 Num[2], Num[3] and Num[4] columns \nOne mark \u2013 Store column ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"5(b) \nAny two from: \n\u2022 \nThe algorithm sorts\/orders numbers \n\u2022 \n\u2026 into descending order \/ from largest to smallest ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"6 \n                      Input\/Output                                           Decision \nOne mark for each correct symbol  ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"7(a) ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"1 \n7(b) \nOne mark for correct fieldname and one mark for correct reason \nPartNum \nThe data stored in this field is unique for each record ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_22.pdf","Answer":"7(c) \nField: PartNum \nDescription \nCost \nQuantity \nTable: AUDIOPARTS \nAUDIOPARTS \nAUDIOPARTS \nAUDIOPARTS \nSort:  \nDescending \nShow: \n\uf0fe \n\uf0fe \n\uf0fe \n\uf0fe \nCriteria:  \n<10 \nor:  \nOne mark for correct field and table rows \nOne mark for sort row \nOne mark for show row \nOne mark for correct criteria \n4 ","key":23.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"Section A \n1(a) \nConstant name MaxSalad \nValue  ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"Use  \nStoring the salad items a baguette can have \nVariable name \nOrderNumber \nData type \ninteger \nUse  \nstoring the next order number available \nMany correct answers, this is an example only.  ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"1(b)(i) \nAny five from: \nMP1 Display fillings available \nMP2 Prompt and entry of filling choice \nMP3 Only accept one correct filling \nMP4 Prompt and entry of number of salads \nMP5 Only accept 0 to 3 inclusive \nMP6 Display salads available \nMP7 Prompt and entry of correct number of salad choices \nMP8 Only accept correct salad choices \nMP9 At least one error message for incorrect data entry \nExample answer: \nREPEAT \n    PRINT \"Beef        1\" \n    PRINT \"Chicken     2\" \n    PRINT \"Cheese      3\" \n    PRINT \"Egg         4\" \n    PRINT \"Tuna        5\" \n    PRINT \"Turkey      6\" \n    OUTPUT \"Please enter your choice of filling\" \n    INPUT Filling \nUNTIL Filling >=1 AND Filling <=6 \nPRINT \"Lettuce      1\" \nPRINT \"Tomato       2\" \nPRINT \"Sweetcorn    3\" \nPRINT \"Cucumber     4\" \nPRINT \"Peppers      5\" \nREPEAT \n  PRINT \"How many salads do you want\" \n  INPUT NumSalad \nUNTIL NumSalad >= 0 and NumSalad <=3 \nWHILE NumSalad >0 DO \n  PRINT \"Enter Salad \", NumSalad \n  OUTPUT \"Please enter your choice of salad\" \n  INPUT SaladType \n  CASE SaladType OF \n    1: NumSalad \uf021 NumSalad \u2013 1 \n    2: NumSalad \uf021 NumSalad \u2013 1 \n    3: NumSalad \uf021 NumSalad \u2013 1 \n    4: NumSalad \uf021 NumSalad \u2013 1 \n    5: NumSalad \uf021 NumSalad \u2013 1 \n    OTHERWISE: PRINT \"Error\" \n  ENDCASE \n  Salad[NumSalad] \uf021 SaladType \nENDWHILE ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"1(b)(ii) \nAny three from: \nMP1 Provide a method of inputting the filling selection  \nMP2 Check input is a correct filling e.g. using a CASE statement \nMP3 If not output a suitable error message \nMP4 If not provide a suitable method to re-input e.g. use of REPEAT\u2026UNTIL ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"1(c) \nAny two from: \nMP1 Store three sizes of baguette e.g. add third baguette size to array \nMP2 Change the prompt to output three sizes of baguettes  \nMP3 Change the selection statement to allow for a third size of baguette e.g. \nIF\/REPEAT\/WHILE\u2026 ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"1(d) \nExplanation \nAny four from: \nMP1 check the total for each of the baguette fillings e.g. use of FOR loop \nMP2 use of two variables one for most popular filling and one for least \npopular filling \nMP3 method used to select the largest value as the most popular e.g. use of \nIF statement \nMP4 method used to select the smallest value as the least popular e.g. use of \nIF statement \nMP5 Use these values to calculate percentages \nMP6 \u2026 with the total number of baguettes sold \nMP7 Display results including suitable messages e.g. use of PRINT \nstatement \u2026 \nProgramming statements can be used but must be explained. ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"Section B \n2(a) \nLine 1\/2\/8\/12 \nLine 3 and\/or 14 \nLine 8\/12 \nLine 6\/10\/15\/19 ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"2(b) \nOne mark for error and correction \nLine 02  TooCold \u2190 0 \nLine 08  TooCold \u2190 TooCold + 1 \nLine 15  IF TooHot > 5 \nLine 17  OUTPUT \"Alarm!!\"  ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"2(c) \nAny four from: \nAdd a new variable inRange \u2026 \n\u2026 set to zero at start of algorithm \nAdd extra IF statement  \nIF temperature >= -25 AND temperature <= -18  \nUpdate inRange by 1 if true ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"3 \nOne mark for each correct line ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"4(a) \nOne mark for each correct column  \nY \nZ \nA \nOUTPUT ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"4 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"Invalid ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"2 \n0 \nValid ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"9 \n0 \nValid ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"2 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"Invalid ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"6 \n0 \nValid \n0 \n0 ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"4(b) \nAny two from: \nChecking if the remainder, when the larger number is divided by the smaller \nnumber, is zero \nTo see if the larger number is a multiple of the smaller number \nTo see if the smaller number is a factor of the larger number ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"5(a) \n5 fields \n9 records ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"5(b) \nOne mark for each correct column max two,  \nOr two correct rows one mark \nShort-tailed Albatross \nY \nEmperor Penguin \nY \nYellow-eyed Penguin \nY ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w20_ms_23.pdf","Answer":"5(c) \nField: \nCreature \nQuantity \nOffspring \nReady for \nrelease \nTable: \nMARINE \nMARINE \nMARINE \nMARINE \nSort: \nAscending \nShow: \n\uf0fe \n\uf06f \n\uf06f \n\uf06f \nCriteria: \n=N \n=Y \nor: \nOne mark for each correct field and table rows \nOne mark for sort row \nOne mark for show row \nOne mark for correct criteria \n4 ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"Section A \n1(a) \nConstant  \nNoCourts \/\/ NoSessions \/\/ NoBookingSlots \nValue  \n8 \/\/ 10 \/\/ 80 \nUse  \nStoring the number of courts \/ sessions available \/ times and courts available for booking ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"1(b) \nAny four from: \nAny three from \nMP1 \nIdentifier \/ name of array used  \nMP2 \nDescription of purpose of an identified array \nMP3 \nLength of an identified array used  \nMP4 \nType of data in an identified array  \nMP5 \nExplanation of number of arrays used, must be capable of storing all data required  \nMP6 \nSample data for an identified array \nOne mark \nMP7 \nIdentifying more than one array \nE.g.4 arrays of ten elements for each squash court, for example for squash court 1 Availability1 of type Boolean, \nGuest1, Mobile1 and Code1 all type string ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"1(c) \nAny three from: \nMP1 \nSetting the first code number \nMP2 \nHow to find subsequent code numbers \nMP3 \nHow to ensure they were unique \nMP4 \nHow to ensure they were exactly 4 digits ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"1(d) \nAny six from: \nMP1 \nInput time  \nMP2 \n\u2026 with prompt \nMP3 \nCheck each court  \nMP4 \nIf court not booked \u2026 \nMP5 \n\u2026 set as booked \nMP6 \nInput name, mobile number \nMP7 \nCalculate unique 4-digit code \nMP8 \nStore name, mobile number and 4-digit code in an array \nMP9 \nDisplay mobile number and 4-digit code with suitable message \nMP10 Change mobile number if necessary \nSample \nOUTPUT (\"Which time do you want to book a squash court\") \nINPUT BookTime \nBooked \u2190 FALSE \nCourtNumber \u2190 0 \nIF BookTime >= 8 AND BookTime <= 17 \n  THEN \n  BookTime \u2190 BookTime - 7 \n    IF Available1[BookTime] THEN Available1[BookTime] \u2190 FALSE; CourtNumber \u2190 1; Booked \u2190 \nTRUE ENDIF \n    IF NOT Booked AND Available2[BookTime] THEN Available2[BookTime] \u2190 FALSE; CourtNumber \n\u2190 2; Booked \u2190 TRUE ENDIF \n    IF NOT Booked AND Available3[BookTime] THEN Available3[BookTime] \u2190 FALSE; CourtNumber \n\u2190 3; Booked \u2190 TRUE ENDIF \n    IF NOT Booked AND Available4[BookTime] THEN Available4[BookTime] \u2190 FALSE; CourtNumber \n\u2190 4; Booked \u2190 TRUE ENDIF \n    IF NOT Booked AND Available5[BookTime] THEN Available5[BookTime] \u2190 FALSE; CourtNumber \n\u2190 5; Booked \u2190 TRUE ENDIF \n    IF NOT Booked AND Available6[BookTime] THEN Available6[BookTime] \u2190 FALSE; CourtNumber \n\u2190 6; Booked \u2190 TRUE ENDIF \n    IF NOT Booked AND Available7[BookTime] THEN Available7[BookTime] \u2190 FALSE; CourtNumber \n\u2190 7; Booked \u2190 TRUE ENDIF ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"1(d) \n    IF NOT Booked AND Available8[BookTime] THEN Available8[BookTime] \u2190 FALSE; CourtNumber \n\u2190 8; Booked \u2190 TRUE ENDIF \n    IF NOT Booked OUTPUT(\"No court available at \", BookTime + 7) \nENDIF \nIF Booked \n  THEN \n    OUTPUT (\"Please enter your name\")  \n    INPUT Name \n    Code \u2190 Code + 1 \n    Correct \u2190 \"N\" \n    WHILE Correct = \"N\" DO \n      OUTPUT (\"Please enter your mobile number\") \n      INPUT Mobile \n      OUTPUT (\"Is Your mobile number correct Y\/N? \", Mobile, \" Your court number is \", \nCourtNumber, \" Your entry code is \", Code) \n      INPUT Correct \n    ENDWHILE \n    CASE CourtNumber OF \n      1 : Guest1[BookTime}\u2190 Name; Mobile1[BookTime] \u2190 Mobile; Code1[BookTime] \u2190 Code \n      2 : Guest2[BookTime}\u2190 Name; Mobile2[BookTime] \u2190 Mobile; Code2[BookTime] \u2190 Code \n      3 : Guest3[BookTime}\u2190 Name; Mobile3[BookTime] \u2190 Mobile; Code3[BookTime] \u2190 Code \n      4 : Guest4[BookTime}\u2190 Name; Mobile4[BookTime] \u2190 Mobile; Code4[BookTime] \u2190 Code \n      5 : Guest5[BookTime}\u2190 Name; Mobile5[BookTime] \u2190 Mobile; Code5[BookTime] \u2190 Code \n      6 : Guest6[BookTime}\u2190 Name; Mobile6[BookTime] \u2190 Mobile; Code6[BookTime] \u2190 Code \n      7 : Guest6[BookTime}\u2190 Name; Mobile7[BookTime] \u2190 Mobile; Code7[BookTime] \u2190 Code \n      8 : Guest8[BookTime}\u2190 Name; Mobile8[BookTime] \u2190 Mobile; Code8[BookTime] \u2190 Code \n    ENDCASE \n    NoCoutsBooked[BookTime] \u2190 NoCoutsBooked[BookTime] - 1 \n  ELSE  \n    OUTPUT (\"Court not booked\u201d) \nENDIF \n1(e) \nExplanation \nAny four from \nMP1 \nHow the program totalled the number of bookings \nMP2 \nHow the program displayed the total number of bookings \nMP3 \nHow the program calculated the number of times each court was booked \nMP4 \nHow the program selected the highest value for times a court was booked \nMP5 \nHow the program displayed the court that was most booked \nProgramming statements must be included and must be explained. ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"Section B \n2(a) \nLine 1 should be Counter \u2190 0 \nLine 3 RandNum[Counter] \u2190 Rand(1, 100)should be RandNum[Counter] \u2190 Rand(1, 101) \nLine 4 Counter \u2190 Counter + 2 should be Counter \u2190 Counter + 1 \nLine 5 UNTIL Count <= 50 should be UNTIL Counter >= 50 \/\/ UNTIL Counter = 50 ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"Counter \u2190 0 ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"REPEAT ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"    RandNum[Counter} \u2190 Rand(1, 100) ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"    Counter \u2190 Counter + 1 ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"UNTIL Counter >= 50 \nOr  \nLine 3 RandNum[Counter] should be RandNum[Count] \nLine 3 Rand(1, 100)should be Rand(1, 101) \nLine 4 Counter \u2190 Counter + 2 should be Count \u2190 Count + 1 \nLine 5 UNTIL Count <= 50 should be UNTIL Count >= 50 \/\/ UNTIL Count = 50 ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"Count \u2190 0 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"REPEAT ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"    RandNum[Count} \u2190 Rand(1, 100) ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"    Count \u2190 Count + 1 ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"UNTIL Count >= 50 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"2(b) \nOne mark for each correct line \nFOR Count \u2190 0 TO 49 \/\/ FOR Count \u2190 1 TO 50 \n  RandNum[Count] \u2190 Rand(1, 101) \/ Rand(0, 101) \nNEXT \/\/ NEXT Count ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"2(c) \nPrecondition loop \/\/ WHILE \u2026 DO \u2026 ENDWHILE ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"3(a)(i) \none mark for sample, one mark for reason max four  \nNormal Sample \n any positive value with three decimal places e.g. 5.682 \nReason  \n to test that normal data is accepted and processed correctly \nErroneous Sample  any value that would be rejected e.g. 5.6 or -1.345 or seven \nReason  \n to test that erroneous data is rejected ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"3(a)(ii) \nReason to test that 0.000 \/ -0.001 \/ highest possible non-positive is rejected and 0.001 \/ 0.000 \/ lowest positive number is \naccepted \nSample 1  0.000  \nSample 2  0.001  ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"3(b) \nOne mark \nTo check that values are entered as intended \/\/ to prevent incorrect values that meet the validation criteria being accepted \nTwo marks \nAsking the user to enter the value twice and comparing the values \/\/ double entry (1) only accepting a value if both entries \nare identical (1) \nor \nDisplaying the value as it is entered (1) so the user can put right errors have been made as the value was entered (1) ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"4 \nOne mark for each correct column \nCounter Distinction \nMark \nAward \nOUTPUT \n0 \n0 ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"1 \n88 ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"74 ","key":23.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"60 ","key":24.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"2 \n90 ","key":25.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"3 \n84 ","key":26.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"4 \n87 ","key":27.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"5 \n95 ","key":28.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"72 ","key":29.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"6 \n84 ","key":30.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"66 \n-1 \n0.6 \nHighly Commended ","key":31.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"5(a) \nCATEGORY \u2013 Text characters \/ words only used \nPRICE \u2013 Currency, the price is in dollars \/ money \nCODE \u2013 Text no calculations required, could be numbers or characters \nSTOCK \u2013 Number, comparisons and calculations may be required  ","key":32.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_21.pdf","Answer":"5(b) \nOne mark for correct rows Field and Table \nOne mark for correct Show row \nOne mark for correct Criteria row \nField: CATEGORY \nMANUFACTURER \nCODE \nECONOMYRATING \nTable: APPLIANCE \nAPPLIANCE \nAPPLIANCE \nAPPLIANCE \nSort:  \nShow: \n\uf0fe \n\uf0fe \n\uf0fe \n\uf06f \nCriteri\na: \n=\"A\" \nor:  \n3 ","key":33.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"Section A \n1(a)(i) \nOne mark per point \n\u2022 \nVariable \nPassengerID\/\/ StartStage \n\u2022 \nUse  \nStoring the unique ID number of the passenger\/\/ Storing\/inputting the start stage of the journey ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"1(a)(ii) \nOne mark per point \nMP1 Name of array \nMP2 Data type of array \nMP3 Sample data for array \nMP4 Use of array \nMP5 At least two complete arrays with all of the above \nArray name  \nData type Sample data Use \nJourneyStage1 string \nC1 \nto store the code for the home to start station \nPriceStage1  real  \n1.50 \nto store the price of first stage of the journey ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"1(b) \nOne mark per bullet point \nMP1 \nUse of validation check, e.g. range check, type check, presence check, length check, format check \nMP2 \nUse of conditional statement to check if the validation fails ... \nMP3 \n\u2026 a re-entry is requested \nMP4 \nUse of loop to repeat the process until an acceptable answer is input \nMP5 \nMore than one appropriate validation check used \/ described. ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"1(c) \nAny six from: \nMP1 \nConditional statement to check departure time against 10:00 \nMP2 \n\u2026 calculate 40% discount \/\/ calculate 60% of the original price \nMP3 \n\u2026 calculate discounted total price \nMP4 \nOutput the discounted total price  \nMP5 \nOutput the booking details with suitable messages \nMP6 \nInput with prompt for passenger confirmation \u2026 \nMP7 \n\u2026 attempt at action following the confirmation input \nMP8 \nRepeating booking data entry if incorrect \nMP9 \nRe-checking journey details for correctness ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"1(c) \nExample answer \n\/\/ Tasks 1 and 2 completed \nIF CollectedTime[Index] > 10:00  \n  THEN \n    JourneyCost[Index] \u2190 JouneyCost[Index] * 0.6 \nENDIF \nPRINT \"Your journey cost is: \", JourneyCost[Index] \nPRINT \"Your journey details are: \", PassengerID[Index], JourneyTime[Index], \n       JourneyCodes[Index], JourneyID[Index] \nPRINT \"Are these details correct? (Y or N)\" \nINPUT Correct \nIF Correct = \"N\" \n  THEN \n    WHILE Correct = \"N\"        \n      PRINT \"Re-enter your journey details\" \n      PRINT \"Correct passenger ID \" \n      INPUT PassengerID[Index] \n      PRINT \"Correct journey time \" \n      INPUT JourneyTime[Index] \n      PRINT \"Correct journey codes \" \n      INPUT JourneyCodes[Index] \n      PRINT \"Your revised journey details are: \", PassengerID[Index],   \n             JourneyTime[Index], JourneyCodes[Index] \n      PRINT \"Are these details correct? (Y or N)\" \n      INPUT Correct \n    ENDWHILE \nENDIF \n\/\/Program continues \n1(d) \nExplanation of how each of the following could be done \nAny four from: \nMP1 \nDeclaring\/using a counter to store the number of bookings for each passenger \nMP2 \nUpdating the counter for the number of bookings made by each passenger \nMP3 \nAttempt to check the number of bookings \u2026 \nMP4 \n\u2026 for the correct condition e.g. if the number of bookings is more than 10 \/ equal to 10 \nMP5 \nApply the extra discount to the total price of future journeys ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"Section B ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"One mark for two correct rows \nTwo marks for three correct rows \nThree marks for four correct rows. \nStatement \nValidation \n(\uf0fc) \nVerification \n(\uf0fc) \nNeither \n(\uf0fc) \na check where data is re-entered to make sure no errors have \nbeen introduced during data entry \n\uf0fc \nan automatic check to make sure the data entered has the correct \nnumber of characters \n\uf0fc \na check to make sure the data entered is sensible \n\uf0fc \na check to make sure the data entered is correct \n\uf0fc ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"3 \nOne mark per bullet point \nNormal test data \n\u2022 \nTest data  \ne.g. 50 (allow any number between 1 and 100 inclusive) \n\u2022 \nReason  \nData that is within range and should be accepted  \nExtreme test data \n\u2022 \nTest data  \n100 \/ 1 \n\u2022 \nReason  \nData at the maximum \/ minimum end of the range and should be accepted \nErroneous test data \n\u2022 \nTest data  \ne.g. 300 (allow anything that isn\u2019t between 1 and 100 inclusive, including other data types) \n\u2022 \nReason  \nData outside the range that should be rejected ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"4(a) \nOne mark for error identified and suggested correction (Max three) \nLine 8 OUTPUT Value2 \u2013 should be INPUT Value2 \nLine 9 IF Operator \u2013 should be CASE OF Operator \nLine 15 OUTPUT \"The answer is \", Value1 \u2013 should be Answer \nThe loop may be corrected using a number of alternative methods: \nOne mark for error identified and suggested correction (Max two) \nMethod 1 \nLine 1 Continue \u2190 1 should be Continue \u2190 0 \nLine 22 UNTIL Continue = 0 should be ENDWHILE \/\/ Line 2 WHILE Continue = 0 should be REPEAT and Line \n22 UNTIL Continue = 0 should be Until Continue = 1 \nOR \nMethod 2 \nLine 2 WHILE Continue = 0 should be REPEAT \nLine 20 Continue \u2190 1 should be Continue \u2190 0 \/\/ Line 1 Continue \u2190 1 should be Continue \u2190 0 and Line \n22 UNTIL Continue = 0 should be Until Continue = 1 \nOR \nMethod 3 \nLine 2 WHILE Continue = 0 should be WHILE Continue = 1 \nLine 20 Continue \u2190 1 should be Continue \u2190 0 and Line 22 UNTIL Continue = 0 should be ENDWHILE ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"4(a) \nCorrected algorithm example 1 \n1 Continue \u2190 0 \n2 WHILE Continue = 0 (DO) \n3   OUTPUT \"Enter 1 for +, 2 for -, 3 for * or 4 for \/\" \n4   INPUT Operator \n5   OUTPUT \"Enter the first value\" \n6   INPUT Value1 \n7   OUTPUT \"Enter the second value\" \n8   INPUT Value2  \n9   CASE OF Operator \n10    1: Answer \u2190 Value1 + Value2 \n11    2: Answer \u2190 Value1 - Value2 \n12    3: Answer \u2190 Value1 * Value2 \n13    4: Answer \u2190 Value1 \/ Value2 \n14  ENDCASE \n15  OUTPUT \"The answer is \", Answer \n16  OUTPUT \"Do you wish to enter more values (Yes or No)?\" \n17  INPUT MoreValues \n18  IF MoreValues = \"No\" \n19    THEN \n20      Continue \u2190 1 \n21  ENDIF \n22 ENDWHILE \n4(a) \nCorrected algorithm example 2 \n1 Continue \u2190 1 \n2 REPEAT  \n3   OUTPUT \"Enter 1 for +, 2 for -, 3 for * or 4 for \/\" \n4   INPUT Operator \n5   OUTPUT \"Enter the first value\" \n6   INPUT Value1 \n7   OUTPUT \"Enter the second value\" \n8   INPUT Value2  \n9   CASE OF Operator \n10    1: Answer \u2190 Value1 + Value2 \n11    2: Answer \u2190 Value1 - Value2 \n12    3: Answer \u2190 Value1 * Value2 \n13    4: Answer \u2190 Value1 \/ Value2 \n14  ENDCASE \n15  OUTPUT \"The answer is \", Answer \n16  OUTPUT \"Do you wish to enter more values (Yes or No)?\" \n17  INPUT MoreValues \n18  IF MoreValues = \"No\" \n19    THEN \n20      Continue \u2190 0 \n21  ENDIF \n22 UNTIL Continue = 0 \n4(b) \nOne mark per bullet \nMP1 \nAppropriate loop (begin and end) \/ otherwise selection \nMP2 \nTesting both ends of condition \nMP3 \nSuitable message \nMP4 \nInput\/re-input \nWHILE Operator < 1 OR Operator > 4 (DO) \n  OUTPUT \"Enter 1, 2, 3 or 4\" \n  INPUT Operator \nENDWHILE \nAlternative answer \nREPEAT \n  IF Operator < 1 OR Operator > 4 \n    THEN \n      OUTPUT \"Enter 1, 2, 3 or 4\" \n      INPUT Operator \n  ENDIF \nUNTIL Operator >= 1 AND Operator <= 4 \nOne mark \nAfter line 4 \/ between lines 2 and 5 ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"5 \nOne mark for each correct column \nList \nValue \nList1 \nList2 \nOUTPUT \n0 \n0 ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"77 \n77 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"16 \n93 ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"35 \n35 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"-7 \n86 ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"5 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"List \nValue \nList1 \nList2 \nOUTPUT ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"Input Error ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"11 \n46 ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"12 \n58 ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"20 \n106 \n-1 \nList 1 = 58 \nList 2 = 106 \nList 2 is greatest \n6(a)(i) \nInStock ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"6(a)(ii) \nProductID ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w21_ms_22.pdf","Answer":"6(b) \nOne mark for correct fieldnames  \nOne mark for correct table names and show fields \nOne mark for correct sort \nOne mark for correct search criteria in all columns \nField: ProductID \nProductName \nAnimal \nInStock \nTable: STOCK \nSTOCK \nSTOCK \nSTOCK \nSort: Ascending \nShow: \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \n\uf06f \nCriteria:  \n=\u201ccat\u201d \n=Yes \nor:  \n4 ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. \nSection A \n1(a)(i) \nMany correct answers, the names used must be meaningful. The names given are examples only. \nOne mark per mark point, max five  \nMP1 \nname one e.g. Name, Age, Gender, Type, TeamMember, AnnualFee, Paid  \nMP2 \none appropriate data type must match name e.g. string, integer, char, string, Boolean, real, Boolean \nMP3 \nsample data for one appropriate array \nMP4 \nall arrays mentioned have appropriate names \nMP5 \nall arrays mentioned have appropriate data types \nMP6 \nsample data for all arrays e.g. Sue, 9, F, Junior, True, 9.00, False ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"1(a)(ii) \nOne mark per mark point, max two \nMP1 \nuse a loop e.g. FOR\u2026NEXT \/ REPEAT\u2026UNTIL \/ WHILE\u2026DO \nMP2 \nto input the values for each element in every array \nMP3 \nappend each value input to the end of the array ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"1(b) \nOne mark per mark point, max two \nMP1 \nuse a loop\/ FOR\/REPEAT\/WHILE to check all members \nMP2 \nuse a conditional statement \/ IF to see if the paid field is marked as False \nMP3 \nonly transfer the data of those members whose paid field is marked as True to a set of new arrays \n       \/\/ delete the details of the members who have not paid ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"1(c) \nOne mark per mark point, max six  \nMP1 \nloop through all the members \nMP2 \nany suitable correct comparison of age \nMP3 \nif 18 Change membership type to adult   \nMP4 \nif 50 Change membership type to senior  \nMP5 \nif 80 Change membership type to golden  \nMP6 \ncheck if team member \nMP7 \nno store appropriate full fee \nMP8 \nyes store 90% of appropriate full fee \nExample \nFOR Member \uf0ac 1 TO Total \n  CASE Age[Member] OF  \n    18 : Type[Member] \uf0ac \"Adult\" \n    50 : Type[Member] \uf0ac \"Senior\" \n    80 : Type[Member] \uf0ac \"Golden\" \n  ENDCASE \n  IF Team[Member]  \n    THEN \n      CASE Type[Member] OF  \n        \"Junior\" : Fee[Member] \uf0ac JuniorFee * 0.9 \n        \"Adult\"  : Fee[Member] \uf0ac AdultFee * 0.9 \n        \"Senior\" : Fee[Member] \uf0ac SeniorFee * 0.9 \n      ENDCASE \n    ELSE \n      CASE Type[Member] OF  \n        \"Junior\" : Fee[Member] \uf0ac JuniorFee \n        \"Adult\"  : Fee[Member] \uf0ac AdultFee \n        \"Senior\" : Fee[Member] \uf0ac SeniorFee \n        \"Golden\" : Fee[Member] \uf0ac GoldenFee \n      ENDCASE \n  ENDIF \nNEXT Member ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"1(d) \nExplanation \nOne mark per mark point, max five  \nMP1 \nhow the program checked all the members \/\/ use of loop \nMP2 \nhow the program identified a member who has not paid their (annual) fee \/\/ use of condition \nMP3 \nhow the program kept a running total of members who have not paid their (annual) fees  \nMP4 \nfor each of the three types of membership that require a fee \/\/ excluding golden members \nMP5 \nhow the program calculated a percentage for members who had not paid\u2026 \nMP6 \nfor each of the three types of membership that require a fee   \nMP7 \nhow the program displayed a percentage for members who had not paid  \nMP8 \nall three percentages displayed with suitable messages \nProgramming statements when used must be explained. ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"Section B \n2(a) \nOne mark per mark point, max six \n\u2022 \nLine 1 100 \n\u2022 \nLine 7 Value > 100 \/\/ Value >= 101 \n\u2022 \nLine 11 Reading[Value] + 1 \n\u2022 \nLine 14 INPUT Value  \n\u2022 \nLine 18 Reading[Count] \n\u2022 \nLine 19 Count \u2013 1  ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"2(b) \nOne mark per mark point, max three \n\u2022 \nuse an IF\/conditional statement \n\u2022 \nto check if Reading[Count] not equal to zero \n\u2022 \nbefore outputting the value \/\/ between statements 17 and 18 \/\/ code sample showing position \nIF Reading[Count] <> 0 \n  THEN \n    OUTPUT \nENDIF ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"3(a) \nTwo marks per check, description must match name of check if given, max six \n\u2022 \nCheck 1 use a type check \no \nto ensure that the value is a number \/ integer  \n\u2022 \nCheck 2 use a length check  \no \nto ensure that there are only 4 characters \/ digits \n\u2022 \nCheck 3 use a range check \no \nto ensure that the value is >= 1000 and <=9999 ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"3(b) \nOne mark per mark point, max three \nMP1 \ninput the new PIN \nMP2 \ninput the new PIN again \/\/ ask the user to check the number on screen \nMP3 \ncheck that both PINs are the same \/\/ confirm that it is the PIN to use \nMP4 \ncheck that the new PIN is not the same as the old PIN ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"4(a) \nOne mark for each correct column, max four \nSold \nStock \nTotal \nOUTPUT \n50 \n0 \n24 \n26 \n24 ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"14 \nAdd new stock \n64 \n36 ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"58 \n42 \n30 \n28 \n72 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"16 \nAdd new stock \n66 \n84 ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"48 \n102 \n-1 \n102 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"4(b)  \nOne mark for identification of error, max one \n\u2022 \nthe stock level will fall below zero \/ become negative \nOne mark per mark point, max two \n\u2022 \nbefore subtracting the amount Sold from Stock \n\u2022 \ntest that the stock level \/ Stock is greater than the rolls to be sold \/ Sold \n\u2022 \nprovide a suitable error message \/ ask to re-input ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"5(a) \nOne mark per mark point, max two \n\u2022 \nItemCode  \n\u2022 \nuniquely identifies each item ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_21.pdf","Answer":"5(b) \nOne mark per mark point, max three \n\u2022 \ncorrect rows Field, Table and Sort  \n\u2022 \ncorrect row Show  \n\u2022 \ncorrect Criteria row <10 or <=9 \nField: ItemCode \nManufacturer \nLevel \nTable: WAREHOUSE \nWAREHOUSE \nWAREHOUSE \nSort:  \nShow: \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria:  \n<10 \nor:  \n3 ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. \nSection A \n1(a)(i) \nMany correct answers, the name used must be meaningful. The name given is an example only. \nOne mark per mark point, max two \n\u2022 \nConstant NumberDays \u2026 \n\u2022 \nValue   \u2026 14 \nTask 1 \u2013 setting up the booking system \nSet up suitable data structures to store the car licence numbers and names of visitors who have booked car parking \nspaces. The data structures should have sufficient capacity to store data for each of the 20 parking spaces for a static \nperiod of two weeks. Allow a visitor to request a parking space on any day within the two-week period by entering a \nnumber between 1 and 14, inclusive. The system will check that there are spaces available on the day requested, and if \nso, will ask the visitor to enter their name and car licence number. This data will be stored in the data structures \nrepresenting the first available parking space for the day requested. The visitor will be told the number of their parking \nspace. \nAt the end of the two-week period, allow all of the data to be deleted ready for the next two-week period. ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"1(a)(ii) \nMany correct answers, the name used must be meaningful. The name given is an example only. \nOne mark per mark point, max two \n\u2022 \nArray \nLicenceNumbers \u2026 \n\u2022 \nUse  \n\u2026 storing the licence numbers of the cars to be parked ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"1(b) \nOne mark per mark point, max two \nMP1 \nuse a (range) check to check for values between 1 and 14  \nMP2 \nuse a (type) check to ensure an integer is entered \nMP3 \n\u2026 using an (appropriate) IF\/conditional statement \nMP4 \noutputs an error message if a new input is required \nMP5 \nre-enter data using WHILE\/REPEAT loop until a valid entry has been made \nOne mark  \nMP6 \nappropriate line of code \/ construct to answer the question \nExample code \nINPUT Day \nWHILE Day < 1 OR Day > 14 DO \n  OUTPUT \"You must enter a number between 1 and 14 inclusive\" \n  INPUT Day \nENDWHILE ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"1(c) \nOne mark per mark point, max six \nMP1 \ninput for day number or to choose accessible parking \u2026 \nMP2 \n\u2026 both inputs with appropriate prompts  \nMP3 \nconditional statement to check if accessible parking is required \nMP4 \ninitialisation of variable for the first accessible space  \nMP5 \nchecking if current array element is an available space \nMP6 \ncorrect loop to check all array elements for the day \nMP7 \n\u2026 until an available space is found (or not) \nMP8 \ninput car licence number and name (with or without prompts) \nMP9 \n\u2026 and store them in the correct array position(s) \nMP10 \nappropriate output for space available or no space available  \nMP11 \nappropriate output for allocated parking space details \nTask 2 \u2013 adding accessible parking spaces \nThe visitor car park booking system is to be re-designed to offer accessible parking. Spaces 1 to 5 are named accessible \nspaces. Spaces 6 to 20 are named general spaces. \nExtend your program in Task 1 so that: \n\u2022 \nwhen a visitor requests a parking space, they are additionally asked if they need an accessible space \n\u2013 \nif so, they are allocated the first available space beginning at space 1 and finishing at space 20 \n\u2013 \nif not, they are allocated the first available space beginning at space 20 and finishing at space 6. \nThe system must work so that visitors requiring accessible parking may be allocated any of the 20 spaces, but visitors who \ndo not need accessible parking may only be allocated general spaces. ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"1(c) \nExample answer \n\/\/Assume LicenceNumber array has been initialised with the null string \nOUTPUT \"Enter the number of the day in which you require parking \" \nINPUT Day \nOUTPUT \"Do you require an accessible space? (Y or N)\" \nINPUT Accessible \nIF Accessible = \"Y\" \n  THEN \n    SpaceAllocated \uf0ac FALSE \n    Space \uf0ac (Day - 1) * 20  \n    REPEAT \n        IF LicenceNumbers[Space] = \"\" \n          THEN \n            OUTPUT \"Enter your car licence number \" \n            INPUT LicenceNumbers[Space] \n            SpaceAllocated \uf0ac TRUE \n        ENDIF \n        Space \uf0ac Space + 1 \n    UNTIL SpaceAllocated OR Space = (Day - 1) * 20 + 20  \n    IF NOT SpaceAllocated \n      THEN \n        OUTPUT \"No space available\" \n      ELSE \n        OUTPUT \"You are allocated space: \", Space \u2013 (Day \u2013 1) * 20 \n    ENDIF \nENDIF \n1(d) \nExplanation of how the following could be done: \nOne mark per mark point, max three \nMP1 \nchange the max constant to 560 \/ 28   \nMP2 \nchange the output message for the user to say that the range of days entered must be from 1 to 28  \nMP3 \nalter the validation to allow an input of 1 to 28  \nMP4 \nchange the size of the array that stores licence numbers \/ names so that it can hold the additional data \nMP5 \nensure that all loops that access the stored data for retrieval or erasing of data include the new full range  ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"1(e) \nExplanation of how the following could be done: \nOne mark per mark point, max four \nMP1 \ninitialise counting variable(s) \u2026  \nMP2 \n\u2026 for accessible spaces and general spaces before any spaces have been allocated \nMP3 \nincrement the counter(s) \u2026 \nMP4 \n\u2026 for accessible spaces and general spaces  \nMP5 \nmaintain both counters for the full two-week cycle \nMP6 \noutput to show the total number of accessible and general spaces allocated so far, with suitable messages  \n\u2022 \nTask 3 \u2013 working out car park usage statistics \n\u2022 \nExtend the program to enable the following statistics to be counted and output on request: \n\u2022 \nThe number of accessible spaces used on any of the 14 days. \n\u2022 \nThe number of general spaces used on any of the 14 days. \n\u2022 \nThe total number of spaces used on any of the 14 days. \n\u2022 \nThe number of accessible spaces used in the whole 14-day period. \n\u2022 \nThe number of general spaces used in the whole 14-day period. \n\u2022 \nThe total number of spaces used in the whole 14-day period. ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"Section B ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"One mark for each correct line, max four \nProgramming concept   \nDescription ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"counting \nrepetition \nselection \nsequence \ntotalling \ncarrying out an action multiple times within a \nloop structure \nadding together the numbers in a list of \nnumbers \ntracking the number of iterations a program \nhas performed in a loop \nbranching off to take a course of action \ndepending on the answer to a question \na set of statements to be executed in order ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"One mark per mark point, max three \nMP1 \nverification is used to make sure the items in stock do not change from the original when they are input \/\/ \nverification is used to make sure the items in stock do not change from what was intended to be input \/\/ \nverification is used to make sure the items are accurately copied \nMP2 \nenter each item in stock twice \/ double entry \/\/ visual check \nMP3 \nmatching description of the type of check stated in MP2 \nExample answers \nDouble entry [1] enter data twice and only accept identical values [1] \nVisual check [1] look at the data that has been entered and confirm it matches [1] ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"4 \nOne mark per mark point, max two \n\u2022 \ntype of test data \u2026 \n\u2022 \n\u2026 description of test data \nExample answers \nNormal data (1) data that would be accepted by the program (1) \nBoundary \/ extreme data (1) data that is on the acceptable limits (1) ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"5(a) \nOne mark per mark point, max four \n\u2022 \nLine 09 \/ Higher[HighList] \uf0ac MarksEntry \nshould be Higher[HighList] \uf0ac Mark \n\u2022 \nLine 15 \/ MidList \uf0ac MidList \nshould be MidList \uf0ac MidList + 1 \n\u2022 \nLine 17 \/ Lower[HighList] \uf0ac Mark \nshould be Lower[LowList] \uf0ac Mark \n\u2022 \nLine 22 \/ NEXT MarksEntry = 500 \nshould be UNTIL MarksEntry = 500  \nCorrected algorithm \n01 HighList \uf0ac 0 \n02 MidList \uf0ac 0 \n03 LowList \uf0ac 0 \n04 MarksEntry \uf0ac 0 \n05 REPEAT  \n06   INPUT Mark \n07   IF Mark >= 80 \n08     THEN \n09       Higher[HighList] \uf0ac Mark \n  10       HighList \uf0ac HighList + 1 \n11     ELSE  \n12       IF Mark >= 50 \n13         THEN \n14           Middle[MidList] \uf0ac Mark \n15           MidList \uf0ac MidList + 1 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"5(a) \n16         ELSE \n17           Lower[LowList] \uf0ac Mark \n18           LowList \uf0ac LowList + 1 \n19       ENDIF \n20   ENDIF \n21   MarksEntry \uf0ac MarksEntry + 1 \n22 UNTIL MarksEntry = 500 \n23 OUTPUT \"You entered \", HighList, \" higher marks\" \n24 OUTPUT \"You entered \", MidList, \" middle marks\" \n25 OUTPUT \"You entered \", LowList, \" lower marks\" \n5(b) \nOne mark per mark point, max four \nMP1 \nSet up a condition to end the input \nMP2 \nThe correct placement of the condition \nMP3 \nSet up the test  \nMP4 \nThe correct placement of the test \nMP5 \nRemoval of MarksEntry counter from the original algorithm \nExample answers \nTesting at the end of the algorithm \nOUTPUT \"Do you want to enter another mark?\" \nINPUT AnotherMark  \nUNTIL AnotherMark = \"No\"  \nshould replace line 22 at end of loop  \nThe MarksEntry counter can be removed \/\/ Lines 4 and 21 are not required \/ can be removed \nTesting at the beginning of the algorithm \nAnotherMark = \"Yes\"  \nWHILE AnotherMark = \"Yes\" DO  \nshould replace line 05 at the start of the loop  \nOUTPUT \"Do you want to enter another mark?\"  \nINPUT AnotherMark  \nENDWHILE  \nshould replace line 22 at end of loop  \nThe MarksEntry counter can be removed \/\/ Lines 4 and 21 are not required \/ can be removed \nTerminal condition \nOUTPUT \"Enter -1 to end the program\" \nshould be placed before the loop and \/ or before the input in 06  \nIF MARK <> -1 THEN  \nshould be placed between lines 06 and 07 \nThe MarksEntry counter can be removed \/\/ Lines 4 and 21 are not required \/ can be removed \nUNTIL Mark = -1 should be placed at line 22 ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"6 \nOne mark per mark point, max five \nMP1 \ncorrect Counter and Number columns \nMP2 \ncorrect Hundreds column \nMP3 \ncorrect Temp and Tens columns \nMP4 \ncorrect Units column \nMP5 \ncorrect OUTPUT column \nCounter Number Hundreds \nTemp \nTens \nUnits \nOUTPUT \n0 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"97 ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"876 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"76 ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"6 \nHundreds: 8 Tens: 7 \nUnits: 6 ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"4320 ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"606 ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"6 \n0 ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"Hundreds: 6 Tens: 0 \nUnits: 6 ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"9875 ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"42 ","key":23.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"124 ","key":24.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"24 ","key":25.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"4 \nHundreds: 1 Tens: 2 \nUnits: 4 ","key":26.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"5 \n7(a)(i) \nSubjectCode Text \nExams Number \nData types must match those given in the question. ","key":27.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"7(a)(ii) \nThe Boolean data type can only have one of two values \/\/ the Candidates field has more than two possible values. ","key":28.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"7(b) \nOne mark per mark point, max three \n\u2022 \ncorrect data  \n\u2022 \ncorrect layout \n\u2022 \ncorrect order  \nExpected answer \nGeography 200  \nGeology 80 \nHistory 250 \nMathematics 350 ","key":29.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_22.pdf","Answer":"7(c) \nOne mark per mark point, max three \n\u2022 \ncorrect fieldnames and table names \n\u2022 \ncorrect sort and show rows \n\u2022 \ncorrect search criteria \nField: SubjectCode \nSubjectName \nCandidates \nTable: ASSESS \nASSESS \nASSESS \nSort: \nDescending \nShow: \n\uf0fe \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria: \n<150 \nor: \n3 ","key":30.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"Please note the following further points: \nThe words in bold in the mark scheme are important text that needs to be present, or some notion of it needs to be present. It does not have to \nbe the exact word, but something close to the meaning. \nIf a word is underlined, this exact word must be present. \nA single forward slash means this is an alternative word. A double forward slash means that this is an alternative mark point. \nEllipsis (\u2026) on the end of one-mark point and the start of the next means that the candidate cannot get the second mark point without being \nawarded the first one. If a mark point has an ellipsis at the beginning, but there is no ellipsis on the mark point before it, then this is just a follow-on \nsentence and can be awarded without the previous mark point. \nSection A \n1(a)(i) \nMany correct answers, the name used must be meaningful. The name given is an example only. \nOne mark per mark point, max three \nConstant name \nBasicClean \nValue \n10.00 \nReason  \nthis number will not change whilst the program is running ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"1(a)(ii) \nDescription \nMany correct answers, the name used must be meaningful. The name is an example only. \nOne mark per mark point, max three \nMP1 \nname e.g. NameAddress \nMP2 \nappropriate data type e.g. string \nMP3 \nsample data for the array e.g. Mrs Singh, Park View ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"1(b) \nOne mark per mark point, max three \nMP1 \nuse a conditional statement \/\/ an example of conditional statement used \/\/ \nuse an input statement with validation\/\/ an example of input statement used \nMP2 \nany working method \u2013 for example, to only store True in the three floors array if the two floors array has not been \nset to True \nMP3 \noutput an appropriate error message when an error condition has occurred \/\/ \nchoose appropriate routes through the program depending upon the choice of floors ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"1(c) \nOne mark per mark point, max six \nMP1 \ninitialise bill total to 10 \nMP1 \ncheck for additional windows \nMP2 \n\u2026 and add in amount to total if required \nMP3 \ncheck for 2 floors or 3 floors \nMP4 \n\u2026 multiply by 1.1 or 1.15 as required \nMP5 \ncheck for inside and multiply by 1.25 if required \nMP6 \ncheck for polish and multiply by 1.05 if required \nMP7 \nMP2 to MP7 completed in correct order \nMP8 \ncheck for solar panels and add 20.00 if required \nSample \nTotal \uf0ac 10.00 \nExtraWindowsCost \uf0acINT((NumberExtraWindows[Bill] \u20131) \/ 5) * 5.00 \nTotal \uf0ac Total + ExtraWindowsCost \nCASE NumberOfFloors[Bill] OF \/\/ check number of floors \n  2 : Total \uf0ac Total * 1.1 \n  3 : Total \uf0ac Total * 1.15 \nENDCASE \nIF Inside[Bill] \/\/ check for cleaning inside windows \n  THEN \n    Total \uf0ac Total * 1.25 \nENDIF \nIF Polish[Bill] \/\/ check for polishing windows \n   THEN \n    Total \uf0ac Total * 1.05 \nENDIF \nIF Solar[Bill] \/\/ check for cleaning solar panels \n  THEN \n    Total \uf0ac Total + 20.00 \nENDIF ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"1(d) \nExplanation \nOne mark per mark point, max five \nMP1 \nhow the program counted the number of customers using a service \nMP1 \n\u2026 how the program counted this for all services \nMP2 \n\u2026 excluding basic windows and additional windows \nMP3 \nhow the program identified the service with the largest number of customers \nMP4 \nhow the program identified the service with the smallest number of customers \nMP5 \nhow the program calculated a percentage of the total number of bills stored\u2026 \nMP6 \n\u2026 for largest and smallest \nMP7 \nhow the program displayed these percentages with suitable messages \nProgramming statements when used must be explained. ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"Section B \n2(a) \nOne mark per mark point in the correct position, max six \n\u2022 \nline 01 50 \n\u2022 \nline 08 Value > 50 \n\u2022 \nline 12 Reading[Value] + 1 \n\u2022 \nline 18 INPUT Value \n\u2022 \nline 23 Reading[Count] \n\u2022 \nline 24 Count + 1 ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"2(b) \nOne mark per place in code and action, max three \n\u2022 \nline 21 set Count to 50 \/ Count \uf0ac 50 \n\u2022 \nline 24 subtract 1 from Count \/ Count \uf0ac Count \u20131 \n\u2022 \nline 25 check for Count equal to 34 \/ check for Count less than 35 \/ UNTIL Count = 34 \/ UNTIL Count < 35 \nor \nOne mark per place in code and action, max three \n\u2022 \nline 21 set up FOR loop stating at 50 and finishing at 35 \/ FOR Count \uf0ac 50 TO 35 STEP \u20131 \n\u2022 \nRemove lines 22 and 24 \n\u2022 \nline 25 End FOR loop \/ NEXT Count \nExamples \n21 Count \uf0ac 50 \n22 REPEAT \n23 OUTPUT \"There are \", Reading[Count], \" readings, \" of \", Count \n24 Count \uf0ac Count \u20131 \n25 UNTIL Count = 34 \n21 FOR Count \uf0ac 50 TO 35 STEP \u20131 \n23 OUTPUT \"There are \", Reading[Count], \" readings, \" of \", Count \n25 NEXT Count ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"3(a)(i) \n\u2022 ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"1 \n3(a)(ii) \nOne mark for each correct letter seen, max two \n\u2022 \nC \n\u2022 \nD ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"3(b)(i) \nOne mark per mark point, max two \n\u2022 \ntwo or more digits \n\u2022 \ntransposed ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"3(b)(ii) \nOne mark per mark point, max two \n\u2022 \nmultiply each digit by a different number \/ its place value \n\u2022 \nbefore adding them together and dividing by a number ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"3(c) \nOne mark per mark point, max two \n\u2022 \nlength check \n\u2022 \ntype check \n\u2022 \npresence check \n\u2022 \nformat check ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"4(a) \nOne mark for each correct column, max four \nStock \nTotal \nSale \nOUTPUT ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"0 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"1 \nY ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"2 \nY ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"3 \nY ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"4 \nY ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"5 \nY ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"6 \nY ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"N \nAdd new stock ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"4 \n4(b) \nOne mark per mark point, max three \n\u2022 \ninput a number \/ quantity \n\u2022 \n\u2026 check that the number is less than (or equal to) the number in stock \n\u2022 \n\u2026 after checking for N \n\u2022 \nupdate Stock by that number \/ Stock \uf0ac Stock \u2013 Number \n\u2022 \nupdate Total by that number \/ Total \uf0ac Total + Number ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"5(a) \nOne mark per mark point, max two \n\u2022 \nItemCode \n\u2022 \nuniquely identifies each item ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w22_ms_23.pdf","Answer":"5(b) \nOne mark per mark point, max three \n\u2022 \ncorrect rows Field, Table and Sort \n\u2022 \ncorrect row Show \n\u2022 \ncorrect Criteria row \nField: Description \nCountry \nInStore \nTable: MUSEUM \nMUSEUM \nMUSEUM \nSort: \nShow: \n\uf0fe \n\uf0fe \n\uf06f \n\uf06f \nCriteria: \nN \nor: \n3 ","key":23.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"1 \nC ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"2 \nB ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"3 \nOne mark for each correct line from description to data type \n Description  \nData type ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"BOOLEAN \nSTRING \nINTEGER \nREAL \nCHAR \na whole number \na single letter \na word or phrase \na number with two decimal \nplaces ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"One mark for each correct word \n\u2022 \narray \n\u2022 \nconstant \n\u2022 \nvariable ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"5(a) \nOne mark for each point (max two) \n\u2022 \nsimplifying the problem \n\u2022 \nremoving unnecessary details from the problem \/\/ selecting elements required \n\u2022 \nfiltering out irrelevant characteristics from those elements ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"5(b) \nOne mark for each point (max three) \n\u2022 \ninputs \n\u2022 \nprocesses \n\u2022 \noutputs \n\u2022 \nstorage ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"5(c) \nOne mark for stage, one mark for matching description (max two) \n\u2022 \ndesign (1) details of solution set out (1) \n\u2022 \ncoding (1) program is developed (1) \n\u2022 \ntesting (1) program is tested for errors (1) ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"6(a) \nDisplaying\/sort 10 names in alphabetical order 9 ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"6(b) \nOne mark for each point (max four) \n\u2022 \nInitialisation \n\u2022 \ninputting 10 names \n\u2022 \nstoring the names in an array \n\u2022 \nsorting the names in alphabetical order using a bubble sort \n\u2022 \ndisplaying the 10 names \n\u2022 \niteration ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"6(c) \nOne mark for a meaningful identifier for the array \nA Names  \/\/ ArrayNames \nTwo marks for 3 meaningful identifiers for variables \nOne marks for 1 or 2 meaningful identifiers for variables \nT Temp \nC Counter \nL Length ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"6(d) \nOne mark for each point (max two) \n\u2022 \nuse of comments \n\u2022 \nuse of procedures\/functions \n\u2022 \nuse of white space ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"7(a) \nOne mark for each point \n\u2022 \nNOT A \n\u2022 \nAND B \n\u2022 \nOR NOT C \n\u2022 \nexpression correct (NOT A AND B) OR NOT C ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"7(b) \nA \nB \nC \nX \n0 \n0 \n0 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"0 \n0 ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"0 \n0 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"0 ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"0 ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"1 ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"1 \n0 \n0 ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"1 \n0 ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"0 ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"1 \n0 ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"1 ","key":23.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"1 \n0 \n4 marks for 8 correct outputs \n3 marks for 6\/7 correct outputs \n2 marks for 4\/5 correct outputs \n1 mark for 2\/3 correct outputs   ","key":24.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"8(a) \nRange check ","key":25.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"8(b) ","key":26.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"8(c) \nOne mark for set of test data, one mark for purpose (max four) \nExample: \n1 and 1 (1) normal data to ensure the algorithm accepts this test data (1) \n\u20131 and 1 (1) abnormal data for length to ensure that it is rejected (1) ","key":27.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"Yes \nSTART \nINPUT Length \nPrice \uf0ac Length * Cost \nSTOP \nIs Length >=0.5 \nAND Length <= \n6.0 ? \nNo \nOUTPUT  \n\"Price \", \nROUND(Price,2) \nINPUT Cost \nOne mark for each of the following points \n\u2022 \ncorrect use of flowchart symbols \n\u2022 \nworking flow lines and complete \n\u2022 \nboth inputs correct \n\u2022 \nworking range check \n\u2022 \nworking calculation \n\u2022 \ncorrect output rounded to two decimal places \n8(d) \nOne mark for two correct headings \nTwo marks for three correct headings \nThree marks for all headings correct and no other headings unless used in 8(b) \nLength \nCost \nPrice \nOUTPUT ","key":28.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"8(e) \nOne mark for each point (max two) \n\u2022 \nvalidate Cost \u2026 \n\u2022 \n \u2026 with a range\/presence check \n\u2022 \nadd another validation check for Length ","key":29.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"9(a) \nOne mark for each appropriate field name and correct data type \nCatNo  \n          text\/alphanumeric \nDescription         text\/alphanumeric \nStockLevel          integer \nPrice  \n          real \nPainted \n          Boolean ","key":30.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"9(b)(i) \nCatNo  ","key":31.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"9(b)(ii) \nUnique identifier  ","key":32.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"9(c) \nSELECT lists the fields to be displayed \nFROM identifies the table \nWHERE identifies the search criteria ","key":33.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"10 \n\u2022 \nAO2 (maximum 9 marks) \n\u2022 \nAO3 (maximum 6 marks) \nData Structures required names shown underlined must be used as given in the scenario \n2D Array or list Evening[1:10, 1:20] \/ Evening[0:9, 0:19] \nVariables Counter, SeatCounter, NumSeats, Row, Column \nRequirements (techniques) \nR1 Find number of seats available for each performance and output (searching, nested iteration, output) \nR2 Inputs and validates number of seats (input, iteration, and selection) \nR3 Checking if seats available (selection, assignment, output with appropriate messages) \nExample 15-mark answer in pseudocode \n\/\/ meaningful identifier names and appropriate data structures to store the data required \nDECLARE Counter, SeatCounter, NumSeats, Row, Column : INTEGER \nCONSTANT HouseFull = 200 \nCONSTANT MaxRow = 10 \nCONSTANT MaxColumn = 20 \nSeatCounter1 \uf0ac 0 \/\/ initialise seat counter for performance 1 ","key":34.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_21.pdf","Answer":"10 \nFOR Row \uf0ac 1 TO 10 \n    FOR Column \uf0ac 1 TO 20 \n        IF Evening[Row, Column] \n          THEN  \n            SeatCounter \uf0ac SeatCounter + 1 \n        ENDIF \n    NEXT Column \nNEXT Row \n\/\/ validate input \nOUTPUT \"How many seats do you want to book? 1, 2, 3 or 4 \" \nINPUT NumSeats \nWHILE 1 < NumSeats OR NumSeats > 4 OR NumSeats <> ROUND(NumSeats, 0)  \n    OUTPUT \"Please enter 1, 2, 3 or 4 for the number of seats \" \n    INPUT NumSeats \nENDWHILE \nIF SeatCounter + NumSeats > 200)\/\/ check for house full \n  THEN \n    OUTPUT \"House full\" \n  ELSE \n    IF SeatCounter + NumSeats > 200 \/\/ checks for not enough seats \n            THEN \n              OUTPUT \"Only \", SeatCounter + NumSeats \u2013 200, \" seats left\" \n            ELSE \n              FOR Counter \uf0ac 1 TO NumSeats \/\/ book required number of seats for performance \n                  Evening[MOD(SeatCounter + Counter, MaxColumn), DIV(SeatCounter + \n                          Counter), MaxColumn] \uf0ac TRUE \n                  OUTPUT \"Row \", MOD(SeatCounter + Counter, MaxColumn), \" seat \", \n                          DIV(SeatCounter + Counter, MaxColumn),\" booked\" \n              NEXT Counter \n           ENDIF \nMarking Instructions in italics \nAO2:  \nApply knowledge and understanding of the principles and concepts of computer science to a given context, \nincluding the analysis and  design of computational or programming problems \n0 \n1-3 \n4-6 \n7-9 \nNo creditable \nresponse. \nAt least one programming \ntechnique has been used. \nAny use of selection, iteration, \ncounting, totalling, input and \noutput. \nSome programming techniques used \nare appropriate to the problem. \nMore than one technique seen \napplied to the scenario, check the list \nof techniques needed. \nThe range of programming techniques \nused is appropriate to the problem.   \nAll criteria stated for the scenario have \nbeen covered by the use of \nappropriate programming techniques, \ncheck list of techniques needed. \nSome data has been stored but \nnot appropriately. \nAny use of variables or arrays or \nother language dependent data \nstructures e.g. Python lists. \nSome of the data structures chosen \nare appropriate and store some of the \ndata required.   \nMore than one data structure used to \nstore data required by the scenario.  \nThe data structures chosen are \nappropriate and store all the data \nrequired. \nThe data structures used store all the \ndata required by the scenario. \nMarking Instructions in italics \nAO3: Provide solutions to problems by: \nevaluating computer systems \nmaking reasoned judgements \npresenting conclusions \n0 \n1-2 \n3-4 \n5-6 \nNo creditable \nresponse. \nProgram seen without relevant \ncomments. \nProgram seen with some relevant \ncomment(s). \nThe program has been fully \ncommented \nSome identifier names used are \nappropriate \nSome of the data structures \nused have meaningful names. \nThe majority of identifiers used are \nappropriately named. \nMost of the data structures used have \nmeaningful names. \nSuitable identifiers with names \nmeaningful to their purpose have been \nused throughout. \nAll of the data structures used have \nmeaningful names. \nThe solution is illogical. \nThe solution contains parts that may \nbe illogical. \nThe program is in a logical order. \nThe solution is inaccurate in \nmany places. \nSolution contains few lines of \ncode with errors that attempt to \nperform a task given in the \nscenario. \nThe solution contains parts that are \ninaccurate. \nSolution contains lines of code with \nsome errors that logically perform \ntasks given in the scenario. Ignore \nminor syntax errors. \nThe solution is accurate. \nSolution logically performs all the \ntasks given in the scenario. Ignore \nminor syntax errors. \nThe solution attempts at least \none of the requirements. \nSolution contains lines of code \nthat attempt at least one task \ngiven in the scenario. \nThe solution attempts to meet most of \nthe requirements. \nSolution contains lines of code that \nperform most tasks given in the \nscenario. \nThe solution meets all the \nrequirements given in the question. \nSolution performs all the tasks given in \nthe scenario. ","key":35.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 \nA ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"2(a) \nFormat check ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"2(b) \nOne mark for each appropriate test data, max two \nOne mark for each correct accompanying reason, max two \nFor example: \nNormal \u2013 30\/12\/1960 \u2026  \nReason \u2013 \u2026 (the date is written in the correct format and) should be \naccepted. \nAbnormal \u2013 30\/Dec\/1960 \u2026  \nReason \u2013 \u2026 (the month is not written in the correct format and) should be \nrejected. ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"2(c) \nOne mark per mark point, max two \nMP1 \ncheck that there are 10 characters in total  \nMP2 \nif the date is too long\/short it will be rejected  ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"3(a) \nOne mark for each correct line. ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"3(b) \nOne mark per mark point, max four \nMP1 \ninitialise a variable to store the lowest number set to a high value (at \nleast 100) \/ first value in the array \nMP2 \nloop structure to iterate 25 times \nMP3 \nuse of IF to check if the array element is less than the current lowest \nvalue \nMP4 \n\u2026if it is, set this to the lowest value \nMP5 \noutput the result (with an appropriate message) after the loop \nExample answer: \n Min \uf0ac 100 \nFOR Count \uf0ac 1 TO 25 \n    IF Temperatures[Count] < Min \n      THEN \n        Min \uf0ac Temperatures[Count]  \n    ENDIF \nNEXT Count \nOUTPUT \"The lowest temperature is \", Min ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"4(a) \nOne mark per mark point, max four \nMP1 \nLine 01 \/ DECLARE City ARRAY[1:50, 1:2] OF BOOLEAN \nshould be DECLARE City : ARRAY[1:50, 1:2] OF STRING \nLine 05 \/ IF should be REPEAT \nMP2 \nLine 07 \/ INPUT City[Count, 2]should be INPUT \nCity[Count, 1] \nMP3 \nLine 11 \/ UNTIL Count = 50 \/\/ Line 04 \/ Count \uf0ac 1 AND Line \n10 \/ Count \uf0ac Count + 1 should be UNTIL Count = 51 \/ \nUNTIL Count > 50 \/\/ Line 04 \/ Count \uf0ac 0 AND move Line 10 \nto beginning of loop \/ Line 06 \nMP4 \nLine 12 \/ FOR Out \uf0ac 1 TO 1 should be FOR Out \uf0ac 1 TO 50 \nCorrect algorithm: \n01 DECLARE City : ARRAY[1:50, 1:2] OF STRING \n02 DECLARE Count : INTEGER \n03 DECLARE Out : INTEGER \n04 Count \uf0ac 1 \n05 REPEAT \n06     OUTPUT \"Enter the name of the city\" \n07     INPUT City[Count, 1] \n08     OUTPUT \"Enter the name of the country\" \n09     INPUT City[Count, 2] \n10     Count \uf0ac Count + 1 \n11 UNTIL Count > 50 \n12 FOR Out \uf0ac 1 TO 50 \n13     OUTPUT \"The city \", City[Out, 1], \" is in \",  \n                  City[Out, 2] \n14 NEXT Out ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"4(b) \nOne mark per mark point, max five \nMP1 \nadd an input (and prompt to ask) for the country to be searched \nMP2 \n\u2026between lines 11 and 12  \nMP3 \n\u2026using a new variable for the input \nMP4 \nAdd an IF statement to check if the current Country array element \nmatches the country being searched \nMP5 \n\u2026between lines 12 and 13 \nMP6 \n\u2026if it does, allow the output in line 13 \/\/ the output in line 13 should \nbe after a THEN  \nMP7 \nIf it does not, check the next element. ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"5 \nOne mark per mark point, max three \nMP1 \nvariables and constants should have meaningful identifiers  \nMP2 \n\u2026so that programmers\/future programmers are able to understand \ntheir purpose  \nMP3 \nthey are both used for data storage  \nMP4 \nconstants store values that never change during the execution of a \nprogram \/\/ by example \nMP5 \nvariables contain values that have been calculated within the \nprogram \/ can change during the execution of the program \/\/ by \nexample ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"6(a) \nOne mark per correct column, max five \nValue \nAverage \nTotal \nCount \nOUTPUT \n0 \n0 \n25 \n25 ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"35 \n60 ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"3 \n63 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"0 \n21 \nTotal is 63 \nAverage is 21 \n0 \n0 \n57 \n57 ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"20 \n77 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"25 \n102 ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"18 \n120 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"0 \n30 \nTotal is 120 \nAverage is 30 \n0 \n0 \n\u22121 ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"6(b) \nOne mark per mark point, max two \nMP1 \nto add together \/ find the average of a batch of numbers  \nMP2 \nthe total and average are output (when the batch is complete\/when \n0 is entered) \nMP3 \nwhen 0 is entered a new batch is started. ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"7 \nOne mark per mark point, max five \nMP1 \nstoring string in Quote \nMP2 \ncorrect assignment for Start \/\/ sending correct start value  \nMP3 \ncorrect assignment for Number \/\/ sending correct number of \ncharacters \nMP4 \nuse of SUBSTRING function with first parameter as Quote, or \nequivalent, plus two other parameters \nMP5 \ncorrect use of LCASE function  \nMP6 \ntwo correct outputs  \nFor example: \nQuote \uf0ac \"Learning Never Exhausts The Mind\" \nStart \uf0ac 25 \nNumber \uf0ac 8 \nOUTPUT SUBSTRING(Quote, Start, Number) \nOUTPUT LCASE(Quote) ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"8 \nOne mark per mark point, max four \nProcedures, max three \nMP1 \nto enable the programmer to write a collection of programming \nstatements under a single identifier  \nMP2 \nto allow modular programs to be created \/\/ to allow procedures to be \nre-used within the program or in other programs  \nMP3 \nto make program creation faster because procedures can be re-used \n\/\/ to enable different programmers to work on different procedures in \nthe same project \nMP4 \nto make programs shorter (than using the repeated code) \/ using less \nduplication of code \/\/ to make programs easier to maintain due to \nbeing shorter. \nParameters, max three \nMP5 \nto pass values from the main program to a procedure \/ function \nMP6 \n\u2026so that they can be used in the procedure \/ function  \nMP7 \nallow the procedure \/ function to be re-used with different data. ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"9(a) \nOne mark for each correct gate, with the correct input(s) as shown. ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"9(b) \nFour marks for eight correct outputs. \nThree marks for six or seven correct outputs. \nTwo marks for four or five correct outputs. \nOne mark for two or three correct outputs \nA \nB \nC \nZ \n0 \n0 \n0 ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"0 \n0 ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 \n0 ","key":23.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"0 ","key":24.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"0 ","key":25.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 ","key":26.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 \n0 \n0 ","key":27.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 \n0 ","key":28.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 ","key":29.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 \n0 \n0 ","key":30.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 ","key":31.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 ","key":32.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"10(a) ","key":33.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"1 \n10(b) \nOne mark for the correct field name \nOne mark for the correct reason \nFor example: \nCode \u2026  \n\u2026Each entry in this field is a unique identifier ","key":34.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"10(c) \nTwo marks for four correct answers. \nOne mark for two or three correct answers. \nField \nData type \nBreed \ntext  \nGender \nBoolean  \nAge \ninteger \nArrived \ndate\/time  ","key":35.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"10(d) \nOne mark for each correct answer \nSELECT \nHorses \nBreedOrigin \nCorrect SQL: \nSELECT Code, Breed \nFROM Horses \nWHERE BreedOrigin = \"Scotland\"; ","key":36.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"11 \nRequirements may be met using a suitable built-in function from the \nprogramming language used (Python, VB.NET or Java) \nTables for AO2 and AO3 are used to award a mark in a suitable band using a \nbest fit approach.  \nMarks are available for:  \n\u2022 \nAO2 (maximum 9 marks) \n\u2022 \nAO3 (maximum 6 marks) \nData Structures required with names as given in the scenario \nThe names underlined must be used as they are provided in the scenario: \nArrays or lists WoodType[], Price[], Customers[], Quotations[] \nRequirements (techniques) \nR1 Input and store customer name, room length and width, with validation of \ninput for room dimensions, including error message and repeated input \n(Input with prompts, range check and iteration). \nR2 Initialise wood arrays. Calculate room area, select and store wood \nrequired. Determine cost of wood type and calculate price of wood to \npurchase. Round and store all data to relevant array (array initialisation, \nrounding, data retrieval from array, calculation and storage of results). \nR3 Output full details: name of customer, choice of wood and quotation price \nwith appropriate messages. Program continues for next customer (Output \nwith messages, iteration of whole program). ","key":37.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"11 \nExample 15-mark answer in pseudocode \n\/\/ declarations not required in the answer \n\/\/ initial population of WoodType[] and Price[] arrays \n\/\/ input and loops are also acceptable \nWoodType[1] \uf0ac \"Laminate\" \nWoodType[2] \uf0ac \"Pine\" \nWoodType[3] \uf0ac \"Oak\" \nPrice[1] \uf0ac 29.99 \nPrice[2] \uf0ac 39.99 \nPrice[3] \uf0ac 54.99 \n\/\/ initialises starting customer in sales arrays \nCurrentCustomer \uf0ac 1 \n\/\/ to allow program to continue to next customer \nCont \uf0ac TRUE \nWHILE Cont DO \n\/\/ input customer name \n    OUTPUT \"Input the customer\u2019s name \" \n    INPUT Customers[CurrentCustomer] \n\/\/ input of room dimensions with validation \n    OUTPUT \"What is the length of your room? \" \n    INPUT RoomLength \n\/\/ validate RoomLength \n    WHILE RoomLength < 1.5 OR RoomLength > 10.0 \n        OUTPUT \"The measurement must be in the range 1.5               \nto 10.0 inclusive, please try again \" \n        INPUT RoomLength \n    ENDWHILE \n    OUTPUT \"What is the width of your room? \" \n    INPUT RoomWidth \n\/\/ validate RoomWidth \n    WHILE RoomWidth < 1.5 OR RoomWidth > 10.0 \n        OUTPUT \"The measurement must be in the range 1.5              \nto 10.0 inclusive, please try again \" \n        INPUT RoomWidth \n    ENDWHILE \n    RoomArea \uf0ac ROUND(RoomLength, 1) * ROUND(RoomWidth, \n1) \n    RoomArea \uf0ac ROUND (RoomArea + 0.5, 0) \n\/\/ show the wood available and prices \n    OUTPUT \"the wood choices available are:\" \n    OUTPUT \"Number    Wood Type   Price($)\" \n    FOR Count \uf0ac 1 TO 3 \n        OUTPUT Count, \"  \", WoodType[Count], \"  \",  ","key":38.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_22.pdf","Answer":"Price[Count] \n    Next Count \n\/\/ input wood choice \n    OUTPUT \"Input a number from 1 to 3 \" \n    INPUT WoodChoice \n\/\/ validate wood choice \n    WHILE WoodChoice < 1 OR WoodChoice > 3 \n        OUTPUT \"Your input is out of range, please try \nagain \" \n        INPUT WoodChoice \n    ENDWHILE \n\/\/ to calculate the total cost of the wood \n    WoodCost \uf0ac RoomArea * Price[WoodChoice] \n\/\/ to store the relevant data in Quotations[] \n    Quotations[CurrentCustomer, 1] \uf0ac RoomLength \n    Quotations[CurrentCustomer, 2] \uf0ac RoomWidth \n    Quotations[CurrentCustomer, 3] \uf0ac RoomArea \n    Quotations[CurrentCustomer, 4] \uf0ac WoodChoice \n    Quotations[CurrentCustomer, 5] \uf0ac WoodCost \n\/\/ final output of quotation \n    OUTPUT \"Customer name: \", Customers[CurrentCustomer] \n    OUTPUT \"The wood you have chosen is: \",  \n            WoodType[WoodChoice] \n    OUTPUT \"Your total price is: \", \nQuotations[CurrentCustomer,5] \n\/\/ ready for next customer \n    CurrentCustomer \uf0ac CurrentCustomer + 1 \n\/\/ resets CurrentCustomer to beginning of array when \narray  \n\/\/ limit reached \n    IF CurrentCustomer > 100 \n        THEN \n          CurrentCustomer \uf0ac 1 \n    ENDIF \nENDWHILE \nMarking Instructions in italics \nAO2:  \nApply knowledge and understanding of the principles and concepts of computer \nscience to a given context, including the analysis and design of computational or \nprogramming problems \n0 \n1-3 \n4-6 \n7-9 \nNo creditable \nresponse. \nAt least one programming \ntechnique has been used. \nAny use of selection, \niteration, counting, \ntotalling, input and output. \nSome programming \ntechniques used are \nappropriate to the \nproblem. \nMore than one technique \nseen applied to the \nscenario, check the list of \ntechniques needed. \nThe range of \nprogramming techniques \nused is appropriate to the \nproblem.  \nAll criteria stated for the \nscenario have been \ncovered by the use of \nappropriate programming \ntechniques, check the list \nof techniques needed. \nSome data has been \nstored but not \nappropriately. \nAny use of variables or \narrays or other language \ndependent data structures \ne.g. Python lists. \nSome of the data \nstructures chosen are \nappropriate and store \nsome of the data required.  \nMore than one data \nstructure used to store \ndata required by the \nscenario.  \nThe data structures \nchosen are appropriate \nand store all the data \nrequired. \nThe data structures used \nstore all the data required \nby the scenario. \nMarking Instructions in italics \nAO3:  \nProvide solutions to problems by:  \n\u2022 \nevaluating computer systems \n\u2022 \nmaking reasoned judgements \n\u2022 \npresenting conclusions \n0 \n1-2 \n3-4 \n5-6 \nNo creditable \nresponse. \nProgram seen without \nrelevant comments. \nProgram seen with some \nrelevant comment(s). \nThe program has been \nfully commented. \nSome identifier names \nused are appropriate. \nSome of the data \nstructures used have \nmeaningful names. \nThe majority of identifiers \nused are appropriately \nnamed. \nMost of the data \nstructures used have \nmeaningful names. \nSuitable identifiers with \nnames meaningful to their \npurpose have been used \nthroughout. \nAll of the data structures \nused have meaningful \nnames. \nThe solution is illogical. \nThe solution contains \nparts that may be illogical. \nThe program is in a \nlogical order. \nThe solution is inaccurate \nin many places. \nSolution contains few \nlines of code with errors \nthat attempt to perform a \ntask given in the scenario. \nThe solution contains \nparts that are inaccurate. \nSolution contains lines of \ncode with some errors \nthat logically perform \ntasks given in the \nscenario. Ignore minor \nsyntax errors. \nThe solution is accurate. \nSolution logically performs \nall the tasks given in the \nscenario. Ignore minor \nsyntax errors. \nThe solution attempts at \nleast one of the \nrequirements. \nSolution contains lines of \ncode that attempt at least \none task given in the \nscenario. \nThe solution attempts to \nmeet most of the \nrequirements. \nSolution contains lines of \ncode that perform most \ntasks given in the \nscenario. \nThe solution meets all the \nrequirements given in the \nquestion. \nSolution performs all the \ntasks given in the \nscenario. ","key":39.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"1 \nA ","key":0.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"2 \nB ","key":1.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"3(a) \nOne mark for each correct line from description to pseudocode keyword \nPseudocode description \nPseudocode keyword ","key":2.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"3(b) \nOne mark for each point (max two) \n\u2022 \ndata is stored permanently \n\u2022 \ndata can be moved to another computer \n\u2022 \nanother copy of data can be made and stored\/\/accessed elsewhere \/\/ backup copy ","key":3.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"OUTPUT \nWRITE \nretrieves data from a file \nREAD \ndisplays data on a screen \nOPEN \nINPUT \nenters data from a keyboard \nstores data in a file \n4(a) \nOne mark for each point  \n\u2022 \ntype check \n\u2022 \nrange check ","key":4.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"4(b) \nOne mark for each point (max five) \n\u2022 \nuse of loop for check \n\u2022 \nchecking for whole number \n\u2022 \nchecking for number greater than or equal to one  \n\u2022 \n\u2026 and less than or equal to six \n\u2022 \nAppropriate error\/reinput message \n\u2022 \nability to reinput value \nExample: \nWHILE Seats < 1 OR Seats > 6 OR Seats <> ROUND(Seats, 0) DO \n    OUTPUT \"Please enter a valid number of seats \" \n    INPUT Seats \nENDWHILE ","key":5.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"4(c) \nOne mark for correct test data, one mark for corresponding reason \nExample: \n7, abnormal data to show that this value would be rejected ","key":6.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"5(a) \nOne mark for each error identified and correction given \n\u2022 \nLine 06 Password should be NewPassword  \n\u2022 \nLine 11 AND should be OR \n\u2022 \nLine 16 INPUT should be OUTPUT ","key":7.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"5(b) \nMax six marks from: \nMax four from: \none mark for data entry with message \none mark for initialisation  \none mark for checking list \/\/ decision box comparing input \nwith array \none mark for updating \/\/ updating the two variables \nposition and found \none mark for loop control \/\/ second decision box \none mark for setting new password to position in list \none mark for outputs \/\/ two outputs \nTwo marks: \none mark for correct use of flow chart symbols \none mark for correct use arrows and labels ","key":8.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"6(a) \nOne mark for correct gate and one mark for correct truth table \nAND \nA \nB \nX \n0 \n0 \n0 \n0 ","key":9.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"0 ","key":10.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"0 \n0 ","key":11.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"1 ","key":12.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"2 \n6(b) \nOne mark for correct gate and one mark for correct truth table \nXOR \/\/ EOR \nA \nB \nX \n0 \n0 \n0 \n0 ","key":13.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"1 ","key":14.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"0 ","key":15.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"1 ","key":16.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"0 ","key":17.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"6(c) \nOne mark for correct gate and one mark for correct truth table \nNOR \nA \nB \nX \n0 \n0 ","key":18.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"0 ","key":19.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"0 ","key":20.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"0 \n0 ","key":21.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"1 \n0 ","key":22.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"6(d) \nOne mark for each correct gate, with the correct input(s) as shown. ","key":23.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"7 \none mark for first description one mark for matching difference max four \n\u2022 \nlocal variables - scope is a defined block of code\/subroutine\/procedure\/function \n\u2022 \nglobal variables \u2013 scope is the whole program \n\u2022 \nlocal variables - value cannot be changed elsewhere in the program \n\u2022 \nglobal variables \u2013 value can be changed anywhere in the program ","key":24.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"8(a) \nAccept \nReject \nPartOK \nError \nOUTPUT \n0 \n0 ","key":25.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":26.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":27.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":28.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"N ","key":29.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":30.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":31.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":32.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":33.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"N ","key":34.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":35.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":36.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Y ","key":37.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"Too many rejected 20% error \nOne mark for each column  ","key":38.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"8(b) \nOne mark for each point max three \n\u2022 \nafter the Input box \/\/ before the first decision box \n\u2022 \ninsert a process box \n\u2022 \nto convert the input to upper case \nOR \n\u2022 \nchange the first decision \/ add another decision box \n\u2022 \nto accept 'y' as well \n\u2022 \nby adding OR PartOK = 'y' ","key":39.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"9(a) \nRecords: 14 \nFields: 5 ","key":40.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"9(b)(i) \nSpecies\/Description ","key":41.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"9(b)(ii) \nLong names that could be easily misspelt \/\/ species or description could be duplicated ","key":42.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"9(b)(iii) \nEasy to validate \/\/ always unique ","key":43.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"9(c) \nOne mark for each correct row or column \nTrue silver \nwhite laced top half and black lower half \nBrown eared   \nbrown with ear tufts ","key":44.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"9(d) \nOne mark for each correct addition \nSELECT Species \nFROM PheasantList \nWHERE Breeding \nor  \nWHERE Young = 0 \nAND Young = 0; \nAND Breeding; ","key":45.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"10 \n\u2022 \nAO2 (maximum 9 marks) \n\u2022 \nAO3 (maximum 6 marks) \nData Structures required names shown underlined must be used as given in the scenario \n2D Array or list Temperatures  \nVariables MaxDay, MinDay, AvDay, MaxWeek, MinWeek, AvWeek \nRequirements (techniques) \nR1 Find maximum and minimum temperatures for each day and calculates the average daily temperature (searching, \ntotalling) \nR2 Find maximum and minimum temperatures for week and calculates the average weekly temperature (nested \nsearching, totalling) \nR3 outputs for each day name, the rounded values for maximum temperature, minimum temperatures and average \ntemperature. Outputs for the week the rounded values for maximum temperature, minimum temperatures and average \ntemperature (output with appropriate messages and rounded values) \nExample 15-mark answer in pseudocode: \n\/\/ meaningful identifier names and appropriate data structures to store the data required \nDECLARE DayCounter, HourCounter : INTEGER \nDECLARE AvDay, AvWeek, MaxDay, MinDay, MaxWeek, MinWeek : REAL \nDECLARE DayTotal, WeekTotal : REAL \nDECLARE Day : STRING \nCONSTANT Hours \uf0ac 24 \nCONSTANT Days \uf0ac 7 ","key":46.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"10 \nMaxWeek \uf0ac -1000\/\/ initialise max and min temperatures and total for the week \nMinWeek \uf0ac 1000 \nWeekTotal \uf0ac 0 \nFOR DayCounter \uf0ac 0 TO Days - 1 \n    MaxDay \uf0ac -1000\/\/ initialise max and min temperatures and total for each day \n    MinDay \uf0ac 1000  \n    DayTotal \uf0ac 0 \n    FOR HourCounter \uf0ac 0 TO Hours - 1 \n        DayTotal \uf0ac DayTotal + Temperatures(HourCounter, DayCounter)  \n          \/\/ update total maximum and minimum \n        IF Temperatures(HourCounter, DayCounter) > MaxDay \n          THEN  \n            MaxDay \uf0ac Temperatures(HourCounter, DayCounter) \n        ENDIF \n        IF Temperatures(HourCounter, DayCounter) < MinDay \n          THEN  \n            MinDay \uf0ac Temperatures(HourCounter, DayCounter) \n        ENDIF \n    NEXT HourCounter \n    CASE OF DayCounter  \/\/ select message for day \n      0 : Day \uf0ac \"Monday\" \n      1 : Day \uf0ac \"Tuesday\" \n      2 : Day \uf0ac \"Wednesday\" \n      3 : Day \uf0ac \"Thursday\" \n      4 : Day \uf0ac \"Friday\" \n      5 : Day \uf0ac \"Saturday\" \n      6 : Day \uf0ac \"Sunday\" \n    ENDCASE \n    DayAverage \uf0ac DayTotal \/ Hours  \/\/ output results for day \n    OUTPUT Day  \/\/ Results from a day \n    OUTPUT \"Maximum temperature \", MaxDay \n    OUTPUT \"Minimum temperature \", MinDay \n    OUTPUT \"Average temperature \", ROUND(DayAverage,2) ","key":47.0},{"Paper_No":0,"Question_No":0,"Question":0,"Marks":0,"Paper_No_Dropped":"0478_w23_ms_23.pdf","Answer":"    IF MaxDay > MaxWeek  \/\/ update total maximum and minimum \n      THEN \n        MaxWeek \uf0ac MaxDay \n    ENDIF \n    IF MinDay > MinWeek \n      THEN \n        MinWeek \uf0ac MinDay \n    ENDIF \n    WeekTotal \uf0ac WeekTotal + DayTotal  \/\/ update total for week \nNEXT DayCounter \n    WeekAverage \uf0ac WeekTotal \/ Days \n    OUTPUT \"Maximum temperature for week \", MaxWeek\/\/ output results for week \n    OUTPUT \"Minimum temperature for week \", MinWeek \n    OUTPUT \"Average temperature for Week \", ROUND(WeekAverage,2) \nMarking Instructions in italics \nAO2:  \nApply knowledge and understanding of the principles and concepts of computer science to a given context, \nincluding the analysis and  design of computational or programming problems \n0 \n1-3 \n4-6 \n7-9 \nNo creditable \nresponse. \nAt least one programming \ntechnique has been used. \nAny use of selection, iteration, \ncounting, totalling, input and \noutput. \nSome programming techniques used \nare appropriate to the problem. \nMore than one technique seen \napplied to the scenario, check the list \nof techniques needed. \nThe range of programming techniques \nused is appropriate to the problem.   \nAll criteria stated for the scenario have \nbeen covered by the use of \nappropriate programming techniques, \ncheck list of techniques needed. \nSome data has been stored but \nnot appropriately. \nAny use of variables or arrays or \nother language dependent data \nstructures e.g. Python lists. \nSome of the data structures chosen \nare appropriate and store some of the \ndata required.   \nMore than one data structure used to \nstore data required by the scenario. \nThe data structures chosen are \nappropriate and store all the data \nrequired. \nThe data structures used store all the \ndata required by the scenario. \nMarking Instructions in italics \nAO3:  \nProvide solutions to problems by:  \nevaluating computer systems \nmaking reasoned judgements \npresenting conclusions \n0 \n1-2 \n3-4 \n5-6 \nNo creditable \nresponse. \nProgram seen without relevant \ncomments. \nProgram seen with some relevant \ncomment(s). \nThe program has been fully \ncommented. \nSome identifier names used are \nappropriate. \nSome of the data structures \nused have meaningful names. \nThe majority of identifiers used are \nappropriately named. \nMost of the data structures used have \nmeaningful names. \nSuitable identifiers with names \nmeaningful to their purpose have been \nused throughout. \nAll of the data structures used have \nmeaningful names. \nThe solution is illogical. \nThe solution contains parts that may \nbe illogical. \nThe program is in a logical order. \nThe solution is inaccurate in \nmany places. \nSolution contains few lines of \ncode with errors that attempt to \nperform a task given in the \nscenario. \nThe solution contains parts that are \ninaccurate. \nSolution contains lines of code with \nsome errors that logically perform \ntasks given in the scenario. Ignore \nminor syntax errors. \nThe solution is accurate. \nSolution logically performs all the \ntasks given in the scenario. Ignore \nminor syntax errors. \nThe solution attempts at least \none of the requirements. \nSolution contains lines of code \nthat attempt at least one task \ngiven in the scenario. \nThe solution attempts to meet most of \nthe requirements. \nSolution contains lines of code that \nperform most tasks given in the \nscenario. \nThe solution meets all the \nrequirements given in the question. \nSolution performs all the tasks given in \nthe scenario. ","key":48.0}]